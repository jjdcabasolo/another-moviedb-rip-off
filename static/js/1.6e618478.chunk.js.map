{"version":3,"sources":["components/movie/MovieDetails/MovieHeader.js","components/movie/MovieDetails/CastAvatar.js","components/movie/MovieDetails/MovieCast.js","components/movie/MovieDetails/CrewAvatarList.js","components/movie/MovieDetails/Statistic.js","components/movie/MovieDetails/MovieCrew.js","assets/images/013-facebook.js","assets/images/014-instagram.js","assets/images/004-twitter.js","assets/images/018-youtube.js","components/movie/MovieDetails/MovieLinks.js","components/movie/MovieDetails/MovieBudget.js","components/movie/MovieDetails/MovieProduction.js","components/movie/MovieDetails/MovieCollection.js","components/movie/MovieDetails/Section.js","containers/Movies.js"],"names":["useStyles","makeStyles","theme","note","padding","spacing","title","fontWeight","chipContainer","margin","chip","description","marginTop","MovieHeader","classes","useTheme","isMobile","useMediaQuery","breakpoints","only","movie","useSelector","state","movies","runtime","status","release_date","genres","overview","original_title","hasRuntime","runtimeHours","runtimeMinutes","Grid","item","xs","container","Typography","variant","className","alignItems","Chip","label","size","moment","format","length","map","i","name","subtitle","typography","fontWeightMedium","avatar","width","height","text","CastAvatar","content","col","justify","direction","wrap","Avatar","src","profile_path","MOVIE_DRAWER_TMDB_IMAGE_PREFIX","BrokenImage","fontSize","align","character","vairant","color","MovieCast","isLowerTablet","isUpperTablet","isDesktop","up","cast","useState","showMore","setShowMore","cardCol","setCardCol","maxVisibleCards","useEffect","getCastCol","slice","Button","onClick","demo","backgroundColor","palette","background","paper","h6","CrewAvatarList","List","disablePadding","crew","doesPathExist","ListItem","ListItemAvatar","alt","ListItemText","primary","secondary","job","icon","marginLeft","overline","divider","cols3Adjustment","maxWidth","flexBasis","Statistic","count","isTotal","down","clsx","Tooltip","enterTouchDelay","leaveTouchDelay","HelpTwoTone","Divider","orientation","MovieCrew","crewMembers","setCrewMembers","masonryConfig","setMasonryConfig","getCrewCol","crewCol","setCrewCol","lighting","visualEffects","getCrewMembers","director","writer","producer","executiveProducer","composer","cinematography","editor","costume","makeup","finalCrew","production","CREW_TO_DISPLAY","forEach","e","identifier","a","colItem","members","filter","c","push","constructMasonryGrid","hasLighting","hasVE","renderStatistic","ComponentLoader","viewBox","xmlns","d","logo","MovieLinks","darkMode","sidebar","facebook","instagram","twitter","youtube","imdb","tmdb","renderSocialNetworkLinks","link","isImg","IconButton","window","open","SvgIcon","renderImgLogo","logoDark","IMDB_LOGO_DARK","IMDB_LOGO","TMDB_LOGO_DARK","TMDB_LOGO","Link","href","MovieBudget","budget","revenue","income","hasIncome","toMillionsOrBillions","renderStatistics","MovieProduction","production_companies","company","origin_country","collectionImg","paddingTop","typoOverlay","position","common","white","pointerEvents","overflow","backgroundImage","MovieCollection","belongs_to_collection","imagePath","backdrop_path","poster_path","brokenImgContainer","Card","CardActionArea","CardMedia","image","gutterBottom","cardTitle","noWrap","Section","children","visible","root","trailer","between","Movies","isTabletAbove","isMovieLoading","dispatch","useDispatch","isLoaded","setIsLoaded","movieId","useParams","getMovieDetails","decryptKey","response","moviesActions","setActiveMovie","setDetailsLoading","error","data","status_code","WithNoteContainer","renderDivider","undefined","Note","details","NOTE_NO_SELECTED_MOVIE","NOTE_MOVIE_NOT_FOUND","Object","keys","constructor","controls","light","pip","url"],"mappings":"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","file":"static/js/1.6e618478.chunk.js","sourcesContent":["import React from 'react';\n\nimport moment from 'moment';\nimport { useSelector } from 'react-redux';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { Chip, Grid, Typography, useMediaQuery } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  note: {\n    padding: theme.spacing(8, 2),\n  },\n  title: {\n    fontWeight: 600,\n  },\n  chipContainer: {\n    margin: theme.spacing(1, 0),\n  },\n  chip: {\n    margin: theme.spacing(0.25, 0.5, 0.25, 0),\n  },\n  description: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst MovieHeader = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.only('xs'));\n\n  const movie = useSelector(state => state.movies.movie);\n\n  const { runtime, title, status, release_date, genres, overview, original_title } = movie;\n\n  const hasRuntime = runtime;\n  const runtimeHours = ~~(runtime / 60);\n  const runtimeMinutes = runtime % 60;\n\n  return (\n    <Grid item xs={12} container spacing={1}>\n      <Grid item xs={12}>\n        <Typography variant={isMobile ? \"h4\" : \"h2\"} className={classes.title}>{title || original_title}</Typography>\n      </Grid>\n      <Grid item xs={12} container alignItems=\"center\">\n        { status === 'Released' && (\n          <Grid item>\n            <Chip label=\"Released\" variant=\"outlined\" size={isMobile ? \"small\" : \"medium\"} />\n            &nbsp;\n          </Grid>\n        )}\n        <Grid item>\n          <Typography variant={isMobile ? \"body1\" : \"h5\"}>\n            &middot;&nbsp;\n            {moment(release_date).format('YYYY')}&nbsp;\n            &middot;&nbsp;\n            {hasRuntime ? `${runtimeHours}hr ${runtimeMinutes}min` : 'No runtime yet.'}\n          </Typography>\n        </Grid>\n      </Grid>\n      { genres.length > 0 && (\n        <Grid item xs={12}>\n          { genres.map(i => (\n            <Chip label={i.name} className={classes.chip} size={isMobile ? \"small\" : \"medium\"} />\n          )) }\n        </Grid>\n      )}\n      <Grid item xs={12} className={classes.description}>\n        <Typography variant=\"body1\">{overview}</Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default MovieHeader;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Avatar, Grid, Typography } from '@material-ui/core';\nimport { BrokenImage } from '@material-ui/icons';\n\nimport { MOVIE_DRAWER_TMDB_IMAGE_PREFIX } from '../../../constants';\n\nconst useStyles = makeStyles(theme => ({\n  subtitle: {\n    fontWeight: '400',\n  },\n  title: {\n    fontWeight: theme.typography.fontWeightMedium,\n  },\n  avatar: {\n    width: theme.spacing(12),\n    height: theme.spacing(12),\n  },\n  text: {\n    marginTop: theme.spacing(1),\n  },\n}));\n\nconst CastAvatar = ({ content, col }) => {\n  const classes = useStyles();\n\n  if (!content) return null;\n\n  return (\n    <Grid item xs={col} container justify=\"center\" alignItems=\"center\" direction=\"column\" wrap=\"nowrap\">\n      <Grid item>\n        <Avatar\n          src={content.profile_path !== null ? `${MOVIE_DRAWER_TMDB_IMAGE_PREFIX}/w780${content.profile_path}` : ''}\n          className={classes.avatar}\n        >\n          {content.profile_path === null && <BrokenImage fontSize=\"large\" />}\n        </Avatar>\n      </Grid>\n      <Grid item className={classes.text}>      \n        <Typography variant=\"body1\" className={classes.title} align=\"center\">\n          {content.character}\n        </Typography>\n      </Grid>\n      <Grid item>      \n        <Typography vairant=\"body2\" className={classes.subtitle} align=\"center\" color=\"textSecondary\">\n          {content.name}\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default CastAvatar;\n","import React, { useState, useEffect } from 'react';\n\nimport { useSelector } from 'react-redux';\n\nimport { useTheme } from '@material-ui/core/styles';\nimport { Grid, Button, useMediaQuery } from '@material-ui/core';\n\nimport CastAvatar from './CastAvatar';\n\nimport { getCastCol } from '../../../utils/functions';\n\nconst MovieCast = () => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.only('xs'));\n  const isLowerTablet = useMediaQuery(theme.breakpoints.only('sm'));\n  const isUpperTablet = useMediaQuery(theme.breakpoints.only('md'));\n  const isDesktop = useMediaQuery(theme.breakpoints.up('lg'));\n\n  const movie = useSelector(state => state.movies.movie);\n\n  const { cast } = movie;\n\n  const [showMore, setShowMore] = useState(false);\n  const [cardCol, setCardCol] = useState(0);\n\n  const maxVisibleCards = cardCol * 2;\n\n  useEffect(() => {\n    setCardCol(getCastCol(isMobile, isLowerTablet));\n  }, [isMobile, isLowerTablet, isUpperTablet, isDesktop]);\n\n  return (\n    <>\n      <Grid container spacing={2}>\n        {cast.slice(0, maxVisibleCards).map(cast => (\n          <CastAvatar content={cast} col={12 / cardCol} />\n        ))}\n        { showMore && (\n          cast.slice(maxVisibleCards, cast.length).map(cast => (\n            <CastAvatar content={cast} col={12 / cardCol} />\n          ))\n        )}\n        <Grid item xs={12} container justify=\"flex-end\">\n          <Button onClick={() => setShowMore(!showMore)}>\n            {showMore ? 'Show less' : 'Show all'}\n          </Button>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default MovieCast;\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Grid,\n  List,\n  ListItem,\n  ListItemAvatar,\n  Avatar,\n  ListItemText,\n  Typography,\n} from '@material-ui/core';\nimport { BrokenImage } from '@material-ui/icons';\n\nimport { MOVIE_DRAWER_TMDB_IMAGE_PREFIX } from '../../../constants';\n\nconst useStyles = makeStyles(theme => ({\n  demo: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  title: {\n    fontWeight: theme.typography.h6.fontWeight,\n  },\n}));\n\nconst CrewAvatarList = ({ title, content }) => {\n  const classes = useStyles();\n\n  return (\n    <Grid item xs={12}>\n      <Typography variant=\"body1\" className={classes.title}>\n        {title}\n      </Typography>\n      <List disablePadding>\n        { content.map(crew => {\n          const doesPathExist = crew.profile_path !== null;\n          return (\n            <ListItem>\n              <ListItemAvatar>\n                <Avatar\n                  alt={doesPathExist ? `Image not loading? Visit ${crew.profile_path} to view.` : `${crew.name}'s avatar.`}\n                  src={doesPathExist ? `${MOVIE_DRAWER_TMDB_IMAGE_PREFIX}/w154${crew.profile_path}` : ''}\n                >\n                  {!doesPathExist && <BrokenImage />}\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={crew.name} secondary={crew.job} />\n            </ListItem>\n          );\n        })}\n      </List>\n    </Grid>\n  );\n};\n\nexport default CrewAvatarList;\n","import React from 'react';\n\nimport clsx from 'clsx';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { Divider, Grid, Tooltip, Typography, useMediaQuery } from '@material-ui/core';\nimport { HelpTwoTone } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    marginLeft: theme.spacing(1),\n    fontSize: theme.typography.overline.fontSize,\n  },\n  divider: {\n    height: theme.spacing(4),\n  },\n  cols3Adjustment: {\n    maxWidth: '33%',\n    flexBasis: '33%',\n  },\n}));\n\nconst Statistic = ({ count, col, label, isTotal, divider }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const xs = col - 1;\n  return (\n    <>\n      <Grid\n        item\n        xs={xs}\n        container\n        justify=\"center\"\n        alignItems=\"center\"\n        direction=\"column\"\n        className={clsx(\n          { [classes.cols3Adjustment]: xs === 3 },\n        )}\n      >\n        <Grid item>\n          <Typography variant={isMobile ? \"h5\" : \"h4\"}>{count}</Typography>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"overline\" color=\"textSecondary\">\n            {label}\n            {isTotal && (\n              <Tooltip\n                enterTouchDelay={0}\n                leaveTouchDelay={2500}\n                title=\"Crew count is wholly based on the efforts of the TMDb community. It may or may not reflect the exact head count.\"\n              >\n                <HelpTwoTone className={classes.icon} />\n              </Tooltip>\n            )}\n          </Typography>\n        </Grid>\n      </Grid>\n      {divider && (\n        <Grid item>\n          <Divider orientation=\"vertical\" className={classes.divider} />\n        </Grid>\n      )}\n    </>\n  );\n};\n\nexport default Statistic;\n","import React, { useState, useEffect } from 'react';\n\nimport { useSelector } from 'react-redux';\n\nimport { useTheme } from '@material-ui/core/styles';\nimport { Grid, Button, useMediaQuery } from '@material-ui/core';\n\nimport CrewAvatarList from './CrewAvatarList';\nimport Statistic from './Statistic';\nimport ComponentLoader from '../../common/ComponentLoader';\n\nimport { getCrewMembers, getCrewCol } from '../../../utils/functions';\n\nimport { CREW_TO_DISPLAY } from '../../../constants';\n\nconst MovieCrew = () => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.only('xs'));\n  const isLowerTablet = useMediaQuery(theme.breakpoints.only('sm'));\n  const isUpperTablet = useMediaQuery(theme.breakpoints.only('md'));\n  const isDesktop = useMediaQuery(theme.breakpoints.up('lg'));\n\n  const movie = useSelector(state => state.movies.movie);\n\n  const { crew } = movie;\n\n  const [crewMembers, setCrewMembers] = useState({});\n  const [masonryConfig, setMasonryConfig] = useState([]);\n  const [showMore, setShowMore] = useState(false);\n  const [crewCol, setCrewCol] = useState(getCrewCol());\n\n  const {lighting, visualEffects} = crewMembers;\n\n  useEffect(() => {\n    setCrewCol(getCrewCol(isMobile, isLowerTablet));\n  }, [isMobile, isLowerTablet, isUpperTablet, isDesktop]);\n\n  useEffect(() => {\n    const { crew } = movie;\n    const [director] = getCrewMembers(crew, 'directing', ['director']);\n    const [writer] = getCrewMembers(crew, 'writing');\n    const [producer, executiveProducer] = getCrewMembers(crew, 'production', ['producer', 'executive producer']);\n    const [composer] = getCrewMembers(crew, 'sound', ['original music composer']);\n    const [cinematography] = getCrewMembers(crew, 'camera', ['director of photography']);\n    const [editor] = getCrewMembers(crew, 'editing', ['editor']);\n    const [costume, makeup] = getCrewMembers(crew, 'costume & make-up', ['costume design', 'makeup artist']);\n    const [lighting] = getCrewMembers(crew, 'lighting');\n    const [visualEffects] = getCrewMembers(crew, 'visual effects');\n    const production = [...producer, ...executiveProducer];\n    const finalCrew = {director, writer, production: production, composer, cinematography, editor, costume, makeup, lighting, visualEffects};\n    setCrewMembers(finalCrew);\n\n    setMasonryConfig([]);\n    CREW_TO_DISPLAY.forEach(e => {\n      if (finalCrew[e.identifier].length > 0) setMasonryConfig(a => [...a, e.identifier]);\n    });\n  }, [movie]);\n\n  const constructMasonryGrid = () => {\n    const col = [];\n    for (let i = 0; i < crewCol; ++i) {\n      const colItem = [];\n      for (let a = i; a < masonryConfig.length; a += crewCol) {\n        if (!showMore) {\n          if (masonryConfig[a] === 'production'\n          || masonryConfig[a] === 'composer'\n          || masonryConfig[a] === 'cinematography'\n          || masonryConfig[a] === 'editor'\n          || masonryConfig[a] === 'costume'\n          || masonryConfig[a] === 'makeup') break;\n        }\n        const members = crewMembers[masonryConfig[a]];\n        const title = CREW_TO_DISPLAY.filter(c => c.identifier === masonryConfig[a])[0];\n        colItem.push(<CrewAvatarList title={title.label(members.length)} content={members} />);\n      }\n      col.push(<Grid item xs={12 / crewCol}>{colItem}</Grid>);\n    }\n    return col;\n  };\n\n  const renderStatistic = () => {\n    const hasLighting = lighting.length > 0;\n    const hasVE = visualEffects.length > 0;\n    let count = 1;\n    if (hasLighting) count++;\n    if (hasVE) count++;\n    const col = 12 / count;\n    return [\n      (hasLighting && <Statistic col={col} count={lighting.length} label=\"Lighting\" divider />),\n      (hasVE && <Statistic col={col} count={visualEffects.length} label=\"VFX\" divider /> ),\n      <Statistic col={col} count={crew.length} label=\"Total\" isTotal />,\n    ];\n  };\n\n  if (!('director' in crewMembers)) return <ComponentLoader />;\n\n  return (\n    <>\n      <Grid container spacing={2}>\n        { constructMasonryGrid() }\n        { showMore\n          ? <Grid item container justify=\"center\" alignItems=\"center\">{renderStatistic()}</Grid>\n          : <Statistic count={crew.length} label=\"Total Crew\" isTotal />\n        }\n        <Grid item xs={12} container justify=\"flex-end\">\n          <Button onClick={() => setShowMore(!showMore)}>\n            {showMore ? 'Show less' : 'Show all'}\n          </Button>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default MovieCrew;\n","import React from 'react';\nexport default () => <svg viewBox=\"-110 1 511 511.99996\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m180 512h-81.992188c-13.695312 0-24.835937-11.140625-24.835937-24.835938v-184.9375h-47.835937c-13.695313 0-24.835938-11.144531-24.835938-24.835937v-79.246094c0-13.695312 11.140625-24.835937 24.835938-24.835937h47.835937v-39.683594c0-39.347656 12.355469-72.824219 35.726563-96.804688 23.476562-24.089843 56.285156-36.820312 94.878906-36.820312l62.53125.101562c13.671875.023438 24.792968 11.164063 24.792968 24.835938v73.578125c0 13.695313-11.136718 24.835937-24.828124 24.835937l-42.101563.015626c-12.839844 0-16.109375 2.574218-16.808594 3.363281-1.152343 1.308593-2.523437 5.007812-2.523437 15.222656v31.351563h58.269531c4.386719 0 8.636719 1.082031 12.289063 3.121093 7.878906 4.402344 12.777343 12.726563 12.777343 21.722657l-.03125 79.246093c0 13.6875-11.140625 24.828125-24.835937 24.828125h-58.46875v184.941406c0 13.695313-11.144532 24.835938-24.839844 24.835938zm-76.8125-30.015625h71.632812v-193.195313c0-9.144531 7.441407-16.582031 16.582032-16.582031h66.726562l.027344-68.882812h-66.757812c-9.140626 0-16.578126-7.4375-16.578126-16.582031v-44.789063c0-11.726563 1.191407-25.0625 10.042969-35.085937 10.695313-12.117188 27.550781-13.515626 39.300781-13.515626l36.921876-.015624v-63.226563l-57.332032-.09375c-62.023437 0-100.566406 39.703125-100.566406 103.609375v53.117188c0 9.140624-7.4375 16.582031-16.578125 16.582031h-56.09375v68.882812h56.09375c9.140625 0 16.578125 7.4375 16.578125 16.582031zm163.0625-451.867187h.003906zm0 0\"/></svg>","import React from 'react';\nexport default () => <svg viewBox=\"0 0 512.00096 512.00096\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m373.40625 0h-234.8125c-76.421875 0-138.59375 62.171875-138.59375 138.59375v234.816406c0 76.417969 62.171875 138.589844 138.59375 138.589844h234.816406c76.417969 0 138.589844-62.171875 138.589844-138.589844v-234.816406c0-76.421875-62.171875-138.59375-138.59375-138.59375zm108.578125 373.410156c0 59.867188-48.707031 108.574219-108.578125 108.574219h-234.8125c-59.871094 0-108.578125-48.707031-108.578125-108.574219v-234.816406c0-59.871094 48.707031-108.578125 108.578125-108.578125h234.816406c59.867188 0 108.574219 48.707031 108.574219 108.578125zm0 0\"/><path d=\"m256 116.003906c-77.195312 0-139.996094 62.800782-139.996094 139.996094s62.800782 139.996094 139.996094 139.996094 139.996094-62.800782 139.996094-139.996094-62.800782-139.996094-139.996094-139.996094zm0 249.976563c-60.640625 0-109.980469-49.335938-109.980469-109.980469 0-60.640625 49.339844-109.980469 109.980469-109.980469 60.644531 0 109.980469 49.339844 109.980469 109.980469 0 60.644531-49.335938 109.980469-109.980469 109.980469zm0 0\"/><path d=\"m399.34375 66.285156c-22.8125 0-41.367188 18.558594-41.367188 41.367188 0 22.8125 18.554688 41.371094 41.367188 41.371094s41.371094-18.558594 41.371094-41.371094-18.558594-41.367188-41.371094-41.367188zm0 52.71875c-6.257812 0-11.351562-5.09375-11.351562-11.351562 0-6.261719 5.09375-11.351563 11.351562-11.351563 6.261719 0 11.355469 5.089844 11.355469 11.351563 0 6.257812-5.09375 11.351562-11.355469 11.351562zm0 0\"/></svg>","import React from 'react';\nexport default () => <svg viewBox=\"0 -45 512.00013 512\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m194.816406 422.710938c-85.453125 0-152.992187-14.929688-185.304687-40.953126l-.628907-.507812-.570312-.570312c-7.675781-7.679688-10.191406-17.753907-6.894531-27.636719l.300781-.820313c4-10.003906 13.800781-16.738281 24.421875-16.800781 21.859375-.378906 40.984375-2.984375 58.339844-8.042969-27.683594-12.875-46.914063-35.167968-58.355469-67.433594-3.847656-10.0625-.527344-21.21875 8.339844-27.871093 2.1875-1.644531 4.660156-2.886719 7.277344-3.71875-15.382813-17.757813-26.746094-37.964844-33.109376-59.335938l-.199218-.664062-.136719-.679688c-2.160156-10.808593 2.671875-21.921875 11.527344-26.707031 3.714843-2.132812 7.75-3.238281 11.800781-3.332031-4.367188-9.40625-7.542969-19.0625-9.425781-28.777344-5.226563-26.921875-.914063-53.910156 12.8125-80.214844l3.175781-6.351562c2.542969-5.082031 7.402344-8.652344 13.003906-9.5625 5.601563-.90625 11.34375.945312 15.355469 4.957031l5.785156 5.792969c45.703125 47.914062 86.640625 70.648437 157.417969 86.203125 3.160156-27.167969 14.90625-52.421875 33.855469-72.296875 22.550781-23.648438 52.664062-36.917969 84.792969-37.371094h.210937c23.441406 0 52.519531 13.382813 70.105469 22.820313 15.085937-4.9375 33.261718-12.582032 52.121094-20.664063 8.824218-4.140625 19.703124-2.2460938 26.640624 4.691406 6.800782 6.800781 8.6875 16.390625 5.078126 25.710938-1.371094 3.816406-2.925782 7.5625-4.65625 11.226562 2.582031 1.183594 4.945312 2.789063 6.941406 4.785157 6.035156 6.035156 8.550781 15.480468 6.40625 24.066406l-.230469.816406c-7.226563 23.289062-21.109375 42.257812-39.46875 54.164062-3.066406 163.285157-126.027344 295.078126-276.730469 295.078126zm-156.511718-57.675782c30.449218 17.226563 88.476562 27.648438 156.511718 27.648438 65.410156 0 127.136719-28.082032 173.804688-79.074219 47.050781-51.410156 72.960937-119.679687 72.960937-192.234375v-.816406c0-6.570313 3.617188-12.566406 9.4375-15.652344 11.808594-6.253906 21.371094-16.90625 27.589844-30.527344-6.414063 1.011719-12.933594-1.5625-16.929687-6.929687-4.644532-6.238281-4.695313-14.664063-.128907-20.957031 2.464844-3.398438 4.699219-6.933594 6.691407-10.589844-16.285157 6.839844-31.75 12.972656-45.175782 17.046875-4.878906 1.476562-10.316406.898437-14.773437-1.589844-23.902344-13.316406-46.164063-21.277344-59.585938-21.316406-49.527343.757812-89.796875 43.175781-89.796875 94.605469 0 5.316406-2.359375 10.300781-6.464844 13.679687-4.109374 3.375-9.453124 4.726563-14.671874 3.695313-81.609376-16.078126-129.96875-40.1875-180.257813-90.722657-7.207031 17.269531-9.175781 34.664063-5.84375 51.839844 3.378906 17.398437 12.367187 34.832031 25.996094 50.414063 5.179687 5.914062 5.867187 14.375 1.710937 21.050781-4.140625 6.652343-12.011718 9.761719-19.578125 7.734375-5.914062-1.585938-11.351562-3.667969-16.507812-6.34375 10.503906 22.816406 28.570312 43.917968 51.28125 59.480468 6.582031 4.511719 9.332031 12.921876 6.691406 20.453126-2.644531 7.542968-10.03125 12.398437-18.015625 11.804687-8.699219-.644531-16.40625-2.296875-23.5-5.082031 12.734375 25.933594 33.082031 40.203125 64.429688 45.65625 7.464843 1.300781 13.277343 7.195312 14.464843 14.667968 1.191407 7.472657-2.507812 14.878907-9.199219 18.429688-26.71875 14.164062-55.921874 21.765625-91.140624 23.628906zm0 0\"/></svg>","import React from 'react';\nexport default () => <svg viewBox=\"0 -62 512.00199 512\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m334.808594 170.992188-113.113282-61.890626c-6.503906-3.558593-14.191406-3.425781-20.566406.351563-6.378906 3.78125-10.183594 10.460937-10.183594 17.875v122.71875c0 7.378906 3.78125 14.046875 10.117188 17.832031 3.308594 1.976563 6.976562 2.96875 10.652344 2.96875 3.367187 0 6.742187-.832031 9.847656-2.503906l113.117188-60.824219c6.714843-3.613281 10.90625-10.59375 10.9375-18.222656.027343-7.628906-4.113282-14.640625-10.808594-18.304687zm-113.859375 63.617187v-91.71875l84.539062 46.257813zm0 0\"/><path d=\"m508.234375 91.527344-.023437-.234375c-.433594-4.121094-4.75-40.777344-22.570313-59.421875-20.597656-21.929688-43.949219-24.59375-55.179687-25.871094-.929688-.105469-1.78125-.203125-2.542969-.304688l-.894531-.09375c-67.6875-4.921874-169.910157-5.5937495-170.933594-5.59765575l-.089844-.00390625-.089844.00390625c-1.023437.00390625-103.246094.67578175-171.542968 5.59765575l-.902344.09375c-.726563.097657-1.527344.1875-2.398438.289063-11.101562 1.28125-34.203125 3.949219-54.859375 26.671875-16.972656 18.445312-21.878906 54.316406-22.382812 58.347656l-.058594.523438c-.152344 1.714844-3.765625 42.539062-3.765625 83.523437v38.3125c0 40.984375 3.613281 81.808594 3.765625 83.527344l.027344.257813c.433593 4.054687 4.746093 40.039062 22.484375 58.691406 19.367187 21.195312 43.855468 24 57.027344 25.507812 2.082031.238282 3.875.441406 5.097656.65625l1.183594.164063c39.082031 3.71875 161.617187 5.550781 166.8125 5.625l.15625.003906.15625-.003906c1.023437-.003907 103.242187-.675781 170.929687-5.597657l.894531-.09375c.855469-.113281 1.816406-.214843 2.871094-.324218 11.039062-1.171875 34.015625-3.605469 54.386719-26.019532 16.972656-18.449218 21.882812-54.320312 22.382812-58.347656l.058594-.523437c.152344-1.71875 3.769531-42.539063 3.769531-83.523438v-38.3125c-.003906-40.984375-3.617187-81.804687-3.769531-83.523437zm-26.238281 121.835937c0 37.933594-3.3125 77-3.625 80.585938-1.273438 9.878906-6.449219 32.574219-14.71875 41.5625-12.75 14.027343-25.847656 15.417969-35.410156 16.429687-1.15625.121094-2.226563.238282-3.195313.359375-65.46875 4.734375-163.832031 5.460938-168.363281 5.488281-5.082032-.074218-125.824219-1.921874-163.714844-5.441406-1.941406-.316406-4.039062-.558594-6.25-.808594-11.214844-1.285156-26.566406-3.042968-38.371094-16.027343l-.277344-.296875c-8.125-8.464844-13.152343-29.6875-14.429687-41.148438-.238281-2.710937-3.636719-42.238281-3.636719-80.703125v-38.3125c0-37.890625 3.304688-76.914062 3.625-80.574219 1.519532-11.636718 6.792969-32.957031 14.71875-41.574218 13.140625-14.453125 26.996094-16.054688 36.160156-17.113282.875-.101562 1.691407-.195312 2.445313-.292968 66.421875-4.757813 165.492187-5.464844 169.046875-5.492188 3.554688.023438 102.589844.734375 168.421875 5.492188.808594.101562 1.691406.203125 2.640625.3125 9.425781 1.074218 23.671875 2.699218 36.746094 16.644531l.121094.128906c8.125 8.464844 13.152343 30.058594 14.429687 41.75.226563 2.558594 3.636719 42.171875 3.636719 80.71875zm0 0\"/></svg>","import React from 'react';\n\nimport { useSelector } from 'react-redux';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, IconButton, Typography, Link, SvgIcon } from '@material-ui/core';\n\nimport Facebook from '../../../assets/images/013-facebook';\nimport Instagram from '../../../assets/images/014-instagram';\nimport Twitter from '../../../assets/images/004-twitter';\nimport YouTube from '../../../assets/images/018-youtube';\n\nimport { \n  IMDB_LOGO_DARK,\n  IMDB_LOGO,\n  TMDB_LOGO_DARK,\n  TMDB_LOGO,\n} from '../../../constants';\n\nconst useStyles = makeStyles(() => ({\n  logo: {\n    width: '1em',\n  },\n}));\n\nconst MovieLinks = () => {\n  const classes = useStyles();\n\n  const darkMode = useSelector(state => state.sidebar.darkMode);\n  const movie = useSelector(state => state.movies.movie);\n\n  const { facebook, instagram, twitter, youtube, imdb, tmdb } = movie;\n\n  const renderSocialNetworkLinks = (src, link, isImg) => (\n    <IconButton onClick={() => window.open(link, '_blank')}>\n      { isImg ? src : <SvgIcon>{src}</SvgIcon> }\n    </IconButton>\n  );\n\n  const renderImgLogo = (alt, logoDark, logo) => (\n    <img\n      alt={alt}\n      className={classes.logo}\n      src={darkMode ? logoDark : logo}\n    />\n  );\n\n  return (\n    <>\n      <Grid container spacing={2}>\n        <Grid container xs={12} item>\n          { facebook !== null && renderSocialNetworkLinks(<Facebook />, facebook) }\n          { instagram !== null && renderSocialNetworkLinks(<Instagram />, instagram) }\n          { twitter !== null && renderSocialNetworkLinks(<Twitter />, twitter) }\n          { youtube !== null && renderSocialNetworkLinks(<YouTube />, youtube) }\n          { imdb !== null && renderSocialNetworkLinks(renderImgLogo(\"IMDb Logo\", IMDB_LOGO_DARK, IMDB_LOGO), imdb, true) }\n          { tmdb !== null && renderSocialNetworkLinks(renderImgLogo(\"TMDb Logo\", TMDB_LOGO_DARK, TMDB_LOGO), tmdb, true) }\n        </Grid>\n        <Grid item>\n          <Typography variant=\"caption\">\n            Icons made by&nbsp;\n            <Link href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</Link>\n            &nbsp;from&nbsp;\n            <Link href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</Link>\n          </Typography>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default MovieLinks;\n","import React from 'react';\n\nimport { useSelector } from 'react-redux';\n\nimport { Grid } from '@material-ui/core';\n\nimport Statistic from './Statistic';\n\nimport { toMillionsOrBillions } from '../../../utils/functions';\n\nconst MovieBudget = () => {\n  const movie = useSelector(state => state.movies.movie);\n\n  const { budget, revenue } = movie;\n  \n  const renderStatistics = () => {\n    const income = revenue - budget;\n    const hasIncome = income > 0;\n\n    return [\n      <Statistic col={4} count={toMillionsOrBillions(revenue)} label=\"Revenue\" divider />,\n      <Statistic col={4} count={toMillionsOrBillions(budget)} label=\"Budget\" divider={revenue && hasIncome} />,\n      (hasIncome && <Statistic col={4} count={toMillionsOrBillions(income)} label=\"Income\" />),\n    ];\n  };\n\n  return (\n    <Grid item container justify=\"center\" alignItems=\"center\">\n      {renderStatistics()}\n    </Grid>\n  );\n};\n\nexport default MovieBudget;\n","import React from 'react';\n\nimport { useSelector } from 'react-redux';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Chip } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  chip: {\n    margin: theme.spacing(0.5, 1, 0.5, 0),\n  },\n  avatar: {\n    width: theme.spacing(10),\n  },\n}));\n\nconst MovieProduction = () => {\n  const classes = useStyles();\n\n  const movie = useSelector(state => state.movies.movie);\n\n  const { production_companies } = movie;\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        {production_companies.map(company => {\n          let label = company.name;\n          if (company.origin_country) label += ` (${company.origin_country})`;\n          \n          return (\n            <Chip\n              variant=\"outlined\"\n              label={label}\n              className={classes.chip}\n            />\n          );\n        })}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default MovieProduction;\n","import React from 'react';\n\nimport { useSelector } from 'react-redux';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Card, CardActionArea, CardMedia, Typography } from '@material-ui/core';\n\nimport { MOVIE_DRAWER_TMDB_IMAGE_PREFIX } from '../../../constants';\n\nconst useStyles = makeStyles(theme => ({\n  collectionImg: {\n    height: 0,\n    paddingTop: theme.spacing(20),\n    width: '100%',\n  },\n  typoOverlay: {\n    position: 'absolute',\n    marginTop: theme.spacing(-9),\n    padding: theme.spacing(4, 2, 2, 2),\n    color: theme.palette.common.white,\n    pointerEvents: 'none',\n    overflow: 'hidden',\n    width: '100%',\n    backgroundImage: `linear-gradient(to top, rgba(33, 33, 33, 0.6), #0000)`,\n  },\n}));\n\nconst MovieCollection = () => {\n  const classes = useStyles();\n\n  const movie = useSelector(state => state.movies.movie);\n\n  const { belongs_to_collection } = movie;\n\n  const renderBrokenImage = () => (\n    <div className={classes.brokenImgContainer}>\n      <Typography variant=\"body1\">Image not loaded.</Typography>\n    </div>\n  );\n\n  let imagePath = MOVIE_DRAWER_TMDB_IMAGE_PREFIX;\n  if (belongs_to_collection.backdrop_path) imagePath += `/w780${belongs_to_collection.backdrop_path}`;\n  else if (belongs_to_collection.poster_path) imagePath += `/w780${belongs_to_collection.poster_path}`;\n  else imagePath = renderBrokenImage();\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <Card>\n          <CardActionArea>\n            { !(typeof (imagePath) === 'string') && imagePath }\n            <CardMedia\n              className={classes.collectionImg}\n              image={imagePath}\n            />\n            <div gutterBottom variant=\"button\" className={classes.typoOverlay}>\n              <Typography variant=\"h6\" className={classes.cardTitle} noWrap>\n                {belongs_to_collection.name}\n              </Typography>\n            </div>\n          </CardActionArea>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default MovieCollection;\n","import React from 'react';\n\nimport { Grid, Typography } from '@material-ui/core';\n\nconst Section = ({ title, children, visible = true, col = 12 }) => (\n  visible \n    ? (\n      <Grid item xs={col}>\n        { title && (\n          <Typography variant=\"h5\" gutterBottom>{title}</Typography>\n        )}\n        {children}\n      </Grid>\n    )\n    : null\n);\n\nexport default Section;\n","import React, { useEffect, useState } from 'react';\n\nimport ReactPlayer from 'react-player'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { Divider, Grid, useMediaQuery } from '@material-ui/core';\n\nimport ComponentLoader from '../components/common/ComponentLoader';\nimport Note from '../components/common/Note';\nimport MovieHeader from '../components/movie/MovieDetails/MovieHeader';\nimport MovieCast from '../components/movie/MovieDetails/MovieCast';\nimport MovieCrew from '../components/movie/MovieDetails/MovieCrew';\nimport MovieLinks from '../components/movie/MovieDetails/MovieLinks';\nimport MovieBudget from '../components/movie/MovieDetails/MovieBudget';\nimport MovieProduction from '../components/movie/MovieDetails/MovieProduction';\nimport MovieCollection from '../components/movie/MovieDetails/MovieCollection';\nimport Section from '../components/movie/MovieDetails/Section';\n\nimport { getMovieDetails } from '../api';\n\nimport { moviesActions } from '../reducers/ducks';\n\nimport { decryptKey } from '../utils/functions';\n\nimport { NOTE_NO_SELECTED_MOVIE, NOTE_MOVIE_NOT_FOUND } from '../constants';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(0, 2),\n  },\n  trailer: {\n    [theme.breakpoints.down('sm')]: {\n      height: `${theme.spacing(30)}px !important`,\n    },\n    [theme.breakpoints.between('sm', 'md')]: {\n      height: `${theme.spacing(40)}px !important`,\n    },\n    [theme.breakpoints.up('md')]: {\n      height: `${theme.spacing(50)}px !important`,\n    },\n  },\n  note: {\n    padding: theme.spacing(8, 2),\n  },\n}));\n\nconst Movies = () => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  const isTabletAbove = useMediaQuery(theme.breakpoints.up('md'));\n  const classes = useStyles();\n\n  const movie = useSelector(state => state.movies.movie);\n  const isMovieLoading = useSelector(state => state.movies.isMovieLoading);\n  const dispatch = useDispatch();\n\n  const [isLoaded, setIsLoaded] = useState(true);\n\n  const { movieId } = useParams();\n\n  const { budget, revenue, youtube, production_companies, belongs_to_collection } = movie;\n\n  useEffect(() => {\n    getMovieDetails(decryptKey(), movieId, response => {\n      dispatch(moviesActions.setActiveMovie(response));\n      dispatch(moviesActions.setDetailsLoading(false));\n      setIsLoaded(true);\n    }, error => {\n      if (error.response) {\n        dispatch(moviesActions.setActiveMovie({}));\n        setIsLoaded(error.response.data.status_code);\n      }\n    });\n    // setTimeout(() => window.scrollTo(0, 0), 100);    \n  }, [movieId, dispatch]);\n\n  const WithNoteContainer = ({ children }) => isMobile\n    ? <div className={classes.note}>{children}</div>\n    : children;\n\n  const renderDivider = () => <Section><Divider/></Section>;\n\n  if (movieId === undefined) return (\n    <WithNoteContainer>\n      <Note details={NOTE_NO_SELECTED_MOVIE} />\n    </WithNoteContainer>\n  );\n\n  if (isMovieLoading) return <ComponentLoader />;\n\n  if (isLoaded === 34) return (\n    <WithNoteContainer>\n      <Note details={NOTE_MOVIE_NOT_FOUND} />\n    </WithNoteContainer>\n  );\n\n  if (Object.keys(movie).length === 0 && movie.constructor === Object) return <ComponentLoader />;\n    \n  return (\n    <Grid container spacing={8} className={classes.root}>\n      <MovieHeader />\n\n      <Section visible={budget && revenue}>\n        <MovieBudget />\n      </Section>\n\n      {renderDivider()}\n\n      <Section title=\"Trailer\" visible={youtube}>\n        <ReactPlayer\n          className={classes.trailer}\n          controls\n          light\n          pip\n          url={youtube}\n          width=\"100%\"\n        />\n      </Section>\n\n      {renderDivider()}\n\n      <Section title=\"Cast\">\n        <MovieCast />\n      </Section>\n\n      {renderDivider()}\n\n      <Section title=\"Crew\">\n        <MovieCrew />\n      </Section>\n\n      {renderDivider()}\n\n      <Section visible={belongs_to_collection} title=\"Collection\" col={isTabletAbove ? 6 : 12}>\n        <MovieCollection />\n      </Section>\n\n      <Section visible={production_companies} title=\"Production\" col={isTabletAbove && belongs_to_collection ? 6 : 12}>\n        <MovieProduction />\n      </Section>\n\n      <Section>\n        <MovieLinks />\n      </Section>\n    </Grid>\n  );\n};\n\nexport default Movies;\n"],"sourceRoot":""}