{"version":3,"sources":["components/movie/MovieDetails/MovieCast.js","components/movie/MovieDetails/MovieCollection.js","components/common/item/detail/PersonAvatarList.js","components/movie/MovieDetails/MovieCrew.js","components/movie/MovieDetails/MovieHeader.js","components/movie/MovieDetails/MovieProduction.js","components/movie/MovieDetails/MovieRecommendations.js","components/movie/MovieDetails/MovieReviews.js","containers/Movies.js"],"names":["useStyles","makeStyles","theme","_container","container","_defineProperty","breakpoints","only","margin","spacing","horizontalScrollItemSpacing","lastEntry","padding","MovieCast","useTheme","isMobile","useMediaQuery","isSmallTablet","isBigTablet","isDesktop","up","classes","movie","useSelector","state","movies","history","useHistory","cast","originalTitle","original_title","title","_useState","useState","_useState2","_slicedToArray","cardCol","setCardCol","useEffect","getCastCol","React","createElement","Grid","className","ItemSeeMore","appbarTitle","collapsedClickEvent","scrollToID","collapsedContent","ItemHorizontalContainer","handleSeeMore","push","concat","location","pathname","isWithSeeMore","length","maxCount","scrollAmount","slice","map","item","key","id","PersonAvatar","character","col","image","profile_path","name","isHorizontalScroll","expandedContent","ItemLazyLoad","contents","maxItemPerLoad","node","otherProps","type","isButtonShown","sectionId","seeMoreText","MovieCollection","_ref","anchorId","collectionContent","collection_content","overview","parts","ItemCardHorizontalList","items","isOverviewCollapsed","demo","backgroundColor","palette","colorScheme","background","secondary","fontWeight","brokenImage","color","action","disabled","avatar","border","filter","listItem","marginBottom","PersonAvatarList","_ref$col","content","xs","Typography","variant","List","disablePadding","person","job","profilePath","isImageValid","ListItem","ListItemAvatar","Avatar","alt","src","TMDB_IMAGE_PREFIX","BrokenImage","avatarSize","ListItemText","primary","defaultProps","PropTypes","arrayOf","shape","moreCrew","marginTop","paddingLeft","moreCrewText","MovieCrew","crew","crewMembers","setCrewMembers","_useState3","_useState4","masonryConfig","setMasonryConfig","_useState5","getCrewCol","_useState6","crewCol","setCrewCol","_getCrewMembers","getCrewMembers","director","_getCrewMembers3","writer","_getCrewMembers5","_getCrewMembers6","producer","executiveProducer","_getCrewMembers7","composer","_getCrewMembers9","cinematography","_getCrewMembers11","editor","_getCrewMembers13","_getCrewMembers14","costume","makeup","_getCrewMembers15","lighting","_getCrewMembers17","visualEffects","finalCrew","production","_toConsumableArray","CREW_TO_DISPLAY","forEach","e","identifier","a","renderMasonryGrid","crewShowMore","crewSection","masonryGrid","Array","fill","colItemCount","memberCount","_loop","members","membersToDisplay","splice","MAX_CREW_ON_SHOW_LESS","crewTitle","c","crewLabel","label","Fragment","min","minIndex","j","i","justify","alignItems","Statistic","count","isTotal","chip","ellipsis","fontSize","fontFamily","lineHeight","letterSpacing","posterImage","divider","borderRadius","height","width","objectFit","objectPosition","MovieHeader","sectionVisibility","isImageLoaded","setIsImageLoaded","budget","facebook","genres","imdb","instagram","posterPath","poster_path","revenue","tagline","tmdb","twitter","hasImage","breadcrumbs","MOVIE_BREADCRUMBS_CONFIG","visibilityId","style","display","onLoad","justifyContent","Chip","ItemLinks","ItemBreadcrumbs","income","hasIncome","toMillionsOrBillions","Number","isNaN","renderStatistics","MovieProduction","productionCompanies","production_companies","productionCountries","production_countries","spokenLanguages","spoken_languages","hasProductionCompany","hasProductionCountry","hasSpokenLanguages","renderProduction","arguments","undefined","gutterBottom","direction","company","logoPath","logo_path","originCountry","origin_country","ProductionChip","country","enumerate","iso_3166_1","english_name","iso_639_1","MovieRecommendations","recommendations","areRecommendations","MovieReviews","reviews","reviewsUI","review","index","author","author_details","date","created_at","rating","ItemReview","isEpisode","_trailer","root","trailer","between","note","Movies","itemDrawerOpen","sidebar","isSearchOpen","isMovieLoading","dispatch","useDispatch","isLoaded","setIsLoaded","_usePath","usePath","movieId","belongsToCollection","belongs_to_collection","releaseDate","release_date","youtube","collection","Object","keys","hasStatistics","getMovieDetails","process","response","moviesActions","setActiveMovie","error","data","status_code","setDetailsLoading","Note","details","NOTE_NO_SELECTED_MOVIE","ComponentLoader","NOTE_MOVIE_NOT_FOUND","constructor","NOTE_SEARCH","ErrorBoundary","Section","isCollapsible","visible","ReactPlayer","controls","light","pip","url","ItemFooter","companies","link","year","moment","format","ScrollToTop"],"mappings":"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","file":"static/js/4.f59d3b92.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { Grid, useMediaQuery } from \"@material-ui/core\";\r\n\r\nimport ItemHorizontalContainer from \"../../common/item/ItemHorizontalContainer\";\r\nimport ItemLazyLoad from \"../../common/item/ItemLazyLoad\";\r\nimport ItemSeeMore from \"../../common/item/ItemSeeMore\";\r\nimport PersonAvatar from \"../../common/item/detail/PersonAvatar\";\r\n\r\nimport { getCastCol, scrollToID } from \"../../../utils/functions\";\r\n\r\nimport { MAX_CAST_HORIZONTAL_ITEMS as maxCount } from \"../../../constants\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    [theme.breakpoints.only(\"xs\")]: {\r\n      margin: theme.spacing(2, 0),\r\n    },\r\n    position: \"relative\",\r\n    width: \"inherit\",\r\n  },\r\n  horizontalScrollItemSpacing: {\r\n    margin: theme.spacing(0, 1),\r\n  },\r\n  lastEntry: {\r\n    padding: theme.spacing(1.5),\r\n  },\r\n}));\r\n\r\nconst SECTION_ID = \"cast\";\r\n\r\nconst MovieCast = () => {\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.only(\"xs\"));\r\n  const isSmallTablet = useMediaQuery(theme.breakpoints.only(\"sm\"));\r\n  const isBigTablet = useMediaQuery(theme.breakpoints.only(\"md\"));\r\n  const isDesktop = useMediaQuery(theme.breakpoints.up(\"lg\"));\r\n  const classes = useStyles();\r\n\r\n  const movie = useSelector((state) => state.movies.movie);\r\n\r\n  const history = useHistory();\r\n\r\n  const { cast, original_title: originalTitle, title } = movie;\r\n\r\n  const [cardCol, setCardCol] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setCardCol(getCastCol(isMobile, isSmallTablet));\r\n  }, [isMobile, isSmallTablet, isBigTablet, isDesktop]);\r\n\r\n  const handleSeeMore = () => {\r\n    history.push(`${history.location.pathname}/${SECTION_ID}`);\r\n  };\r\n\r\n  return (\r\n    <Grid container className={classes.container}>\r\n      <ItemSeeMore\r\n        appbarTitle={[title || originalTitle, \"Cast\"]}\r\n        collapsedClickEvent={() => scrollToID(\"movie-cast\")}\r\n        collapsedContent={\r\n          <ItemHorizontalContainer\r\n            handleSeeMore={handleSeeMore}\r\n            isWithSeeMore={cast.length > maxCount}\r\n            scrollAmount={144}\r\n          >\r\n            {cast.slice(0, maxCount).map((item) => (\r\n              <div\r\n                className={classes.horizontalScrollItemSpacing}\r\n                key={`movie-cast-person-avatar-${item.id}`}\r\n              >\r\n                <PersonAvatar\r\n                  character={item.character}\r\n                  col={12}\r\n                  image={item.profile_path}\r\n                  name={item.name}\r\n                  isHorizontalScroll\r\n                />\r\n              </div>\r\n            ))}\r\n            {cast.length <= maxCount && isMobile && (\r\n              <div className={classes.lastEntry} />\r\n            )}\r\n          </ItemHorizontalContainer>\r\n        }\r\n        expandedContent={\r\n          <Grid container spacing={2}>\r\n            <ItemLazyLoad\r\n              contents={cast}\r\n              maxItemPerLoad={20}\r\n              node={<PersonAvatar />}\r\n              otherProps={{ col: 12 / cardCol }}\r\n              type=\"itemCast\"\r\n            />\r\n          </Grid>\r\n        }\r\n        isButtonShown={cast.length > maxCount}\r\n        sectionId={SECTION_ID}\r\n        seeMoreText={`Show all ${cast.length} cast`}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default MovieCast;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport ItemCardHorizontalList from \"../../common/item/ItemCardHorizontalList\";\r\n\r\nconst MovieCollection = ({ anchorId }) => {\r\n  const movie = useSelector((state) => state.movies.movie);\r\n\r\n  const {\r\n    collection_content: collectionContent,\r\n    original_title: originalTitle,\r\n    title,\r\n  } = movie;\r\n\r\n  if (!collectionContent) return null;\r\n\r\n  const { overview, parts } = collectionContent;\r\n\r\n  return (\r\n    <ItemCardHorizontalList\r\n      appbarTitle={[title || originalTitle, \"Collection\"]}\r\n      anchorId={anchorId}\r\n      items={parts}\r\n      isOverviewCollapsed\r\n      overview={overview}\r\n    />\r\n  );\r\n};\r\n\r\nMovieCollection.propTypes = {\r\n  anchorId: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default MovieCollection;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Avatar,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport Typography from \"../../../custom/base/Typography\";\r\n\r\nimport BrokenImage from \"../../BrokenImage\";\r\n\r\nimport { TMDB_IMAGE_PREFIX } from \"../../../../constants\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  demo: {\r\n    backgroundColor: theme.palette.colorScheme.background,\r\n  },\r\n  secondary: {\r\n    fontWeight: 200,\r\n  },\r\n  brokenImage: {\r\n    color: theme.palette.action.disabled,\r\n  },\r\n  avatar: {\r\n    border: `1px solid ${theme.palette.brokenImage.border}`,\r\n    \"& img\": {\r\n      filter: \"brightness(70%)\",\r\n    },\r\n  },\r\n  listItem: {\r\n    \"&:last-child\": {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nconst PersonAvatarList = ({ col = 12, content, title }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid item xs={col}>\r\n      {title && (\r\n        <Typography variant=\"body1\" color=\"textSecondary\">\r\n          {title}\r\n        </Typography>\r\n      )}\r\n      <List disablePadding>\r\n        {content.map((person) => {\r\n          const { job, name, profile_path: profilePath } = person;\r\n          const isImageValid = profilePath !== null;\r\n\r\n          return (\r\n            <ListItem\r\n              key={`person-avatar-list-${name}`}\r\n              className={classes.listItem}\r\n            >\r\n              <ListItemAvatar>\r\n                {isImageValid ? (\r\n                  <Avatar\r\n                    alt={`${name}'s avatar.`}\r\n                    className={classes.avatar}\r\n                    src={`${TMDB_IMAGE_PREFIX}/w154${profilePath}`}\r\n                  />\r\n                ) : (\r\n                  <BrokenImage type=\"avatar\" avatarSize=\"small\" />\r\n                )}\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={<Typography variant=\"body2\">{name}</Typography>}\r\n                secondary={\r\n                  <Typography variant=\"body2\" className={classes.secondary}>\r\n                    {job}\r\n                  </Typography>\r\n                }\r\n              />\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nPersonAvatarList.defaultProps = {\r\n  col: 12,\r\n  content: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      profile_path: \"\",\r\n    })\r\n  ),\r\n};\r\n\r\nPersonAvatarList.propTypes = {\r\n  col: PropTypes.number,\r\n  content: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      job: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      profile_path: PropTypes.string,\r\n    })\r\n  ),\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default PersonAvatarList;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { Grid, useMediaQuery } from \"@material-ui/core\";\r\nimport Typography from \"../../custom/base/Typography\";\r\n\r\nimport ItemSeeMore from \"../../common/item/ItemSeeMore\";\r\nimport PersonAvatarList from \"../../common/item/detail/PersonAvatarList\";\r\nimport Statistic from \"../../common/item/detail/Statistic\";\r\n\r\nimport {\r\n  getCrewMembers,\r\n  getCrewCol,\r\n  scrollToID,\r\n} from \"../../../utils/functions\";\r\n\r\nimport { CREW_TO_DISPLAY, MAX_CREW_ON_SHOW_LESS } from \"../../../constants\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  moreCrew: {\r\n    marginBottom: theme.spacing(2),\r\n    marginTop: theme.spacing(-2),\r\n    paddingLeft: theme.spacing(9),\r\n  },\r\n  moreCrewText: {\r\n    fontWeight: 300,\r\n  },\r\n}));\r\n\r\nconst MovieCrew = () => {\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.only(\"xs\"));\r\n  const isSmallTablet = useMediaQuery(theme.breakpoints.only(\"sm\"));\r\n  const isBigTablet = useMediaQuery(theme.breakpoints.only(\"md\"));\r\n  const isDesktop = useMediaQuery(theme.breakpoints.up(\"lg\"));\r\n  const classes = useStyles();\r\n\r\n  const movie = useSelector((state) => state.movies.movie);\r\n\r\n  const { crew, original_title: originalTitle, title } = movie;\r\n\r\n  const [crewMembers, setCrewMembers] = useState({});\r\n  const [masonryConfig, setMasonryConfig] = useState([]);\r\n  const [crewCol, setCrewCol] = useState(getCrewCol());\r\n\r\n  useEffect(() => {\r\n    setCrewCol(getCrewCol(isMobile, isSmallTablet));\r\n  }, [isMobile, isSmallTablet, isBigTablet, isDesktop]);\r\n\r\n  useEffect(() => {\r\n    if (crew && crew.length > 0) {\r\n      const [director] = getCrewMembers(crew, \"directing\", [\"director\"]);\r\n      const [writer] = getCrewMembers(crew, \"writing\");\r\n      const [producer, executiveProducer] = getCrewMembers(crew, \"production\", [\r\n        \"producer\",\r\n        \"executive producer\",\r\n      ]);\r\n      const [composer] = getCrewMembers(crew, \"sound\", [\r\n        \"original music composer\",\r\n      ]);\r\n      const [cinematography] = getCrewMembers(crew, \"camera\", [\r\n        \"director of photography\",\r\n      ]);\r\n      const [editor] = getCrewMembers(crew, \"editing\", [\"editor\"]);\r\n      const [costume, makeup] = getCrewMembers(crew, \"costume & make-up\", [\r\n        \"costume design\",\r\n        \"makeup artist\",\r\n      ]);\r\n      const [lighting] = getCrewMembers(crew, \"lighting\");\r\n      const [visualEffects] = getCrewMembers(crew, \"visual effects\");\r\n      const production = [...producer, ...executiveProducer];\r\n      const finalCrew = {\r\n        director,\r\n        writer,\r\n        production,\r\n        composer,\r\n        cinematography,\r\n        editor,\r\n        costume,\r\n        makeup,\r\n        lighting,\r\n        visualEffects,\r\n      };\r\n      setCrewMembers(finalCrew);\r\n\r\n      setMasonryConfig([]);\r\n      CREW_TO_DISPLAY.forEach((e) => {\r\n        if (finalCrew[e.identifier].length > 0) {\r\n          setMasonryConfig((a) => [...a, e.identifier]);\r\n        }\r\n      });\r\n    }\r\n  }, [movie, crew]);\r\n\r\n  const renderMasonryGrid = (crewShowMore) => {\r\n    const masonryGrid = Array(crewCol).fill([]);\r\n    let colItemCount = Array(crewCol).fill(0);\r\n    let crewSection;\r\n    let memberCount = 0;\r\n\r\n    for (let a = 0; a < masonryConfig.length; a += 1) {\r\n      if (!crewShowMore) {\r\n        if (\r\n          masonryConfig[a] === \"composer\" ||\r\n          masonryConfig[a] === \"cinematography\" ||\r\n          masonryConfig[a] === \"editor\" ||\r\n          masonryConfig[a] === \"costume\" ||\r\n          masonryConfig[a] === \"makeup\" ||\r\n          masonryConfig[a] === \"lighting\" ||\r\n          masonryConfig[a] === \"visualEffects\"\r\n        )\r\n          break;\r\n      }\r\n\r\n      const members = [...crewMembers[masonryConfig[a]]];\r\n      memberCount = members.length;\r\n      const membersToDisplay = crewShowMore\r\n        ? members\r\n        : [...members.splice(0, MAX_CREW_ON_SHOW_LESS)];\r\n      const crewTitle = CREW_TO_DISPLAY.filter(\r\n        (c) => c.identifier === masonryConfig[a]\r\n      )[0];\r\n      const crewLabel = crewTitle.label(members.length);\r\n\r\n      crewSection = (\r\n        <>\r\n          <PersonAvatarList\r\n            key={`movie-crew-person-avatar-list-${crewTitle.identifier}`}\r\n            content={membersToDisplay}\r\n            title={crewLabel}\r\n          />\r\n          {!crewShowMore && members.length > 0 && (\r\n            <Grid item xs={12} className={classes.moreCrew}>\r\n              <Typography\r\n                variant=\"caption\"\r\n                color=\"textSecondary\"\r\n                className={classes.moreCrewText}\r\n              >\r\n                {`...and ${members.length} more`}\r\n              </Typography>\r\n            </Grid>\r\n          )}\r\n        </>\r\n      );\r\n\r\n      if (crewCol > 1) {\r\n        let min = colItemCount[0];\r\n        let minIndex = 0;\r\n\r\n        for (let j = 1; j < crewCol; j += 1) {\r\n          if (min > colItemCount[j]) {\r\n            min = colItemCount[j];\r\n            minIndex = j;\r\n          }\r\n        }\r\n\r\n        colItemCount[minIndex] += memberCount;\r\n        masonryGrid[minIndex] = [...masonryGrid[minIndex], crewSection];\r\n      } else {\r\n        masonryGrid[0] = [...masonryGrid[0], crewSection];\r\n      }\r\n    }\r\n\r\n    return masonryGrid.map((e, i) => (\r\n      <Grid item xs={12 / crewCol} key={`movie-crew-masonry-grid-${i}`}>\r\n        {e}\r\n      </Grid>\r\n    ));\r\n  };\r\n\r\n  const renderStatistic = () => (\r\n    <Statistic\r\n      col={12 / crew.length}\r\n      count={crew.length}\r\n      isTotal\r\n      label=\"Total Crew\"\r\n    />\r\n  );\r\n\r\n  if (!(\"director\" in crewMembers)) return null;\r\n\r\n  return (\r\n    <Grid container>\r\n      <ItemSeeMore\r\n        appbarTitle={[title || originalTitle, \"Crew\"]}\r\n        collapsedClickEvent={() => scrollToID(\"movie-crew\")}\r\n        collapsedContent={<Grid container>{renderMasonryGrid()}</Grid>}\r\n        expandedContent={\r\n          <Grid container spacing={2}>\r\n            {renderMasonryGrid(true)}\r\n            <Grid item container justify=\"center\" alignItems=\"center\">\r\n              {renderStatistic()}\r\n            </Grid>\r\n          </Grid>\r\n        }\r\n        sectionId=\"crew\"\r\n        seeMoreText={`Show all ${crew.length} crew`}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default MovieCrew;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { Grid, useMediaQuery } from \"@material-ui/core\";\r\nimport Chip from \"../../custom/base/Chip\";\r\nimport Typography from \"../../custom/base/Typography\";\r\n\r\nimport ItemBreadcrumbs from \"../../common/item/ItemBreadcrumbs\";\r\nimport ItemLinks from \"../../common/item/ItemLinks\";\r\nimport Statistic from \"../../common/item/detail/Statistic\";\r\n\r\nimport { toMillionsOrBillions } from \"../../../utils/functions\";\r\n\r\nimport {\r\n  MOVIE_BREADCRUMBS_CONFIG,\r\n  TMDB_IMAGE_PREFIX,\r\n} from \"../../../constants\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  chip: {\r\n    margin: theme.spacing(0.25, 0.5, 0.25, 0),\r\n  },\r\n  ellipsis: {\r\n    fontSize: \"1rem\",\r\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n    fontWeight: \"400\",\r\n    lineHeight: \"1.5\",\r\n    letterSpacing: \"0.00938em\",\r\n  },\r\n  posterImage: {\r\n    filter: \"brightness(70%)\",\r\n    border: `1px solid ${theme.palette.colorScheme.divider}`,\r\n    borderRadius: theme.shape.borderRadius,\r\n    height: \"355px\",\r\n    margin: theme.spacing(1),\r\n    width: \"250px\",\r\n    objectFit: \"cover\",\r\n    objectPosition: \"50% 0%\",\r\n  },\r\n  container: {\r\n    height: \"fit-content\",\r\n  },\r\n}));\r\n\r\nconst MovieHeader = ({ sectionVisibility }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const isDesktop = useMediaQuery(theme.breakpoints.up(\"lg\"));\r\n  const movie = useSelector((state) => state.movies.movie);\r\n  const [isImageLoaded, setIsImageLoaded] = useState(false);\r\n\r\n  const {\r\n    budget,\r\n    facebook,\r\n    genres,\r\n    imdb,\r\n    instagram,\r\n    original_title: originalTitle,\r\n    overview,\r\n    poster_path: posterPath,\r\n    revenue,\r\n    tagline,\r\n    title,\r\n    tmdb,\r\n    twitter,\r\n  } = movie;\r\n\r\n  const hasImage = isDesktop && posterPath;\r\n\r\n  const breadcrumbs = MOVIE_BREADCRUMBS_CONFIG.filter(\r\n    (e) => sectionVisibility[e.visibilityId]\r\n  );\r\n\r\n  useEffect(() => {\r\n    setIsImageLoaded(false);\r\n  }, [posterPath]);\r\n\r\n  const renderStatistics = () => {\r\n    const income = revenue - budget;\r\n    const hasIncome = income > 0;\r\n\r\n    return [\r\n      revenue !== 0 && (\r\n        <Statistic\r\n          col={4}\r\n          count={toMillionsOrBillions(revenue)}\r\n          divider\r\n          key=\"movie-budget-revenue\"\r\n          label=\"Revenue\"\r\n        />\r\n      ),\r\n      budget !== 0 && (\r\n        <Statistic\r\n          col={4}\r\n          count={toMillionsOrBillions(budget)}\r\n          divider={!Number.isNaN(revenue) && hasIncome}\r\n          key=\"movie-budget-budget\"\r\n          label=\"Budget\"\r\n        />\r\n      ),\r\n      hasIncome && (\r\n        <Statistic\r\n          col={4}\r\n          count={toMillionsOrBillions(income)}\r\n          key=\"movie-budget-income\"\r\n          label=\"Income\"\r\n        />\r\n      ),\r\n    ];\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {hasImage && (\r\n        <Grid item xs={4} container spacing={2}>\r\n          <img\r\n            src={`${TMDB_IMAGE_PREFIX}/w500${posterPath}`}\r\n            alt={`${title || originalTitle}'s background cover.`}\r\n            className={classes.posterImage}\r\n            style={isImageLoaded ? {} : { display: \"none\" }}\r\n            onLoad={() => setIsImageLoaded(true)}\r\n          />\r\n        </Grid>\r\n      )}\r\n      <Grid\r\n        item\r\n        xs={hasImage ? 8 : 12}\r\n        container\r\n        spacing={2}\r\n        justifyContent=\"flex-start\"\r\n        alignItems=\"flex-start\"\r\n        className={classes.container}\r\n      >\r\n        <Grid item xs={12}>\r\n          {genres.map((i) => (\r\n            <Chip\r\n              className={classes.chip}\r\n              key={`movie-header-chip-${i.id}`}\r\n              label={i.name}\r\n              variant=\"outlined\"\r\n            />\r\n          ))}\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <ItemLinks\r\n            facebook={facebook}\r\n            imdb={imdb}\r\n            instagram={instagram}\r\n            tmdb={tmdb}\r\n            twitter={twitter}\r\n          />\r\n        </Grid>\r\n        {overview && overview.length > 0 && (\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"body2\">{overview}</Typography>\r\n          </Grid>\r\n        )}\r\n        {tagline && (\r\n          <Grid item xs={12}>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              variant=\"body2\"\r\n              className={classes.tagline}\r\n            >\r\n              <em>\"{tagline}\"</em>\r\n            </Typography>\r\n          </Grid>\r\n        )}\r\n        <Grid item xs={12}>\r\n          <ItemBreadcrumbs content={breadcrumbs} />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Grid container justify=\"center\" alignItems=\"center\">\r\n            {renderStatistics()}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nMovieHeader.propTypes = {\r\n  sectionVisibility: {\r\n    collection: false,\r\n  },\r\n};\r\n\r\nMovieHeader.propTypes = {\r\n  sectionVisibility: PropTypes.shape({\r\n    cast: PropTypes.bool.isRequired,\r\n    collection: PropTypes.bool,\r\n    crew: PropTypes.bool.isRequired,\r\n    production: PropTypes.bool.isRequired,\r\n    recommendations: PropTypes.bool.isRequired,\r\n    trailer: PropTypes.bool.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default MovieHeader;\r\n","import React from \"react\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { Grid, useMediaQuery } from \"@material-ui/core\";\r\nimport Typography from \"../../custom/base/Typography\";\r\n\r\nimport ProductionChip from \"../../common/item/detail/ProductionChip\";\r\n\r\nimport { enumerate } from \"../../../utils/functions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst MovieProduction = () => {\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.only(\"xs\"));\r\n  const classes = useStyles();\r\n\r\n  const movie = useSelector((state) => state.movies.movie);\r\n\r\n  const {\r\n    production_companies: productionCompanies,\r\n    production_countries: productionCountries,\r\n    spoken_languages: spokenLanguages,\r\n  } = movie;\r\n\r\n  const hasProductionCompany =\r\n    productionCompanies && productionCompanies.length > 0;\r\n  const hasProductionCountry =\r\n    productionCountries && productionCountries.length > 0;\r\n  const hasSpokenLanguages = spokenLanguages && spokenLanguages.length > 0;\r\n\r\n  const renderProduction = (title, items, xs = isMobile ? 12 : 6) => (\r\n    <Grid item xs={xs} container>\r\n      <Typography\r\n        variant=\"body1\"\r\n        gutterBottom\r\n        className={classes.title}\r\n        color=\"textSecondary\"\r\n      >\r\n        {title}\r\n      </Typography>\r\n      {items}\r\n    </Grid>\r\n  );\r\n\r\n  return (\r\n    <Grid item container>\r\n      <Grid\r\n        alignItems=\"flex-start\"\r\n        container\r\n        direction=\"row\"\r\n        item\r\n        justify=\"flex-start\"\r\n        spacing={3}\r\n        xs={12}\r\n      >\r\n        {hasProductionCompany &&\r\n          renderProduction(\r\n            \"Companies\",\r\n            productionCompanies.map((company) => {\r\n              const {\r\n                id,\r\n                logo_path: logoPath,\r\n                name,\r\n                origin_country: originCountry,\r\n              } = company;\r\n\r\n              return (\r\n                <Grid\r\n                  item\r\n                  key={`tv-show-production-production-company-chip-${id}`}\r\n                >\r\n                  <ProductionChip\r\n                    country={originCountry}\r\n                    image={logoPath}\r\n                    name={name}\r\n                  />\r\n                </Grid>\r\n              );\r\n            }),\r\n            12\r\n          )}\r\n        {hasProductionCountry &&\r\n          renderProduction(\r\n            \"Country\",\r\n            <Typography variant=\"body2\">\r\n              {enumerate(\r\n                productionCountries.map((e) => `${e.name} (${e.iso_3166_1})`)\r\n              )}\r\n            </Typography>\r\n          )}\r\n        {hasSpokenLanguages &&\r\n          renderProduction(\r\n            \"Spoken Languages\",\r\n            <Typography variant=\"body2\">\r\n              {enumerate(\r\n                spokenLanguages.map((e) => `${e.english_name} (${e.iso_639_1})`)\r\n              )}\r\n            </Typography>\r\n          )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default MovieProduction;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport ItemCardHorizontalList from \"../../common/item/ItemCardHorizontalList\";\r\n\r\nconst MovieRecommendations = ({ anchorId }) => {\r\n  const movie = useSelector((state) => state.movies.movie);\r\n\r\n  const { original_title: originalTitle, title, recommendations } = movie;\r\n\r\n  if (!recommendations) return null;\r\n\r\n  return (\r\n    <ItemCardHorizontalList\r\n      anchorId={anchorId}\r\n      appbarTitle={[title || originalTitle, \"Recommendations\"]}\r\n      areRecommendations\r\n      items={recommendations}\r\n      overview={`If you liked ${\r\n        title || originalTitle\r\n      }, check out these other movies:`}\r\n    />\r\n  );\r\n};\r\n\r\nMovieRecommendations.propTypes = {\r\n  anchorId: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default MovieRecommendations;\r\n","import React from \"react\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nimport ItemLazyLoad from \"../../common/item/ItemLazyLoad\";\r\nimport ItemReview from \"../../common/item/ItemReview\";\r\nimport ItemSeeMore from \"../../common/item/ItemSeeMore\";\r\n\r\nimport { scrollToID } from \"../../../utils/functions\";\r\n\r\nconst SECTION_ID = \"reviews\";\r\n\r\nconst MovieReviews = () => {\r\n  const movie = useSelector((state) => state.movies.movie);\r\n\r\n  const { original_title: originalTitle, reviews, title } = movie;\r\n\r\n  if (!reviews) return null;\r\n\r\n  const reviewsUI = reviews.map((review, index) => {\r\n    const { author, author_details, created_at: date, content } = review;\r\n\r\n    const { rating } = author_details;\r\n\r\n    return (\r\n      <ItemReview\r\n        author={author}\r\n        content={content}\r\n        date={date}\r\n        rating={rating}\r\n        divider={index !== 0}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Grid container>\r\n      <ItemSeeMore\r\n        appbarTitle={[title || originalTitle, \"Reviews\"]}\r\n        collapsedClickEvent={() => scrollToID(\"movie-reviews\")}\r\n        collapsedContent={reviewsUI[0]}\r\n        expandedContent={\r\n          <ItemLazyLoad\r\n            contents={reviews}\r\n            maxItemPerLoad={5}\r\n            node={<ItemReview />}\r\n            type=\"itemReviews\"\r\n          />\r\n        }\r\n        isButtonShown={reviews.length > 1}\r\n        isEpisode\r\n        sectionId={SECTION_ID}\r\n        seeMoreText={`Show all ${reviews.length} reviews`}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default MovieReviews;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport moment from \"moment\";\r\nimport ReactPlayer from \"react-player\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { usePath } from \"../hooks\";\r\n\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { Grid, useMediaQuery } from \"@material-ui/core\";\r\n\r\nimport ComponentLoader from \"../components/common/ComponentLoader\";\r\nimport ErrorBoundary from \"../components/navigation/ErrorBoundary\";\r\nimport ItemFooter from \"../components/common/item/ItemFooter\";\r\nimport MovieCast from \"../components/movie/MovieDetails/MovieCast\";\r\nimport MovieCollection from \"../components/movie/MovieDetails/MovieCollection\";\r\nimport MovieCrew from \"../components/movie/MovieDetails/MovieCrew\";\r\nimport MovieHeader from \"../components/movie/MovieDetails/MovieHeader\";\r\nimport MovieProduction from \"../components/movie/MovieDetails/MovieProduction\";\r\nimport MovieRecommendations from \"../components/movie/MovieDetails/MovieRecommendations\";\r\nimport MovieReviews from \"../components/movie/MovieDetails/MovieReviews\";\r\nimport Note from \"../components/common/Note\";\r\nimport ScrollToTop from \"../components/common/ScrollToTop\";\r\nimport Section from \"../components/common/item/detail/Section\";\r\n\r\nimport { getMovieDetails } from \"../api\";\r\n\r\nimport { moviesActions } from \"../reducers/ducks\";\r\n\r\nimport {\r\n  NOTE_NO_SELECTED_MOVIE,\r\n  NOTE_MOVIE_NOT_FOUND,\r\n  NOTE_SEARCH,\r\n} from \"../constants\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(0, 2),\r\n  },\r\n  trailer: {\r\n    [theme.breakpoints.only(\"xs\")]: {\r\n      height: `${theme.spacing(24)}px !important`,\r\n    },\r\n    [theme.breakpoints.only(\"sm\")]: {\r\n      height: `${theme.spacing(35)}px !important`,\r\n    },\r\n    [theme.breakpoints.between(\"sm\", \"md\")]: {\r\n      height: `${theme.spacing(45)}px !important`,\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      height: `${theme.spacing(60)}px !important`,\r\n    },\r\n    \"& .react-player__preview\": {\r\n      border: `1px solid ${theme.palette.brokenImage.border}`,\r\n      borderRadius: theme.shape.borderRadius,\r\n    },\r\n    \"& iframe\": {\r\n      border: `1px solid ${theme.palette.brokenImage.border}`,\r\n      borderRadius: theme.shape.borderRadius,\r\n    },\r\n  },\r\n  note: {\r\n    padding: theme.spacing(16, 2),\r\n  },\r\n}));\r\n\r\nconst Movies = () => {\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.only(\"xs\"));\r\n  const classes = useStyles();\r\n\r\n  const itemDrawerOpen = useSelector((state) => state.sidebar.itemDrawerOpen);\r\n  const isSearchOpen = useSelector((state) => state.sidebar.isSearchOpen);\r\n  const movie = useSelector((state) => state.movies.movie);\r\n  const isMovieLoading = useSelector((state) => state.movies.isMovieLoading);\r\n  const dispatch = useDispatch();\r\n\r\n  const [isLoaded, setIsLoaded] = useState(true);\r\n\r\n  const [, movieId] = usePath();\r\n\r\n  const {\r\n    belongs_to_collection: belongsToCollection,\r\n    budget,\r\n    cast,\r\n    collection_content: collectionContent,\r\n    crew,\r\n    original_title: originalTitle,\r\n    production_companies: productionCompanies,\r\n    recommendations,\r\n    release_date: releaseDate,\r\n    revenue,\r\n    reviews,\r\n    title,\r\n    tmdb,\r\n    youtube,\r\n  } = movie;\r\n\r\n  const sectionVisibility = {\r\n    trailer: youtube && youtube.length > 0,\r\n    cast: cast && cast.length > 0,\r\n    crew: crew && crew.length > 0,\r\n    production: productionCompanies && productionCompanies.length > 0,\r\n    collection:\r\n      belongsToCollection && Object.keys(belongsToCollection).length > 0,\r\n    recommendations: recommendations && recommendations.length > 0,\r\n    reviews: reviews && reviews.length > 0,\r\n  };\r\n  const hasStatistics =\r\n    !Number.isNaN(budget) &&\r\n    !Number.isNaN(revenue) &&\r\n    budget !== 0 &&\r\n    revenue !== 0;\r\n\r\n  useEffect(() => {\r\n    if (movieId === \"search\") return;\r\n\r\n    if (movieId) {\r\n      const parmesanio = process.env.REACT_APP_TMDB_PARMESANIO;\r\n\r\n      getMovieDetails(\r\n        parmesanio,\r\n        movieId,\r\n        (response) => {\r\n          dispatch(moviesActions.setActiveMovie(response));\r\n          setIsLoaded(true);\r\n        },\r\n        (error) => {\r\n          if (error.response) {\r\n            dispatch(moviesActions.setActiveMovie({}));\r\n            setIsLoaded(error.response.data.status_code);\r\n          }\r\n        },\r\n        () => {\r\n          dispatch(moviesActions.setDetailsLoading(false));\r\n        }\r\n      );\r\n    }\r\n  }, [movieId, dispatch]);\r\n\r\n  if (movieId === undefined) {\r\n    return (\r\n      <div className={classes.note}>\r\n        <Note details={NOTE_NO_SELECTED_MOVIE} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (isMovieLoading) {\r\n    return <ComponentLoader location=\"itemcontainer\" />;\r\n  }\r\n\r\n  if (isLoaded === 34) {\r\n    return (\r\n      <div className={classes.note}>\r\n        <Note details={NOTE_MOVIE_NOT_FOUND} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (Object.keys(movie).length === 0 && movie.constructor === Object) {\r\n    if (isSearchOpen) {\r\n      return (\r\n        <div className={classes.note}>\r\n          <Note details={NOTE_SEARCH} />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return <ComponentLoader location=\"itemcontainer\" />;\r\n  }\r\n\r\n  return (\r\n    <ErrorBoundary>\r\n      <Grid container spacing={isMobile ? 4 : 8} className={classes.root}>\r\n        <Section\r\n          anchorId=\"movie-header\"\r\n          divider={!hasStatistics}\r\n          isCollapsible={false}\r\n          visible={\r\n            Object.keys(movie).length !== 0 && movie.constructor === Object\r\n          }\r\n        >\r\n          <MovieHeader sectionVisibility={sectionVisibility} />\r\n        </Section>\r\n\r\n        <Section\r\n          anchorId=\"movie-trailer\"\r\n          title=\"Trailer\"\r\n          visible={sectionVisibility.trailer}\r\n        >\r\n          <ReactPlayer\r\n            className={classes.trailer}\r\n            controls\r\n            light\r\n            pip\r\n            url={youtube}\r\n            width=\"100%\"\r\n          />\r\n        </Section>\r\n\r\n        <Section\r\n          anchorId=\"movie-cast\"\r\n          title=\"Cast\"\r\n          visible={sectionVisibility.cast}\r\n        >\r\n          <MovieCast />\r\n        </Section>\r\n\r\n        <Section\r\n          anchorId=\"movie-crew\"\r\n          title=\"Crew\"\r\n          visible={sectionVisibility.crew}\r\n        >\r\n          <MovieCrew />\r\n        </Section>\r\n\r\n        <Section\r\n          anchorId=\"movie-production\"\r\n          divider\r\n          title=\"Production\"\r\n          visible={sectionVisibility.production}\r\n        >\r\n          <MovieProduction />\r\n        </Section>\r\n\r\n        <Section\r\n          anchorId=\"movie-reviews\"\r\n          divider\r\n          title=\"Reviews\"\r\n          visible={sectionVisibility.reviews}\r\n        >\r\n          <MovieReviews />\r\n        </Section>\r\n\r\n        <Section\r\n          anchorId=\"movie-collection\"\r\n          title={collectionContent ? collectionContent.name : \"\"}\r\n          visible={sectionVisibility.collection}\r\n        >\r\n          <MovieCollection anchorId=\"movie-collection\" />\r\n        </Section>\r\n\r\n        <Section\r\n          anchorId=\"movie-recommendations\"\r\n          title=\"Recommendations\"\r\n          visible={sectionVisibility.recommendations}\r\n        >\r\n          <MovieRecommendations anchorId=\"movie-recommendations\" />\r\n        </Section>\r\n\r\n        <Section anchorId=\"movie-end-credits\" divider={false}>\r\n          <ItemFooter\r\n            companies={productionCompanies.map((e) => e.name)}\r\n            link={tmdb}\r\n            title={title || originalTitle}\r\n            year={releaseDate ? moment(releaseDate).format(\"YYYY\") : \"\"}\r\n          />\r\n        </Section>\r\n      </Grid>\r\n      {!itemDrawerOpen && <ScrollToTop />}\r\n    </ErrorBoundary>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n"],"sourceRoot":""}