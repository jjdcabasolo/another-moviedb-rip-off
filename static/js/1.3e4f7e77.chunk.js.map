{"version":3,"sources":["components/common/item/detail/Statistic.js","components/common/item/detail/Section.js","../node_modules/@material-ui/icons/esm/HelpTwoTone.js","../node_modules/@material-ui/core/esm/Divider/Divider.js","components/tvShow/TVShowDetails/TVShowHeader.js","components/tvShow/TVShowDetails/TVShowStatistics.js","containers/TVShows.js"],"names":["useStyles","makeStyles","theme","icon","marginLeft","spacing","fontSize","typography","overline","divider","height","cols3Adjustment","maxWidth","flexBasis","Statistic","count","col","label","isTotal","classes","useTheme","isMobile","useMediaQuery","breakpoints","down","xs","item","container","justify","alignItems","direction","className","clsx","variant","color","enterTouchDelay","leaveTouchDelay","title","orientation","Section","children","visible","gutterBottom","createElement","Fragment","d","opacity","Divider","forwardRef","props","ref","_props$absolute","absolute","_props$component","component","Component","_props$light","light","_props$orientation","_props$role","role","undefined","_props$variant","other","root","vertical","margin","border","flexShrink","backgroundColor","palette","position","bottom","left","width","inset","middle","marginRight","name","note","padding","fontWeight","chipContainer","chip","description","marginTop","TVShowHeader","only","tvShow","useSelector","state","tvShows","episode_run_time","first_air_date","genres","overview","original_name","status","runtimeHours","runtimeMinutes","Grid","Typography","Chip","getTVShowStatus","size","moment","format","length","map","i","TVShowStatistics","number_of_episodes","number_of_seasons","TVShows","isTVShowLoading","dispatch","useDispatch","useState","isLoaded","setIsLoaded","tvShowId","useParams","useEffect","getTVShowDetails","decryptKey","response","tvShowsActions","setActiveTVShow","setDetailsLoading","error","data","status_code","Note","details","NOTE_NO_SELECTED_TV_SHOW","ComponentLoader","NOTE_TV_SHOW_NOT_FOUND","Object","keys","constructor"],"mappings":"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","file":"static/js/1.3e4f7e77.chunk.js","sourcesContent":["import React from 'react';\n\nimport clsx from 'clsx';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { Divider, Grid, Tooltip, Typography, useMediaQuery } from '@material-ui/core';\nimport { HelpTwoTone } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    marginLeft: theme.spacing(1),\n    fontSize: theme.typography.overline.fontSize,\n  },\n  divider: {\n    height: theme.spacing(4),\n  },\n  cols3Adjustment: {\n    maxWidth: '33%',\n    flexBasis: '33%',\n  },\n}));\n\nconst Statistic = ({ count, col, label, isTotal, divider }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const xs = col - 1;\n  return (\n    <>\n      <Grid\n        item\n        xs={xs}\n        container\n        justify=\"center\"\n        alignItems=\"center\"\n        direction=\"column\"\n        className={clsx(\n          { [classes.cols3Adjustment]: xs === 3 },\n        )}\n      >\n        <Grid item>\n          <Typography variant={isMobile ? \"h5\" : \"h4\"}>{count}</Typography>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"overline\" color=\"textSecondary\">\n            {label}\n            {isTotal && (\n              <Tooltip\n                enterTouchDelay={0}\n                leaveTouchDelay={2500}\n                title=\"Crew count is wholly based on the efforts of the TMDb community. It may or may not reflect the exact head count.\"\n              >\n                <HelpTwoTone className={classes.icon} />\n              </Tooltip>\n            )}\n          </Typography>\n        </Grid>\n      </Grid>\n      {divider && (\n        <Grid item>\n          <Divider orientation=\"vertical\" className={classes.divider} />\n        </Grid>\n      )}\n    </>\n  );\n};\n\nexport default Statistic;\n","import React from 'react';\n\nimport { Divider, Grid, Typography } from '@material-ui/core';\n\nconst Section = ({\n  title,\n  children,\n  visible = true,\n  col = 12,\n  divider = true,\n}) => (\n  visible \n    ? (\n      <>\n        <Grid item xs={col}>\n          {title && (\n            <Typography variant=\"h5\" gutterBottom>{title}</Typography>\n          )}\n          {children}\n        </Grid>\n        {divider\n          ? (\n            <Grid item xs={col}>\n              <Divider/>\n            </Grid>\n          )\n          : null\n        }      \n      </>\n    )\n    : null\n);\n\nexport default Section;\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(React.Fragment, null, React.createElement(\"path\", {\n  d: \"M12 4c-4.41 0-8 3.59-8 8s3.59 8 8 8 8-3.59 8-8-3.59-8-8-8zm1 14h-2v-2h2v2zm0-3h-2c0-3.25 3-3 3-5 0-1.1-.9-2-2-2s-2 .9-2 2H8c0-2.21 1.79-4 4-4s4 1.79 4 4c0 2.5-3 2.75-3 5z\",\n  opacity: \".3\"\n}), React.createElement(\"path\", {\n  d: \"M11 16h2v2h-2zm1-14C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-2.21 0-4 1.79-4 4h2c0-1.1.9-2 2-2s2 .9 2 2c0 2-3 1.75-3 5h2c0-2.25 3-2.5 3-5 0-2.21-1.79-4-4-4z\"\n})), 'HelpTwoTone');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      height: 1,\n      margin: 0,\n      // Reset browser default style.\n      border: 'none',\n      flexShrink: 0,\n      backgroundColor: theme.palette.divider\n    },\n\n    /* Styles applied to the root element if `absolute={true}`. */\n    absolute: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `variant=\"inset\"`. */\n    inset: {\n      marginLeft: 72\n    },\n\n    /* Styles applied to the root element if `light={true}`. */\n    light: {\n      backgroundColor: fade(theme.palette.divider, 0.08)\n    },\n\n    /* Styles applied to the root element if `variant=\"middle\"`. */\n    middle: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      height: '100%',\n      width: 1\n    }\n  };\n};\nvar Divider = React.forwardRef(function Divider(props, ref) {\n  var _props$absolute = props.absolute,\n      absolute = _props$absolute === void 0 ? false : _props$absolute,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'hr' : _props$component,\n      _props$light = props.light,\n      light = _props$light === void 0 ? false : _props$light,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$role = props.role,\n      role = _props$role === void 0 ? Component !== 'hr' ? 'separator' : undefined : _props$role,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'fullWidth' : _props$variant,\n      other = _objectWithoutProperties(props, [\"absolute\", \"classes\", \"className\", \"component\", \"light\", \"orientation\", \"role\", \"variant\"]);\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'fullWidth' && classes[variant], absolute && classes.absolute, light && classes.light, {\n      vertical: classes.vertical\n    }[orientation]),\n    role: role,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes = {\n  /**\n   * Absolutely position the element.\n   */\n  absolute: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the divider will have a lighter color.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * The divider orientation.\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'inset', 'middle'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDivider'\n})(Divider);","import React from 'react';\n\nimport moment from 'moment';\nimport { useSelector } from 'react-redux';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { Chip, Grid, Typography, useMediaQuery } from '@material-ui/core';\n\nimport { getTVShowStatus } from '../../../utils/functions';\n\nconst useStyles = makeStyles(theme => ({\n  note: {\n    padding: theme.spacing(8, 2),\n  },\n  title: {\n    fontWeight: 600,\n  },\n  chipContainer: {\n    margin: theme.spacing(1, 0),\n  },\n  chip: {\n    margin: theme.spacing(0.25, 0.5, 0.25, 0),\n  },\n  description: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst TVShowHeader = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.only('xs'));\n\n  const tvShow = useSelector(state => state.tvShows.tvShow);\n\n  const {\n    episode_run_time,\n    name,\n    first_air_date,\n    genres,\n    overview,\n    original_name,\n    status,\n  } = tvShow;\n\n  const runtimeHours = ~~(episode_run_time[0] / 60);\n  const runtimeMinutes = episode_run_time[0] % 60;\n\n  return (\n    <Grid item xs={12} container spacing={1}>\n      <Grid item xs={12}>\n        <Typography variant={isMobile ? \"h4\" : \"h2\"} className={classes.title}>{name || original_name}</Typography>\n      </Grid>\n      <Grid item xs={12} container alignItems=\"center\">\n        <Grid item>\n          <Chip label={getTVShowStatus(status)} variant=\"outlined\" size={isMobile ? \"small\" : \"medium\"} />\n          &nbsp;&middot;&nbsp;\n        </Grid>\n        <Grid item>\n          <Typography variant={isMobile ? \"body1\" : \"h5\"}>\n            {moment(first_air_date).format('MMM D, YYYY')}&nbsp;\n            {episode_run_time.length > 0\n              && ` · ${runtimeHours > 0 ? `${runtimeHours}hr` : ''} ${runtimeMinutes}min`\n            }\n          </Typography>\n        </Grid>\n      </Grid>\n      { genres.length > 0 && (\n        <Grid item xs={12}>\n          { genres.map(i => (\n            <Chip label={i.name} className={classes.chip} size={isMobile ? \"small\" : \"medium\"} />\n          )) }\n        </Grid>\n      )}\n      <Grid item xs={12} className={classes.description}>\n        <Typography variant=\"body1\">{overview}</Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default TVShowHeader;\n","import React from 'react';\n\nimport { useSelector } from 'react-redux';\n\nimport { Grid } from '@material-ui/core';\n\nimport Statistic from '../../common/item/detail/Statistic';\n\nconst TVShowStatistics = () => {\n  const tvShow = useSelector(state => state.tvShows.tvShow);\n\n  const { number_of_episodes, number_of_seasons } = tvShow;\n\n  return (\n    <Grid item container justify=\"center\" alignItems=\"center\">\n      <Statistic col={6} count={number_of_seasons} label=\"Seasons\" divider />\n      <Statistic col={6} count={number_of_episodes} label=\"Episodes\"  />\n    </Grid>\n  );\n};\n\nexport default TVShowStatistics;\n","import React, { useEffect, useState } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\n\nimport TVShowHeader from '../components/tvShow/TVShowDetails/TVShowHeader';\nimport TVShowStatistics from '../components/tvShow/TVShowDetails/TVShowStatistics';\nimport ComponentLoader from '../components/common/ComponentLoader';\nimport Note from '../components/common/Note';\nimport Section from '../components/common/item/detail/Section';\n\nimport { getTVShowDetails } from '../api';\n\nimport { tvShowsActions } from '../reducers/ducks';\n\nimport { decryptKey } from '../utils/functions';\n\nimport { NOTE_NO_SELECTED_TV_SHOW, NOTE_TV_SHOW_NOT_FOUND } from '../constants';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(0, 2),\n  },\n  note: {\n    padding: theme.spacing(8, 2),\n  },\n}));\n\nconst TVShows = () => {\n  const classes = useStyles();\n\n  const tvShow = useSelector(state => state.tvShows.tvShow);\n  const isTVShowLoading = useSelector(state => state.tvShows.isTVShowLoading);\n  const dispatch = useDispatch();\n\n  const [isLoaded, setIsLoaded] = useState(true);\n\n  const { tvShowId } = useParams();\n\n  useEffect(() => {\n    if (tvShowId) {\n      getTVShowDetails(decryptKey(), tvShowId, response => {\n        dispatch(tvShowsActions.setActiveTVShow(response));\n        dispatch(tvShowsActions.setDetailsLoading(false));\n        setIsLoaded(true);\n      }, error => {\n        if (error.response) {\n          dispatch(tvShowsActions.setActiveTVShow({}));\n          setIsLoaded(error.response.data.status_code);\n        }\n      });\n    }\n    // setTimeout(() => window.scrollTo(0, 0), 100);\n  }, [tvShowId, dispatch]);\n\n  if (tvShowId === undefined) return (\n    <div className={classes.note}>\n      <Note details={NOTE_NO_SELECTED_TV_SHOW} />\n    </div>\n  );\n\n  if (isTVShowLoading) return <ComponentLoader />;\n\n  if (isLoaded === 34) return (\n    <div className={classes.note}>\n      <Note details={NOTE_TV_SHOW_NOT_FOUND} />\n    </div>\n  );\n\n  if (Object.keys(tvShow).length === 0 && tvShow.constructor === Object) return <ComponentLoader />;\n\n  return (\n    <Grid container spacing={8} className={classes.root}>\n      <Section divider={false} >\n        <TVShowHeader />\n      </Section>\n      \n      <Section>\n        <TVShowStatistics />\n      </Section>\n    </Grid>\n  );\n};\n\nexport default TVShows;\n"],"sourceRoot":""}