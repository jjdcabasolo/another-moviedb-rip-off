{"version":3,"sources":["components/movie/MovieDetails/MovieCast.js","components/movie/MovieDetails/MovieCollection.js","components/common/item/detail/PersonAvatarList.js","assets/icons/help.js","components/common/item/detail/Statistic.js","components/movie/MovieDetails/MovieCrew.js","components/movie/MovieDetails/MovieHeader.js","components/movie/MovieDetails/MovieProduction.js","components/movie/MovieDetails/MovieRecommendations.js","components/movie/MovieDetails/MovieReviews.js","containers/Movies.js"],"names":["useStyles","makeStyles","theme","_container","container","_defineProperty","breakpoints","only","margin","spacing","horizontalScrollItemSpacing","lastEntry","padding","MovieCast","useTheme","isMobile","useMediaQuery","isSmallTablet","isBigTablet","isDesktop","up","classes","movie","useSelector","state","movies","history","useHistory","cast","originalTitle","original_title","title","_useState","useState","_useState2","_slicedToArray","cardCol","setCardCol","useEffect","getCastCol","React","createElement","Grid","className","ItemSeeMore","appbarTitle","collapsedClickEvent","scrollToID","collapsedContent","ItemHorizontalContainer","handleSeeMore","push","concat","location","pathname","isWithSeeMore","length","maxCount","scrollAmount","slice","map","item","key","id","PersonAvatar","character","col","image","profile_path","name","isHorizontalScroll","expandedContent","ItemLazyLoad","contents","maxItemPerLoad","node","otherProps","type","isButtonShown","sectionId","seeMoreText","MovieCollection","_ref","anchorId","collectionContent","collection_content","overview","parts","ItemCardHorizontalList","items","isOverviewCollapsed","demo","backgroundColor","palette","colorScheme","background","primary","fontWeight","secondary","brokenImage","color","action","disabled","avatar","border","filter","listItem","marginBottom","PersonAvatarList","_ref$col","content","xs","Typography","variant","List","disablePadding","person","job","profilePath","isImageValid","ListItem","ListItemAvatar","Avatar","alt","src","TMDB_IMAGE_PREFIX","BrokenImage","avatarSize","ListItemText","defaultProps","PropTypes","arrayOf","shape","width","height","viewBox","fill","xmlns","cx","cy","r","stroke","stroke-width","d","stroke-linecap","stroke-linejoin","icon","marginLeft","svgStrokeFill","divider","cols3Adjustment","maxWidth","flexBasis","Statistic","count","isTotal","label","Fragment","alignItems","clsx","direction","justify","Tooltip","enterTouchDelay","leaveTouchDelay","HelpIcon","Divider","orientation","moreCrew","marginTop","paddingLeft","moreCrewText","MovieCrew","crew","crewMembers","setCrewMembers","_useState3","_useState4","masonryConfig","setMasonryConfig","_useState5","getCrewCol","_useState6","crewCol","setCrewCol","_getCrewMembers","getCrewMembers","director","_getCrewMembers3","writer","_getCrewMembers5","_getCrewMembers6","producer","executiveProducer","_getCrewMembers7","composer","_getCrewMembers9","cinematography","_getCrewMembers11","editor","_getCrewMembers13","_getCrewMembers14","costume","makeup","_getCrewMembers15","lighting","_getCrewMembers17","visualEffects","finalCrew","production","_toConsumableArray","CREW_TO_DISPLAY","forEach","e","identifier","a","renderMasonryGrid","crewShowMore","crewSection","masonryGrid","Array","colItemCount","memberCount","_loop","members","membersToDisplay","splice","MAX_CREW_ON_SHOW_LESS","crewTitle","c","crewLabel","min","minIndex","j","i","chip","ellipsis","fontSize","fontFamily","lineHeight","letterSpacing","posterImage","borderRadius","objectFit","objectPosition","MovieHeader","sectionVisibility","isImageLoaded","setIsImageLoaded","facebook","genres","imdb","instagram","posterPath","poster_path","tagline","tmdb","twitter","hasImage","breadcrumbs","MOVIE_BREADCRUMBS_CONFIG","visibilityId","style","display","onLoad","justifyContent","Chip","ItemLinks","ItemBreadcrumbs","MovieProduction","budget","productionCompanies","production_companies","productionCountries","production_countries","revenue","spokenLanguages","spoken_languages","hasProductionCompany","hasProductionCountry","hasSpokenLanguages","hasBudget","hasRevenue","toMillionsOrBillions","num","absoluteNumber","Math","abs","Number","toFixed","floor","renderProduction","arguments","undefined","gutterBottom","renderProductionList","index","punctuation","company","logoPath","logo_path","originCountry","origin_country","ProductionChip","country","iso_3166_1","english_name","iso_639_1","MovieRecommendations","recommendations","areRecommendations","MovieReviews","reviews","reviewsUI","review","author","author_details","date","created_at","rating","ItemReview","isEpisode","_trailer","root","trailer","between","note","Movies","itemDrawerOpen","sidebar","isSearchOpen","isMovieLoading","dispatch","useDispatch","isLoaded","setIsLoaded","_usePath","usePath","movieId","belongsToCollection","belongs_to_collection","releaseDate","release_date","youtube","collection","Object","keys","hasStatistics","isNaN","getMovieDetails","process","response","moviesActions","setActiveMovie","error","data","status_code","setDetailsLoading","Note","details","NOTE_NO_SELECTED_MOVIE","ComponentLoader","NOTE_MOVIE_NOT_FOUND","constructor","NOTE_SEARCH","ErrorBoundary","Section","isCollapsible","visible","ReactPlayer","controls","light","pip","url","ItemFooter","companies","link","year","moment","format","ScrollToTop"],"mappings":"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","file":"static/js/4.f8efdecb.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { Grid, useMediaQuery } from \"@material-ui/core\";\r\n\r\nimport ItemHorizontalContainer from \"../../common/item/ItemHorizontalContainer\";\r\nimport ItemLazyLoad from \"../../common/item/ItemLazyLoad\";\r\nimport ItemSeeMore from \"../../common/item/ItemSeeMore\";\r\nimport PersonAvatar from \"../../common/item/detail/PersonAvatar\";\r\n\r\nimport { getCastCol, scrollToID } from \"../../../utils/functions\";\r\n\r\nimport { MAX_CAST_HORIZONTAL_ITEMS as maxCount } from \"../../../constants\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    [theme.breakpoints.only(\"xs\")]: {\r\n      margin: theme.spacing(2, 0),\r\n    },\r\n    position: \"relative\",\r\n    width: \"inherit\",\r\n  },\r\n  horizontalScrollItemSpacing: {\r\n    margin: theme.spacing(0, 1),\r\n  },\r\n  lastEntry: {\r\n    padding: theme.spacing(1.5),\r\n  },\r\n}));\r\n\r\nconst SECTION_ID = \"cast\";\r\n\r\nconst MovieCast = () => {\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.only(\"xs\"));\r\n  const isSmallTablet = useMediaQuery(theme.breakpoints.only(\"sm\"));\r\n  const isBigTablet = useMediaQuery(theme.breakpoints.only(\"md\"));\r\n  const isDesktop = useMediaQuery(theme.breakpoints.up(\"lg\"));\r\n  const classes = useStyles();\r\n\r\n  const movie = useSelector((state) => state.movies.movie);\r\n\r\n  const history = useHistory();\r\n\r\n  const { cast, original_title: originalTitle, title } = movie;\r\n\r\n  const [cardCol, setCardCol] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setCardCol(getCastCol(isMobile, isSmallTablet));\r\n  }, [isMobile, isSmallTablet, isBigTablet, isDesktop]);\r\n\r\n  const handleSeeMore = () => {\r\n    history.push(`${history.location.pathname}/${SECTION_ID}`);\r\n  };\r\n\r\n  return (\r\n    <Grid container className={classes.container}>\r\n      <ItemSeeMore\r\n        appbarTitle={[title || originalTitle, \"Cast\"]}\r\n        collapsedClickEvent={() => scrollToID(\"movie-cast\")}\r\n        collapsedContent={\r\n          <ItemHorizontalContainer\r\n            handleSeeMore={handleSeeMore}\r\n            isWithSeeMore={cast.length > maxCount}\r\n            scrollAmount={144}\r\n          >\r\n            {cast.slice(0, maxCount).map((item) => (\r\n              <div\r\n                className={classes.horizontalScrollItemSpacing}\r\n                key={`movie-cast-person-avatar-${item.id}`}\r\n              >\r\n                <PersonAvatar\r\n                  character={item.character}\r\n                  col={12}\r\n                  image={item.profile_path}\r\n                  name={item.name}\r\n                  isHorizontalScroll\r\n                />\r\n              </div>\r\n            ))}\r\n            {cast.length <= maxCount && isMobile && (\r\n              <div className={classes.lastEntry} />\r\n            )}\r\n          </ItemHorizontalContainer>\r\n        }\r\n        expandedContent={\r\n          <Grid container spacing={2}>\r\n            <ItemLazyLoad\r\n              contents={cast}\r\n              maxItemPerLoad={20}\r\n              node={<PersonAvatar />}\r\n              otherProps={{ col: 12 / cardCol }}\r\n              type=\"itemCast\"\r\n            />\r\n          </Grid>\r\n        }\r\n        isButtonShown={cast.length > maxCount}\r\n        sectionId={SECTION_ID}\r\n        seeMoreText={`Show all ${cast.length} cast`}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default MovieCast;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport ItemCardHorizontalList from \"../../common/item/ItemCardHorizontalList\";\r\n\r\nconst MovieCollection = ({ anchorId }) => {\r\n  const movie = useSelector((state) => state.movies.movie);\r\n\r\n  const {\r\n    collection_content: collectionContent,\r\n    original_title: originalTitle,\r\n    title,\r\n  } = movie;\r\n\r\n  if (!collectionContent) return null;\r\n\r\n  const { overview, parts } = collectionContent;\r\n\r\n  return (\r\n    <ItemCardHorizontalList\r\n      appbarTitle={[title || originalTitle, \"Collection\"]}\r\n      anchorId={anchorId}\r\n      items={parts}\r\n      isOverviewCollapsed\r\n      overview={overview}\r\n    />\r\n  );\r\n};\r\n\r\nMovieCollection.propTypes = {\r\n  anchorId: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default MovieCollection;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Avatar,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport Typography from \"../../../custom/base/Typography\";\r\n\r\nimport BrokenImage from \"../../BrokenImage\";\r\n\r\nimport { TMDB_IMAGE_PREFIX } from \"../../../../constants\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  demo: {\r\n    backgroundColor: theme.palette.colorScheme.background,\r\n  },\r\n  primary: {\r\n    fontWeight: 600,\r\n  },\r\n  secondary: {\r\n    fontWeight: 200,\r\n  },\r\n  brokenImage: {\r\n    color: theme.palette.action.disabled,\r\n  },\r\n  avatar: {\r\n    border: `1px solid ${theme.palette.brokenImage.border}`,\r\n    \"& img\": {\r\n      filter: `brightness(${theme.palette.type === \"dark\" ? \"70%\" : \"90%\"})`,\r\n    },\r\n  },\r\n  listItem: {\r\n    \"&:last-child\": {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nconst PersonAvatarList = ({ col = 12, content, title }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid item xs={col}>\r\n      {title && (\r\n        <Typography variant=\"body2\" color=\"textSecondary\">\r\n          {title}\r\n        </Typography>\r\n      )}\r\n      <List disablePadding>\r\n        {content.map((person) => {\r\n          const { job, name, profile_path: profilePath } = person;\r\n          const isImageValid = profilePath !== null;\r\n\r\n          return (\r\n            <ListItem\r\n              key={`person-avatar-list-${name}`}\r\n              className={classes.listItem}\r\n            >\r\n              <ListItemAvatar>\r\n                {isImageValid ? (\r\n                  <Avatar\r\n                    alt={`${name}'s avatar.`}\r\n                    className={classes.avatar}\r\n                    src={`${TMDB_IMAGE_PREFIX}/w154${profilePath}`}\r\n                  />\r\n                ) : (\r\n                  <BrokenImage type=\"avatar\" avatarSize=\"small\" />\r\n                )}\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={\r\n                  <Typography variant=\"body2\" className={classes.primary}>\r\n                    {name}\r\n                  </Typography>\r\n                }\r\n                secondary={\r\n                  <Typography variant=\"body2\" className={classes.secondary}>\r\n                    {job}\r\n                  </Typography>\r\n                }\r\n              />\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nPersonAvatarList.defaultProps = {\r\n  col: 12,\r\n  content: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      profile_path: \"\",\r\n    })\r\n  ),\r\n};\r\n\r\nPersonAvatarList.propTypes = {\r\n  col: PropTypes.number,\r\n  content: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      job: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      profile_path: PropTypes.string,\r\n    })\r\n  ),\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default PersonAvatarList;\r\n","import React from \"react\";\r\nexport default () => (\r\n  <svg\r\n    width=\"32\"\r\n    height=\"32\"\r\n    viewBox=\"0 0 32 32\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <circle cx=\"16\" cy=\"16\" r=\"11\" stroke=\"#757575\" stroke-width=\"2\" />\r\n    <path\r\n      d=\"M13 14C15 12 15.219 11.781 16 11L19 14L16 17L16 18\"\r\n      stroke=\"#757575\"\r\n      stroke-width=\"2\"\r\n      stroke-linecap=\"round\"\r\n      stroke-linejoin=\"round\"\r\n    />\r\n    <circle cx=\"16\" cy=\"21\" r=\"0.5\" stroke=\"#757575\" />\r\n  </svg>\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport clsx from \"clsx\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Divider, Grid, Tooltip } from \"@material-ui/core\";\r\nimport Typography from \"../../../custom/base/Typography\";\r\nimport HelpIcon from \"../../../../assets/icons/help\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  icon: {\r\n    \"& svg\": {\r\n      height: theme.spacing(2),\r\n      width: theme.spacing(2),\r\n      marginBottom: -3,\r\n      marginLeft: theme.spacing(1),\r\n    },\r\n    \"& svg *[fill]\": {\r\n      fill: theme.palette.colorScheme.svgStrokeFill,\r\n    },\r\n    \"& svg *[stroke]\": {\r\n      stroke: theme.palette.colorScheme.svgStrokeFill,\r\n    },\r\n  },\r\n  divider: {\r\n    height: theme.spacing(4),\r\n  },\r\n  cols3Adjustment: {\r\n    maxWidth: \"33%\",\r\n    flexBasis: \"33%\",\r\n  },\r\n}));\r\n\r\nconst Statistic = ({ col, count, divider, isTotal, label }) => {\r\n  const classes = useStyles();\r\n\r\n  const xs = col - 1;\r\n  return (\r\n    <>\r\n      <Grid\r\n        alignItems=\"center\"\r\n        className={clsx({ [classes.cols3Adjustment]: xs === 3 })}\r\n        container\r\n        direction=\"column\"\r\n        item\r\n        justify=\"center\"\r\n        xs={xs}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"h5\">{count}</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography variant=\"overline\" color=\"textSecondary\">\r\n            {label}\r\n            {isTotal && (\r\n              <Tooltip\r\n                enterTouchDelay={0}\r\n                leaveTouchDelay={1500}\r\n                title=\"crew count is wholly based on the efforts of the tmdb community. it may or may not reflect the exact head count.\"\r\n              >\r\n                <span className={classes.icon}>\r\n                  <HelpIcon />\r\n                </span>\r\n              </Tooltip>\r\n            )}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      {divider && (\r\n        <Grid item>\r\n          <Divider orientation=\"vertical\" className={classes.divider} />\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nStatistic.defaultProps = {\r\n  divider: false,\r\n  isTotal: false,\r\n};\r\n\r\nStatistic.propTypes = {\r\n  col: PropTypes.number.isRequired,\r\n  count: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\r\n  divider: PropTypes.bool,\r\n  isTotal: PropTypes.bool,\r\n  label: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Statistic;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { Grid, useMediaQuery } from \"@material-ui/core\";\r\nimport Typography from \"../../custom/base/Typography\";\r\n\r\nimport ItemSeeMore from \"../../common/item/ItemSeeMore\";\r\nimport PersonAvatarList from \"../../common/item/detail/PersonAvatarList\";\r\nimport Statistic from \"../../common/item/detail/Statistic\";\r\n\r\nimport {\r\n  getCrewMembers,\r\n  getCrewCol,\r\n  scrollToID,\r\n} from \"../../../utils/functions\";\r\n\r\nimport { CREW_TO_DISPLAY, MAX_CREW_ON_SHOW_LESS } from \"../../../constants\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  moreCrew: {\r\n    marginBottom: theme.spacing(2),\r\n    marginTop: theme.spacing(-2),\r\n    paddingLeft: theme.spacing(9),\r\n  },\r\n  moreCrewText: {\r\n    fontWeight: 300,\r\n  },\r\n}));\r\n\r\nconst MovieCrew = () => {\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.only(\"xs\"));\r\n  const isSmallTablet = useMediaQuery(theme.breakpoints.only(\"sm\"));\r\n  const isBigTablet = useMediaQuery(theme.breakpoints.only(\"md\"));\r\n  const isDesktop = useMediaQuery(theme.breakpoints.up(\"lg\"));\r\n  const classes = useStyles();\r\n\r\n  const movie = useSelector((state) => state.movies.movie);\r\n\r\n  const { crew, original_title: originalTitle, title } = movie;\r\n\r\n  const [crewMembers, setCrewMembers] = useState({});\r\n  const [masonryConfig, setMasonryConfig] = useState([]);\r\n  const [crewCol, setCrewCol] = useState(getCrewCol());\r\n\r\n  useEffect(() => {\r\n    setCrewCol(getCrewCol(isMobile, isSmallTablet));\r\n  }, [isMobile, isSmallTablet, isBigTablet, isDesktop]);\r\n\r\n  useEffect(() => {\r\n    if (crew && crew.length > 0) {\r\n      const [director] = getCrewMembers(crew, \"directing\", [\"director\"]);\r\n      const [writer] = getCrewMembers(crew, \"writing\");\r\n      const [producer, executiveProducer] = getCrewMembers(crew, \"production\", [\r\n        \"producer\",\r\n        \"executive producer\",\r\n      ]);\r\n      const [composer] = getCrewMembers(crew, \"sound\", [\r\n        \"original music composer\",\r\n      ]);\r\n      const [cinematography] = getCrewMembers(crew, \"camera\", [\r\n        \"director of photography\",\r\n      ]);\r\n      const [editor] = getCrewMembers(crew, \"editing\", [\"editor\"]);\r\n      const [costume, makeup] = getCrewMembers(crew, \"costume & make-up\", [\r\n        \"costume design\",\r\n        \"makeup artist\",\r\n      ]);\r\n      const [lighting] = getCrewMembers(crew, \"lighting\");\r\n      const [visualEffects] = getCrewMembers(crew, \"visual effects\");\r\n      const production = [...producer, ...executiveProducer];\r\n      const finalCrew = {\r\n        director,\r\n        writer,\r\n        production,\r\n        composer,\r\n        cinematography,\r\n        editor,\r\n        costume,\r\n        makeup,\r\n        lighting,\r\n        visualEffects,\r\n      };\r\n      setCrewMembers(finalCrew);\r\n\r\n      setMasonryConfig([]);\r\n      CREW_TO_DISPLAY.forEach((e) => {\r\n        if (finalCrew[e.identifier].length > 0) {\r\n          setMasonryConfig((a) => [...a, e.identifier]);\r\n        }\r\n      });\r\n    }\r\n  }, [movie, crew]);\r\n\r\n  const renderMasonryGrid = (crewShowMore) => {\r\n    const masonryGrid = Array(crewCol).fill([]);\r\n    let colItemCount = Array(crewCol).fill(0);\r\n    let crewSection;\r\n    let memberCount = 0;\r\n\r\n    for (let a = 0; a < masonryConfig.length; a += 1) {\r\n      if (!crewShowMore) {\r\n        if (\r\n          masonryConfig[a] === \"composer\" ||\r\n          masonryConfig[a] === \"cinematography\" ||\r\n          masonryConfig[a] === \"editor\" ||\r\n          masonryConfig[a] === \"costume\" ||\r\n          masonryConfig[a] === \"makeup\" ||\r\n          masonryConfig[a] === \"lighting\" ||\r\n          masonryConfig[a] === \"visualEffects\"\r\n        )\r\n          break;\r\n      }\r\n\r\n      const members = [...crewMembers[masonryConfig[a]]];\r\n      memberCount = members.length;\r\n      const membersToDisplay = crewShowMore\r\n        ? members\r\n        : [...members.splice(0, MAX_CREW_ON_SHOW_LESS)];\r\n      const crewTitle = CREW_TO_DISPLAY.filter(\r\n        (c) => c.identifier === masonryConfig[a]\r\n      )[0];\r\n      const crewLabel = crewTitle.label(members.length);\r\n\r\n      crewSection = (\r\n        <>\r\n          <PersonAvatarList\r\n            key={`movie-crew-person-avatar-list-${crewTitle.identifier}`}\r\n            content={membersToDisplay}\r\n            title={crewLabel}\r\n          />\r\n          {!crewShowMore && members.length > 0 && (\r\n            <Grid item xs={12} className={classes.moreCrew}>\r\n              <Typography\r\n                variant=\"caption\"\r\n                color=\"textSecondary\"\r\n                className={classes.moreCrewText}\r\n              >\r\n                {`...and ${members.length} more`}\r\n              </Typography>\r\n            </Grid>\r\n          )}\r\n        </>\r\n      );\r\n\r\n      if (crewCol > 1) {\r\n        let min = colItemCount[0];\r\n        let minIndex = 0;\r\n\r\n        for (let j = 1; j < crewCol; j += 1) {\r\n          if (min > colItemCount[j]) {\r\n            min = colItemCount[j];\r\n            minIndex = j;\r\n          }\r\n        }\r\n\r\n        colItemCount[minIndex] += memberCount;\r\n        masonryGrid[minIndex] = [...masonryGrid[minIndex], crewSection];\r\n      } else {\r\n        masonryGrid[0] = [...masonryGrid[0], crewSection];\r\n      }\r\n    }\r\n\r\n    return masonryGrid.map((e, i) => (\r\n      <Grid item xs={12 / crewCol} key={`movie-crew-masonry-grid-${i}`}>\r\n        {e}\r\n      </Grid>\r\n    ));\r\n  };\r\n\r\n  const renderStatistic = () => (\r\n    <Statistic\r\n      col={12 / crew.length}\r\n      count={crew.length}\r\n      isTotal\r\n      label=\"Total Crew\"\r\n    />\r\n  );\r\n\r\n  if (!(\"director\" in crewMembers)) return null;\r\n\r\n  return (\r\n    <Grid container>\r\n      <ItemSeeMore\r\n        appbarTitle={[title || originalTitle, \"Crew\"]}\r\n        collapsedClickEvent={() => scrollToID(\"movie-crew\")}\r\n        collapsedContent={<Grid container>{renderMasonryGrid()}</Grid>}\r\n        expandedContent={\r\n          <Grid container spacing={2}>\r\n            {renderMasonryGrid(true)}\r\n            <Grid item container justify=\"center\" alignItems=\"center\">\r\n              {renderStatistic()}\r\n            </Grid>\r\n          </Grid>\r\n        }\r\n        sectionId=\"crew\"\r\n        seeMoreText={`Show all ${crew.length} crew`}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default MovieCrew;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { Grid, useMediaQuery } from \"@material-ui/core\";\r\nimport Chip from \"../../custom/base/Chip\";\r\nimport Typography from \"../../custom/base/Typography\";\r\n\r\nimport ItemBreadcrumbs from \"../../common/item/ItemBreadcrumbs\";\r\nimport ItemLinks from \"../../common/item/ItemLinks\";\r\n\r\nimport {\r\n  MOVIE_BREADCRUMBS_CONFIG,\r\n  TMDB_IMAGE_PREFIX,\r\n} from \"../../../constants\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  chip: {\r\n    margin: theme.spacing(0.25, 0.5, 0.25, 0),\r\n  },\r\n  ellipsis: {\r\n    fontSize: \"1rem\",\r\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n    fontWeight: \"400\",\r\n    lineHeight: \"1.5\",\r\n    letterSpacing: \"0.00938em\",\r\n  },\r\n  posterImage: {\r\n    filter: `brightness(${theme.palette.type === \"dark\" ? \"70%\" : \"90%\"})`,\r\n    border: `1px solid ${theme.palette.colorScheme.divider}`,\r\n    borderRadius: theme.shape.borderRadius,\r\n    height: \"355px\",\r\n    margin: theme.spacing(1),\r\n    width: \"250px\",\r\n    objectFit: \"cover\",\r\n    objectPosition: \"50% 0%\",\r\n  },\r\n  container: {\r\n    height: \"fit-content\",\r\n  },\r\n}));\r\n\r\nconst MovieHeader = ({ sectionVisibility }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const isDesktop = useMediaQuery(theme.breakpoints.up(\"lg\"));\r\n  const movie = useSelector((state) => state.movies.movie);\r\n  const [isImageLoaded, setIsImageLoaded] = useState(false);\r\n\r\n  const {\r\n    facebook,\r\n    genres,\r\n    imdb,\r\n    instagram,\r\n    original_title: originalTitle,\r\n    overview,\r\n    poster_path: posterPath,\r\n    tagline,\r\n    title,\r\n    tmdb,\r\n    twitter,\r\n  } = movie;\r\n\r\n  const hasImage = isDesktop && posterPath;\r\n\r\n  const breadcrumbs = MOVIE_BREADCRUMBS_CONFIG.filter(\r\n    (e) => sectionVisibility[e.visibilityId]\r\n  );\r\n\r\n  useEffect(() => {\r\n    setIsImageLoaded(false);\r\n  }, [posterPath]);\r\n\r\n  return (\r\n    <>\r\n      {hasImage && (\r\n        <Grid item xs={4} container spacing={2}>\r\n          <img\r\n            src={`${TMDB_IMAGE_PREFIX}/w500${posterPath}`}\r\n            alt={`${title || originalTitle}'s background cover.`}\r\n            className={classes.posterImage}\r\n            style={isImageLoaded ? {} : { display: \"none\" }}\r\n            onLoad={() => setIsImageLoaded(true)}\r\n          />\r\n        </Grid>\r\n      )}\r\n      <Grid\r\n        item\r\n        xs={hasImage ? 8 : 12}\r\n        container\r\n        spacing={2}\r\n        justifyContent=\"flex-start\"\r\n        alignItems=\"flex-start\"\r\n        className={classes.container}\r\n      >\r\n        <Grid item xs={12}>\r\n          {genres.map((i) => (\r\n            <Chip\r\n              className={classes.chip}\r\n              key={`movie-header-chip-${i.id}`}\r\n              label={i.name}\r\n              variant=\"outlined\"\r\n            />\r\n          ))}\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <ItemLinks\r\n            facebook={facebook}\r\n            imdb={imdb}\r\n            instagram={instagram}\r\n            tmdb={tmdb}\r\n            twitter={twitter}\r\n          />\r\n        </Grid>\r\n        {overview && overview.length > 0 && (\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"body2\">{overview}</Typography>\r\n          </Grid>\r\n        )}\r\n        {tagline && (\r\n          <Grid item xs={12}>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              variant=\"body2\"\r\n              className={classes.tagline}\r\n            >\r\n              <em>\"{tagline}\"</em>\r\n            </Typography>\r\n          </Grid>\r\n        )}\r\n        <Grid item xs={12}>\r\n          <ItemBreadcrumbs content={breadcrumbs} />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nMovieHeader.propTypes = {\r\n  sectionVisibility: {\r\n    collection: false,\r\n  },\r\n};\r\n\r\nMovieHeader.propTypes = {\r\n  sectionVisibility: PropTypes.shape({\r\n    cast: PropTypes.bool.isRequired,\r\n    collection: PropTypes.bool,\r\n    crew: PropTypes.bool.isRequired,\r\n    production: PropTypes.bool.isRequired,\r\n    recommendations: PropTypes.bool.isRequired,\r\n    trailer: PropTypes.bool.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default MovieHeader;\r\n","import React from \"react\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { Grid, useMediaQuery } from \"@material-ui/core\";\r\nimport Typography from \"../../custom/base/Typography\";\r\n\r\nimport ProductionChip from \"../../common/item/detail/ProductionChip\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    width: \"100%\",\r\n  },\r\n  name: {\r\n    fontWeight: 600,\r\n  },\r\n}));\r\n\r\nconst MovieProduction = () => {\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.only(\"xs\"));\r\n  const classes = useStyles();\r\n\r\n  const movie = useSelector((state) => state.movies.movie);\r\n\r\n  const {\r\n    budget,\r\n    production_companies: productionCompanies,\r\n    production_countries: productionCountries,\r\n    revenue,\r\n    spoken_languages: spokenLanguages,\r\n  } = movie;\r\n\r\n  const hasProductionCompany =\r\n    productionCompanies && productionCompanies.length > 0;\r\n  const hasProductionCountry =\r\n    productionCountries && productionCountries.length > 0;\r\n  const hasSpokenLanguages = spokenLanguages && spokenLanguages.length > 0;\r\n  const hasBudget = budget && budget > 0;\r\n  const hasRevenue = revenue && revenue > 0;\r\n\r\n  // money format for millions and billions\r\n  // taken from https://stackoverflow.com/q/36734201\r\n  const toMillionsOrBillions = (num) => {\r\n    const absoluteNumber = Math.abs(Number(num));\r\n    if (absoluteNumber >= 1.0e9) {\r\n      return (\r\n        <>\r\n          <span className={classes.name}>\r\n            {(absoluteNumber / 1.0e9).toFixed(2)}\r\n          </span>{\" \"}\r\n          billion\r\n        </>\r\n      );\r\n    }\r\n    if (absoluteNumber >= 1.0e6) {\r\n      return (\r\n        <>\r\n          <span className={classes.name}>\r\n            {Math.floor(absoluteNumber / 1.0e6)}\r\n          </span>{\" \"}\r\n          million\r\n        </>\r\n      );\r\n    }\r\n    if (absoluteNumber >= 1.0e3) {\r\n      return (\r\n        <>\r\n          <span className={classes.name}>\r\n            {Math.floor(absoluteNumber / 1.0e3)}\r\n          </span>{\" \"}\r\n          thousand\r\n        </>\r\n      );\r\n    }\r\n    return `${absoluteNumber}`;\r\n  };\r\n\r\n  const renderProduction = (title, items, xs = isMobile ? 12 : 6) => (\r\n    <Grid item xs={xs} container>\r\n      <Typography\r\n        variant=\"body2\"\r\n        gutterBottom\r\n        className={classes.title}\r\n        color=\"textSecondary\"\r\n      >\r\n        {title}\r\n      </Typography>\r\n      {items}\r\n    </Grid>\r\n  );\r\n\r\n  const renderProductionList = (primary, secondary, index, length) => {\r\n    let punctuation = \"\";\r\n\r\n    if (index === 0 && length === 1) {\r\n      // only 1 entry\r\n      punctuation = \"\";\r\n    } else if (index === length - 2) {\r\n      // entry before last #oxfordComma\r\n      punctuation = \", and \";\r\n    } else if (index < length - 1) {\r\n      // mid entry\r\n      punctuation = \", \";\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <span className={classes.name}>{primary}</span> ({secondary})\r\n        {punctuation}\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Grid item container>\r\n      <Grid\r\n        alignItems=\"flex-start\"\r\n        container\r\n        direction=\"row\"\r\n        item\r\n        justify=\"flex-start\"\r\n        spacing={3}\r\n        xs={12}\r\n      >\r\n        {hasProductionCompany &&\r\n          renderProduction(\r\n            \"Companies\",\r\n            productionCompanies.map((company) => {\r\n              const {\r\n                id,\r\n                logo_path: logoPath,\r\n                name,\r\n                origin_country: originCountry,\r\n              } = company;\r\n\r\n              return (\r\n                <Grid\r\n                  item\r\n                  key={`tv-show-production-production-company-chip-${id}`}\r\n                >\r\n                  <ProductionChip\r\n                    country={originCountry}\r\n                    image={logoPath}\r\n                    name={name}\r\n                  />\r\n                </Grid>\r\n              );\r\n            }),\r\n            12\r\n          )}\r\n        {hasRevenue &&\r\n          renderProduction(\r\n            \"Revenue\",\r\n            <Typography variant=\"body2\">\r\n              {toMillionsOrBillions(revenue)}\r\n            </Typography>\r\n          )}\r\n        {hasBudget &&\r\n          renderProduction(\r\n            \"Budget\",\r\n            <Typography variant=\"body2\">\r\n              {toMillionsOrBillions(budget)}\r\n            </Typography>\r\n          )}\r\n        {hasProductionCountry &&\r\n          renderProduction(\r\n            \"Country\",\r\n            <Typography variant=\"body2\">\r\n              {productionCountries.map((e, i) =>\r\n                renderProductionList(\r\n                  e.name,\r\n                  e.iso_3166_1,\r\n                  i,\r\n                  productionCountries.length\r\n                )\r\n              )}\r\n            </Typography>\r\n          )}\r\n        {hasSpokenLanguages &&\r\n          renderProduction(\r\n            \"Spoken Languages\",\r\n            <Typography variant=\"body2\">\r\n              {spokenLanguages.map((e, i) =>\r\n                renderProductionList(\r\n                  e.english_name,\r\n                  e.iso_639_1,\r\n                  i,\r\n                  spokenLanguages.length\r\n                )\r\n              )}\r\n            </Typography>\r\n          )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default MovieProduction;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport ItemCardHorizontalList from \"../../common/item/ItemCardHorizontalList\";\r\n\r\nconst MovieRecommendations = ({ anchorId }) => {\r\n  const movie = useSelector((state) => state.movies.movie);\r\n\r\n  const { original_title: originalTitle, title, recommendations } = movie;\r\n\r\n  if (!recommendations) return null;\r\n\r\n  return (\r\n    <ItemCardHorizontalList\r\n      anchorId={anchorId}\r\n      appbarTitle={[title || originalTitle, \"Recommendations\"]}\r\n      areRecommendations\r\n      items={recommendations}\r\n      overview={`If you liked ${\r\n        title || originalTitle\r\n      }, check out these other movies:`}\r\n    />\r\n  );\r\n};\r\n\r\nMovieRecommendations.propTypes = {\r\n  anchorId: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default MovieRecommendations;\r\n","import React from \"react\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nimport ItemLazyLoad from \"../../common/item/ItemLazyLoad\";\r\nimport ItemReview from \"../../common/item/ItemReview\";\r\nimport ItemSeeMore from \"../../common/item/ItemSeeMore\";\r\n\r\nimport { scrollToID } from \"../../../utils/functions\";\r\n\r\nconst SECTION_ID = \"reviews\";\r\n\r\nconst MovieReviews = () => {\r\n  const movie = useSelector((state) => state.movies.movie);\r\n\r\n  const { original_title: originalTitle, reviews, title } = movie;\r\n\r\n  if (!reviews) return null;\r\n\r\n  const reviewsUI = reviews.map((review, index) => {\r\n    const { author, author_details, created_at: date, content } = review;\r\n\r\n    const { rating } = author_details;\r\n\r\n    return (\r\n      <ItemReview\r\n        author={author}\r\n        content={content}\r\n        date={date}\r\n        rating={rating}\r\n        divider={index !== 0}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Grid container>\r\n      <ItemSeeMore\r\n        appbarTitle={[title || originalTitle, \"Reviews\"]}\r\n        collapsedClickEvent={() => scrollToID(\"movie-reviews\")}\r\n        collapsedContent={reviewsUI[0]}\r\n        expandedContent={\r\n          <ItemLazyLoad\r\n            contents={reviews}\r\n            maxItemPerLoad={5}\r\n            node={<ItemReview />}\r\n            type=\"itemReviews\"\r\n          />\r\n        }\r\n        isButtonShown={reviews.length > 1}\r\n        isEpisode\r\n        sectionId={SECTION_ID}\r\n        seeMoreText={`Show all ${reviews.length} reviews`}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default MovieReviews;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport moment from \"moment\";\r\nimport ReactPlayer from \"react-player\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { usePath } from \"../hooks\";\r\n\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { Grid, useMediaQuery } from \"@material-ui/core\";\r\n\r\nimport ComponentLoader from \"../components/common/ComponentLoader\";\r\nimport ErrorBoundary from \"../components/navigation/ErrorBoundary\";\r\nimport ItemFooter from \"../components/common/item/ItemFooter\";\r\nimport MovieCast from \"../components/movie/MovieDetails/MovieCast\";\r\nimport MovieCollection from \"../components/movie/MovieDetails/MovieCollection\";\r\nimport MovieCrew from \"../components/movie/MovieDetails/MovieCrew\";\r\nimport MovieHeader from \"../components/movie/MovieDetails/MovieHeader\";\r\nimport MovieProduction from \"../components/movie/MovieDetails/MovieProduction\";\r\nimport MovieRecommendations from \"../components/movie/MovieDetails/MovieRecommendations\";\r\nimport MovieReviews from \"../components/movie/MovieDetails/MovieReviews\";\r\nimport Note from \"../components/common/Note\";\r\nimport ScrollToTop from \"../components/common/ScrollToTop\";\r\nimport Section from \"../components/common/item/detail/Section\";\r\n\r\nimport { getMovieDetails } from \"../api\";\r\n\r\nimport { moviesActions } from \"../reducers/ducks\";\r\n\r\nimport {\r\n  NOTE_NO_SELECTED_MOVIE,\r\n  NOTE_MOVIE_NOT_FOUND,\r\n  NOTE_SEARCH,\r\n} from \"../constants\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(0, 2),\r\n  },\r\n  trailer: {\r\n    [theme.breakpoints.only(\"xs\")]: {\r\n      height: `${theme.spacing(24)}px !important`,\r\n    },\r\n    [theme.breakpoints.only(\"sm\")]: {\r\n      height: `${theme.spacing(35)}px !important`,\r\n    },\r\n    [theme.breakpoints.between(\"sm\", \"md\")]: {\r\n      height: `${theme.spacing(45)}px !important`,\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      height: `${theme.spacing(60)}px !important`,\r\n    },\r\n    \"& .react-player__preview\": {\r\n      border: `1px solid ${theme.palette.brokenImage.border}`,\r\n      borderRadius: theme.shape.borderRadius,\r\n    },\r\n    \"& iframe\": {\r\n      border: `1px solid ${theme.palette.brokenImage.border}`,\r\n      borderRadius: theme.shape.borderRadius,\r\n    },\r\n  },\r\n  note: {\r\n    padding: theme.spacing(16, 2),\r\n  },\r\n}));\r\n\r\nconst Movies = () => {\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.only(\"xs\"));\r\n  const classes = useStyles();\r\n\r\n  const itemDrawerOpen = useSelector((state) => state.sidebar.itemDrawerOpen);\r\n  const isSearchOpen = useSelector((state) => state.sidebar.isSearchOpen);\r\n  const movie = useSelector((state) => state.movies.movie);\r\n  const isMovieLoading = useSelector((state) => state.movies.isMovieLoading);\r\n  const dispatch = useDispatch();\r\n\r\n  const [isLoaded, setIsLoaded] = useState(true);\r\n\r\n  const [, movieId] = usePath();\r\n\r\n  const {\r\n    belongs_to_collection: belongsToCollection,\r\n    budget,\r\n    cast,\r\n    collection_content: collectionContent,\r\n    crew,\r\n    original_title: originalTitle,\r\n    production_companies: productionCompanies,\r\n    recommendations,\r\n    release_date: releaseDate,\r\n    revenue,\r\n    reviews,\r\n    title,\r\n    tmdb,\r\n    youtube,\r\n  } = movie;\r\n\r\n  const sectionVisibility = {\r\n    trailer: youtube && youtube.length > 0,\r\n    cast: cast && cast.length > 0,\r\n    crew: crew && crew.length > 0,\r\n    production: productionCompanies && productionCompanies.length > 0,\r\n    collection:\r\n      belongsToCollection && Object.keys(belongsToCollection).length > 0,\r\n    recommendations: recommendations && recommendations.length > 0,\r\n    reviews: reviews && reviews.length > 0,\r\n  };\r\n  const hasStatistics =\r\n    !Number.isNaN(budget) &&\r\n    !Number.isNaN(revenue) &&\r\n    budget !== 0 &&\r\n    revenue !== 0;\r\n\r\n  useEffect(() => {\r\n    if (movieId === \"search\") return;\r\n\r\n    if (movieId) {\r\n      const parmesanio = process.env.REACT_APP_TMDB_PARMESANIO;\r\n\r\n      getMovieDetails(\r\n        parmesanio,\r\n        movieId,\r\n        (response) => {\r\n          dispatch(moviesActions.setActiveMovie(response));\r\n          setIsLoaded(true);\r\n        },\r\n        (error) => {\r\n          if (error.response) {\r\n            dispatch(moviesActions.setActiveMovie({}));\r\n            setIsLoaded(error.response.data.status_code);\r\n          }\r\n        },\r\n        () => {\r\n          dispatch(moviesActions.setDetailsLoading(false));\r\n        }\r\n      );\r\n    }\r\n  }, [movieId, dispatch]);\r\n\r\n  if (movieId === undefined) {\r\n    return (\r\n      <div className={classes.note}>\r\n        <Note details={NOTE_NO_SELECTED_MOVIE} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (isMovieLoading) {\r\n    return <ComponentLoader location=\"itemcontainer\" />;\r\n  }\r\n\r\n  if (isLoaded === 34) {\r\n    return (\r\n      <div className={classes.note}>\r\n        <Note details={NOTE_MOVIE_NOT_FOUND} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (Object.keys(movie).length === 0 && movie.constructor === Object) {\r\n    if (isSearchOpen) {\r\n      return (\r\n        <div className={classes.note}>\r\n          <Note details={NOTE_SEARCH} />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return <ComponentLoader location=\"itemcontainer\" />;\r\n  }\r\n\r\n  return (\r\n    <ErrorBoundary>\r\n      <Grid container spacing={isMobile ? 4 : 8} className={classes.root}>\r\n        <Section\r\n          anchorId=\"movie-header\"\r\n          divider={!hasStatistics}\r\n          isCollapsible={false}\r\n          visible={\r\n            Object.keys(movie).length !== 0 && movie.constructor === Object\r\n          }\r\n        >\r\n          <MovieHeader sectionVisibility={sectionVisibility} />\r\n        </Section>\r\n\r\n        <Section\r\n          anchorId=\"movie-trailer\"\r\n          title=\"Trailer\"\r\n          visible={sectionVisibility.trailer}\r\n        >\r\n          <ReactPlayer\r\n            className={classes.trailer}\r\n            controls\r\n            light\r\n            pip\r\n            url={youtube}\r\n            width=\"100%\"\r\n          />\r\n        </Section>\r\n\r\n        <Section\r\n          anchorId=\"movie-cast\"\r\n          title=\"Cast\"\r\n          visible={sectionVisibility.cast}\r\n        >\r\n          <MovieCast />\r\n        </Section>\r\n\r\n        <Section\r\n          anchorId=\"movie-crew\"\r\n          title=\"Crew\"\r\n          visible={sectionVisibility.crew}\r\n        >\r\n          <MovieCrew />\r\n        </Section>\r\n\r\n        <Section\r\n          anchorId=\"movie-production\"\r\n          divider\r\n          title=\"Production\"\r\n          visible={sectionVisibility.production}\r\n        >\r\n          <MovieProduction />\r\n        </Section>\r\n\r\n        <Section\r\n          anchorId=\"movie-reviews\"\r\n          divider\r\n          title=\"Reviews\"\r\n          visible={sectionVisibility.reviews}\r\n        >\r\n          <MovieReviews />\r\n        </Section>\r\n\r\n        <Section\r\n          anchorId=\"movie-collection\"\r\n          title={collectionContent ? collectionContent.name : \"\"}\r\n          visible={sectionVisibility.collection}\r\n        >\r\n          <MovieCollection anchorId=\"movie-collection\" />\r\n        </Section>\r\n\r\n        <Section\r\n          anchorId=\"movie-recommendations\"\r\n          title=\"Recommendations\"\r\n          visible={sectionVisibility.recommendations}\r\n        >\r\n          <MovieRecommendations anchorId=\"movie-recommendations\" />\r\n        </Section>\r\n\r\n        <Section anchorId=\"movie-end-credits\" divider={false}>\r\n          <ItemFooter\r\n            companies={productionCompanies.map((e) => e.name)}\r\n            link={tmdb}\r\n            title={title || originalTitle}\r\n            year={releaseDate ? moment(releaseDate).format(\"YYYY\") : \"\"}\r\n          />\r\n        </Section>\r\n      </Grid>\r\n      {!itemDrawerOpen && <ScrollToTop />}\r\n    </ErrorBoundary>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n"],"sourceRoot":""}