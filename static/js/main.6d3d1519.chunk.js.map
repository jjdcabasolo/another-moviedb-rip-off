{"version":3,"sources":["components/navigation/appbar/AppbarMenu.js","constants/drawers.js","constants/movies.js","constants/note.js","constants/tvShows.js","constants/logo.js","constants/links.js","constants/items.js","components/common/BrokenImage.js","components/common/item/ItemLazyLoad.js","utils/functions/extractCrew.js","utils/functions/text.js","utils/functions/movies.js","utils/functions/scroll.js","utils/functions/debounce.js","utils/functions/tvShows.js","utils/components/ResponsiveComponent.js","components/apiKey/APIKeyDialog.js","components/common/GradientBackground.js","components/navigation/Helmet.js","components/common/item/ItemCategory.js","components/common/item/ItemHeader.js","components/common/item/ItemList.js","components/common/item/ItemSearch.js","components/common/item/ItemSearchResults.js","routes/config.js","components/navigation/appbar/Appbar.js","containers/InitAPICalls.js","components/common/item/ItemDrawer.js","components/navigation/sidebar/SidebarContent.js","components/navigation/sidebar/SidebarTitlebar.js","components/navigation/sidebar/Sidebar.js","components/common/CustomSnackbar.js","containers/Snackbars.js","components/notFound/NotFound.js","routes/index.js","containers/App.js","reducers/config.js","store/configureStore.js","serviceWorker.js","index.js","api/config.js","api/movies.js","api/tvShows.js","hooks/usePath.js","utils/functions/encrypt.js","components/common/Note.js","components/common/ComponentLoader.js","components/overrides/AppBar.js","components/common/item/ItemCard.js","reducers/ducks/browser.js","reducers/ducks/movies.js","reducers/ducks/sidebar.js","reducers/ducks/snackbar.js","reducers/ducks/tmdbConfig.js","reducers/ducks/tvShows.js","components/common/DarkModeToggle.js"],"names":["useStyles","makeStyles","listItemIcon","display","justifyContent","AppbarMenu","classes","history","useHistory","activeTab","useSelector","state","sidebar","useState","anchorEl","setAnchorEl","handleClose","renderMenuItem","primary","link","menuItemClickType","icon","onClick","window","open","push","handleMenuItemClick","className","aria-controls","aria-haspopup","edge","event","currentTarget","id","keepMounted","onClose","Boolean","type","GITHUB_REPO_LINK","fontSize","FIGMA_LINK","ITEM_DRAWER_WIDTH","SIDEBAR_WIDTH","API_KEY_DIALOG_TITLE","API_KEY_DIALOG_SUBTITLE","API_KEY_DIALOG_TMDB_API_LINK","API_KEY_DIALOG_TMDB_LINK","API_KEY_DIALOG_NOTE","API_KEY_DIALOG_MISSING_USERNAME","API_KEY_DIALOG_MISSING_API_KEY","API_KEY_DIALOG_HAS_KEY","MOVIE_DRAWER_TMDB_IMAGE_PREFIX","MOVIE_DRAWER_CATEGORY_CHIPS","label","identifier","isActive","e","description","CREW_TO_DISPLAY","a","MOVIE_BREADCRUMBS_CONFIG","visibilityId","NOTE_NO_API_KEY","VpnKeyTwoTone","header","content","NOTE_NO_SELECTED_MOVIE","MovieTwoTone","NOTE_NO_SELECTED_TV_SHOW","LiveTvTwoTone","NOTE_OFFLINE","CloudOffTwoTone","areYouLost","Audio","beCareful","NOTE_PAGE_NOT_FOUND","NaturePeopleTwoTone","IconButton","aria-label","size","play","PlayCircleFilledTwoTone","NOTE_MOVIE_NOT_FOUND","ErrorTwoTone","NOTE_TV_SHOW_NOT_FOUND","TV_SHOW_DRAWER_CATEGORY_CHIPS","TV_SHOW_BREADCRUMBS_CONFIG","IMDB_LOGO","IMDB_LOGO_DARK","TMDB_LOGO","TMDB_LOGO_DARK","TMDB_SIGN_UP","OVERVIEW_MAX_WORDS","MAX_CAST_HORIZONTAL_ITEMS","MAX_WORD_COUNT","MAX_ITEMS_BEFORE_COLLAPSING","MAX_ITEM_PER_LOAD","TRUNCATION_ALLOWANCE","MAX_CREW_ON_SHOW_LESS","NO_DATE_TEXT","theme","brokenImage","color","palette","action","disabled","brokenImageContainer","backgroundColor","background","border","brokenImageBG","BrokenImage","avatarSize","extraClass","clsx","defaultProps","progressContainer","padding","spacing","ItemLazyLoad","contents","hideLoader","maxItemPerLoad","node","otherProps","page","setPage","loaderRef","useRef","useEffect","observer","IntersectionObserver","isIntersecting","previousPage","root","rootMargin","threshold","current","observe","disconnect","slice","map","index","cloneElement","key","episode","isLastItem","length","rank","character","image","profile_path","name","getProps","container","justify","ref","isCollapsed","FormatListNumbered","getCrewMembers","crew","department","job","crewMembers","Array","fill","evaluateJob","element","toLowerCase","forEach","filter","reduce","accumulator","findIndex","concat","truncateText","text","substring","fragmentedWords","split","splice","join","toMillionsOrBillions","num","absoluteNumber","Math","abs","Number","toFixed","floor","toCamelCase","result","replace","charAt","toUpperCase","enumerate","array","getCastCol","isMobile","isSmallTablet","getCrewCol","scrollToID","isSmooth","anchor","document","getElementById","setTimeout","scrollIntoView","behavior","debounceEvent","callback","time","interval","args","clearTimeout","getTVShowStatus","status","selectSeason","seasons","seasonNumber","filteredSeason","season","season_number","ResponsiveComponent","desktopComponent","mobileComponent","tabletComponent","useTheme","isDesktop","useMediaQuery","breakpoints","up","isTablet","between","test","navigator","userAgent","note","marginTop","typography","subtitle2","errorNote","error","main","filledInput","margin","progressWrapper","position","buttonProgress","top","left","marginLeft","paper","down","initState","value","showAPIKey","APIKeyDialog","apiKey","username","hasApiKey","dispatch","useDispatch","setOpen","isApplyingKey","setIsApplyingKey","apiKeyState","setApiKeyState","usernameState","setUsernameState","handleClickOpen","renderListItem","ListItem","button","ListItemIcon","ErrorOutlineTwoTone","AccountCircleTwoTone","ListItemText","secondary","Dialog","maxWidth","aria-labelledby","disableBackdropClick","disableEscapeKeyDown","DialogTitle","DialogContent","DialogContentText","Link","href","TextField","autoFocus","onChange","target","fullWidth","variant","helperText","FormHelperTextProps","FormControl","InputLabel","htmlFor","FilledInput","endAdornment","InputAdornment","onMouseDown","preventDefault","VisibilityTwoTone","VisibilityOffTwoTone","FormHelperText","DialogActions","Button","snackbarActions","showSnackbar","sidebarActions","clearAPIKey","hasUsernameValue","hasApiKeyValue","getPopularMovies","setAPIKey","CircularProgress","thickness","maskImage","objectFit","objectPosition","height","width","browserSize","only","noImagePadding","GradientBackground","isItemSelected","isLoading","isVisible","src","alt","Helmet","isDefault","titleTemplate","defaultTitle","rel","chip","marginRight","popover","topCategories","overflowX","category","fontWeight","h6","lastEntry","chipDropdown","chipLabel","paddingLeft","paddingRight","ItemCategory","iconSize","movieCategory","movies","tvShowCategory","tvShows","undefined","isMovie","isTVShow","categoryChips","renderCategoryChips","Chip","itemCategory","moviesActions","setCategory","tvShowsActions","Tooltip","title","ArrowDropDown","Popover","anchorOrigin","vertical","horizontal","transformOrigin","Typography","gutterBottom","SearchTwoTone","titleLite","textAlign","subtitle","categoryContainer","ItemHeader","activeCategory","moment","format","itemListContainer","titleContainer","ItemList","movieList","list","movieLoadedContent","loadedContent","tvShowList","tvShowLoadedContent","contentList","onLine","localStorage","getItem","Note","details","ComponentLoader","Grid","alignItems","direction","item","xs","itemListCard","ItemCard","col","drawerOpen","mobile","searchIcon","ItemSearch","isPermanentlyOpen","isSearchOpen","itemDrawerOpen","searchQuery","inputBaseRef","query","setQuery","usePath","categoryPath","searchQueryOnPath","fetchSearchResults","useCallback","q","searchMovie","decryptKey","response","setSearchResults","searchTVShow","setSearchQuery","setSearch","debouncedQuery","handleSetSearchQuery","handleSetSearch","isOpen","focus","goBack","newQuery","InputBase","input","CloseTwoTone","inputRef","placeholder","drawerOpenContainer","drawerClosedContainer","overflowY","noResults","default","dialogTitle","dialogContent","itemSearchContainer","flexGrow","ItemSearchResults","isBigTablet","movieSearchResults","searchResults","tvShowSearchResults","idPath","setContent","isDialogOpen","setIsDialogOpen","release_date","first_air_date","itemCardCol","results","handleDrawerToggle","setItemDrawer","fullScreen","ArrowBackTwoTone","dividers","Container","Movies","lazy","TVShows","routes","component","path","child","bottomNavigation","bottom","titlebar","paddingTop","paddingBottom","containerItemSelected","detailContainer","Appbar","children","appbarContainerRef","itemListContainerRef","isMovieLoading","isTVShowLoading","movie","tvShow","activeBottomTab","setActiveBottomTab","originalTitle","original_title","movieBG","poster_path","originalName","original_name","tvShowBG","isMovieEmpty","Object","keys","constructor","isTVShowEmpty","isTabActive","isItemEmpty","isItemLoading","handleSearchClick","CssBaseline","AppBar","Toolbar","displayTitle","titleComponent","noWrap","searchComponent","renderToolbarContents","BottomNavigation","_","tab","setActiveTab","handleBottomNavigationClick","showLabels","BottomNavigationAction","to","InitAPICalls","hasError","errorMessage","getTrendingMovies","setMovieList","data","getNowPlayingMovies","getTopRatedMovies","getUpcomingMovies","getHighestGrossingMovies","getTrendingShows","setTVShowsList","getAiringTodayShows","getOnTheAirShows","getPopularShows","getTopRatedShows","drawer","flexShrink","drawerPaper","drawerOpenPaperPadding","drawerClose","overflow","transition","transitions","create","easing","sharp","duration","leavingScreen","enteringScreen","toolbar","grow","itemCardContainer","desktopDrawerOpenItemCardContainer","marginBottom","desktopDrawerClosedItemCardContainer","itemHeader","itemSearch","options","borderRadius","shape","right","zIndex","ItemDrawer","itemDrawerOpenStore","setItemDrawerOpen","searchPath","contentToDisplay","itemDrawerFinalState","isDrawerOpen","renderToggleItemDrawer","isEdgeEnd","ChevronLeft","ChevronRight","Drawer","location","isItemDrawerOpen","cardGridContainer","renderItemCards","appTitle","bottomTabs","alignContent","flex","flexWrap","mixins","tmdbLogo","textDecoration","divider","SidebarContent","darkMode","renderListItemLink","toggleDrawer","MenuTwoTone","List","selected","setActiveMovie","setActiveTVShow","ListSubheader","CodeTwoTone","WebTwoTone","Divider","DarkModeToggle","toolbarDrawer","SidebarTitlebar","date","appbar","contentItemSelected","whiteSpace","itemContainer","marginDrawerOpen","Sidebar","backdrop_path","handleDrawerState","setDrawer","ClickAwayListener","onClickAway","onMouseEnter","onMouseLeave","style","message","opacity","CustomSnackbar","handleOnClose","closeIcon","Close","snackbarSettings","success","autoHideDuration","green","CheckCircleOutlineOutlined","red","ErrorOutlineOutlined","snackbarMessage","Snackbar","TransitionComponent","Slide","SnackbarContent","Snackbars","isShown","snackbar","hideSnackbar","NotFound","useTP","renderNote","renderComponent","fallback","Routes","exact","from","App","browser","useLayoutEffect","updateSize","browserActions","changeBrowserSize","innerHeight","innerWidth","addEventListener","removeEventListener","createMuiTheme","amber","grey","utils","MomentUtils","basename","appReducer","combineReducers","router","routerReducer","browserReducer","moviesReducer","sidebarReducer","snackbarReducer","tmdbConfig","tmdbConfigReducer","tvShowsReducer","rootReducer","createBrowserHistory","store","createStore","compose","applyMiddleware","reduxThunk","routerMiddleware","devToolsExtension","f","isLocalhost","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","URL","process","origin","fetch","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","axios","defaults","baseURL","api_key","fail","after","params","finally","sort_by","getMovieCollection","collectionId","getMovieDetails","movie_id","append_to_response","collection","belongs_to_collection","credits","external_ids","tmdb_id","recommendations","videos","facebook_id","instagram_id","twitter_id","imdb_id","cast","trailer","youtube","facebook","instagram","twitter","imdb","tmdb","collectionResponse","collectionData","parts","sort","b","utc","diff","collection_content","getTVShowDetails","tv_id","getTVShowSeasonDetails","episodes","useLocation","pathname","encrypt","passphrase","CryptoJS","AES","toString","decrypt","enc","Utf8","decrpytedUsername","h3","i","loaderContainerDesktop","loaderContainerDrawerOpen","loaderContainerDrawerClosed","showReload","setShowReload","timer","styled","MuiAppBar","borderBottom","boxShadow","media","mediaDrawerOpen","mediaDrawerClosed","typoOverlayMediaDrawerOpen","typoOverlayMediaDrawerClosed","typoOverlay","flexDirection","pointerEvents","typoOverlayBackgroundGradient","backgroundImage","cardContainer","easeOut","itemExtension","flexBasis","body2","rankText","cardTitle","letterSpacing","fontWeightMedium","horizontalScrollItemWidth","horizontalScrollItemSpacing","card","textImageInvalid","hasSpacingHorizontalScroll","isHorizontalScroll","dateDisplay","isImageValid","imagePath","setDetailsLoading","PropTypes","browserActionType","payload","initialState","scrollY","pageYOffset","moviesActionType","highestGrossing","nowPlaying","popular","topRated","trending","upcoming","castShowMore","crewShowMore","sidebarActionType","toggleLights","initialApiKey","initialUsername","initialTab","hash","includes","evaluateInitialTab","setItem","removeItem","snackbarActionType","tmdbConfigActionType","countryConfig","setCountryConfig","tvShowsActionType","selectedSeason","setEpisode","setSelectedSeason","isSeasonLoading","airingToday","onTheAir","descendingEpisodes","episode_number","handleToggleLights"],"mappings":"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","file":"static/js/main.6d3d1519.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nimport { useHistory } from 'react-router';\nimport { useSelector } from 'react-redux';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  IconButton,\n  ListItemIcon,\n  ListItemText,\n  Menu,\n  MenuItem,\n} from '@material-ui/core';\nimport {\n  MoreVertTwoTone,\n  OpenInNewTwoTone,\n} from '@material-ui/icons';\n\nimport DarkModeToggle from '../../common/DarkModeToggle';\n\nimport {\n  FIGMA_LINK,\n  GITHUB_REPO_LINK,\n} from '../../../constants';\n\nconst useStyles = makeStyles({\n  listItemIcon: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n});\n\nconst AppbarMenu = () => {\n  const classes = useStyles();\n\n  const history = useHistory();\n\n  const activeTab = useSelector((state) => state.sidebar.activeTab);\n\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleMenuItemClick = (menuItemClickType, link) => {\n    switch (menuItemClickType) {\n      case 'newLink':\n        window.open(link, '_blank');\n        break;\n      case 'home':\n        history.push(`/${activeTab}`);\n        break;\n      default:\n        break;\n    }\n    handleClose();\n  };\n\n  const renderMenuItem = (primary, link, menuItemClickType, icon) => (\n    <MenuItem onClick={() => handleMenuItemClick(menuItemClickType, link)}>\n      <ListItemText primary={primary} />\n      {icon && (\n        <ListItemIcon className={classes.listItemIcon}>\n          {icon}\n        </ListItemIcon>\n      )}\n    </MenuItem>\n  );\n\n  return (\n    <>\n      <IconButton\n        aria-controls=\"simple-menu\"\n        aria-haspopup=\"true\"\n        edge=\"end\"\n        onClick={handleClick}\n      >\n        <MoreVertTwoTone />\n      </IconButton>\n      <Menu\n        anchorEl={anchorEl}\n        id=\"simple-menu\"\n        keepMounted\n        onClose={handleClose}\n        open={Boolean(anchorEl)}\n      >\n        {renderMenuItem(\n          'Go home',\n          '',\n          'home',\n        )}\n        <DarkModeToggle type=\"menuItem\" />\n        {renderMenuItem(\n          'GitHub Repository',\n          GITHUB_REPO_LINK,\n          'newTab',\n          <OpenInNewTwoTone fontSize=\"small\" />,\n        )}\n        {renderMenuItem(\n          'Figma (Wireframes)',\n          FIGMA_LINK,\n          'newTab',\n          <OpenInNewTwoTone fontSize=\"small\" />,\n        )}\n      </Menu>\n    </>\n  );\n};\n\nexport default AppbarMenu;\n","export const ITEM_DRAWER_WIDTH = 380;\n\nexport const SIDEBAR_WIDTH = 280;\n","export const API_KEY_DIALOG_TITLE = 'Enter TMDb API key';\r\n\r\nexport const API_KEY_DIALOG_SUBTITLE = 'To view the contents of this application, you need to enter your own API key. ';\r\n\r\nexport const API_KEY_DIALOG_TMDB_API_LINK = 'https://developers.themoviedb.org/3/getting-started/introduction';\r\n\r\nexport const API_KEY_DIALOG_TMDB_LINK = 'https://www.themoviedb.org';\r\n\r\nexport const API_KEY_DIALOG_NOTE = 'Your API key will be encrypted throughout your session. ';\r\n\r\nexport const API_KEY_DIALOG_MISSING_USERNAME = 'Username is missing!';\r\n\r\nexport const API_KEY_DIALOG_MISSING_API_KEY = 'API key is missing!';\r\n\r\nexport const API_KEY_DIALOG_HAS_KEY = 'You had already entered your API key. You can view the app with data live from ';\r\n\r\nexport const MOVIE_DRAWER_TMDB_IMAGE_PREFIX = 'http://image.tmdb.org/t/p/';\r\n\r\nexport const MOVIE_DRAWER_CATEGORY_CHIPS = [\r\n  {\r\n    label: 'Trending',\r\n    identifier: 'trending',\r\n    isActive: (e) => e === 'trending',\r\n    description: 'Trending movies on TMDb. Changes everyday.',\r\n  },\r\n  {\r\n    label: 'Popular',\r\n    identifier: 'popular',\r\n    isActive: (e) => e === 'popular',\r\n    description: 'Winners of the popularity contest, I guess.',\r\n  },\r\n  {\r\n    label: 'Now Playing',\r\n    identifier: 'nowPlaying',\r\n    isActive: (e) => e === 'nowPlaying',\r\n    description: 'Movies in theatres. Oh, are theatres still a thing?',\r\n  },\r\n  {\r\n    label: 'Top Rated',\r\n    identifier: 'topRated',\r\n    isActive: (e) => e === 'topRated',\r\n    description: 'Top rated movies on TMDb. And no, the rating system of TMDb will not be implemented.',\r\n  },\r\n  {\r\n    label: 'Upcoming',\r\n    identifier: 'upcoming',\r\n    isActive: (e) => e === 'upcoming',\r\n    description: 'Upcoming movies in theatres. Movies may vary, depending on where you are.',\r\n  },\r\n  {\r\n    label: 'Highest Grossing',\r\n    identifier: 'highestGrossing',\r\n    isActive: (e) => e === 'highestGrossing',\r\n    description: 'Highest grossing movies of all time.',\r\n  },\r\n];\r\n\r\n// CREW PLAN\r\n// // default\r\n// department: \"Directing\",\r\n//   job: \"Director\",\r\n// department: \"Writing\",\r\n// department: \"Production\",\r\n//   job: \"Producer\",\r\n//   job: \"Co-Producer\",\r\n//   job: \"Executive Producer\",\r\n//   job: \"Casting\",\r\n// // see more\r\n// department: \"Sound\",\r\n//   job: \"Original Music Composer\",\r\n// department: \"Camera\",\r\n//   job: \"Director of Photography\",\r\n// department: \"Editing\",\r\n//   job: \"Editor\",\r\n// department: \"Art\",\r\n//   job: \"Production Design\",\r\n//   job: \"Art Direction\",\r\n// department: \"Costume & Make-Up\",\r\n//   job: \"Costume Design\",\r\n//   job: \"Makeup Artist\",\r\n// department: \"Crew\", // count\r\n// department: \"Lighting\", // count\r\n// department: \"Visual Effects\", // count\r\n// // total count of crew at the end\r\n\r\nexport const CREW_TO_DISPLAY = [\r\n  {\r\n    identifier: 'director',\r\n    label: () => 'Film Direction',\r\n  },\r\n  {\r\n    identifier: 'writer',\r\n    label: (a) => `Screenwriter${a > 1 ? 's' : ''}`,\r\n  },\r\n  {\r\n    identifier: 'production',\r\n    label: () => 'Key Production',\r\n  },\r\n  {\r\n    identifier: 'composer',\r\n    label: () => 'Music',\r\n  },\r\n  {\r\n    identifier: 'cinematography',\r\n    label: () => 'Cinematography',\r\n  },\r\n  {\r\n    identifier: 'editor',\r\n    label: (a) => `Film Editor${a > 1 ? 's' : ''}`,\r\n  },\r\n  {\r\n    identifier: 'costume',\r\n    label: () => 'Art',\r\n  },\r\n  {\r\n    identifier: 'makeup',\r\n    label: () => 'Hair and Make-up',\r\n  },\r\n  {\r\n    identifier: 'lighting',\r\n    label: () => 'Lighting',\r\n  },\r\n  {\r\n    identifier: 'visualEffects',\r\n    label: () => 'Visual Effects',\r\n  },\r\n];\r\n\r\nexport const MOVIE_BREADCRUMBS_CONFIG = [\r\n  {\r\n    label: 'Trailer',\r\n    link: '#movie-trailer',\r\n    visibilityId: 'trailer',\r\n  },\r\n  {\r\n    label: 'Cast',\r\n    link: '#movie-cast',\r\n    visibilityId: 'cast',\r\n  },\r\n  {\r\n    label: 'Crew',\r\n    link: '#movie-crew',\r\n    visibilityId: 'crew',\r\n  },\r\n  {\r\n    label: 'Production',\r\n    link: '#movie-production',\r\n    visibilityId: 'production',\r\n  },\r\n  {\r\n    label: 'Collection',\r\n    link: '#movie-collection',\r\n    visibilityId: 'collection',\r\n  },\r\n  {\r\n    label: 'Recommendations',\r\n    link: '#movie-recommendations',\r\n    visibilityId: 'recommendations',\r\n  },\r\n];\r\n","import React from 'react';\n\nimport { IconButton } from '@material-ui/core';\nimport {\n  CloudOffTwoTone,\n  ErrorTwoTone,\n  LiveTvTwoTone,\n  MovieTwoTone,\n  NaturePeopleTwoTone,\n  PlayCircleFilledTwoTone,\n  VpnKeyTwoTone,\n} from '@material-ui/icons';\n\nexport const NOTE_NO_API_KEY = {\n  icon: (className) => <VpnKeyTwoTone className={className} />,\n  id: 'note-no-api-key',\n  header: 'Set your TMDb API key.',\n  content: [\n    'It seems you have not yet set a TMDb API key.',\n    'Set it now on the sidebar to fetch contents from The Movie Database.',\n  ],\n};\n\nexport const NOTE_NO_SELECTED_MOVIE = {\n  icon: (className) => <MovieTwoTone className={className} />,\n  id: 'note-no-selected-movie',\n  header: 'No movie selected yet.',\n  content: [\n    'To view a movie detail, select one from the left panel.',\n  ],\n};\n\nexport const NOTE_NO_SELECTED_TV_SHOW = {\n  icon: (className) => <LiveTvTwoTone className={className} />,\n  id: 'note-no-selected-tv-show',\n  header: 'No TV Show selected yet.',\n  content: [\n    'To view a TV Show detail, select one from the left panel.',\n  ],\n};\n\nexport const NOTE_OFFLINE = {\n  icon: (className) => <CloudOffTwoTone className={className} />,\n  id: 'note-offline',\n  header: 'You are offline.',\n  content: [\n    'Check your device\\'s internet connection.',\n    'Contents will load once you go online.',\n  ],\n};\n\nconst areYouLost = new Audio('https://static.wikia.nocookie.net/dota2_gamepedia/images/f/f6/Vo_treant_treant_attack_07.mp3');\nconst beCareful = new Audio('https://static.wikia.nocookie.net/dota2_gamepedia/images/c/c8/Vo_treant_treant_attack_06.mp3');\n\nexport const NOTE_PAGE_NOT_FOUND = {\n  icon: (className) => <NaturePeopleTwoTone className={className} />,\n  id: 'note-page-not-found',\n  header: (\n    <span>\n      Rooftrellen awakens.\n    </span>\n  ),\n  content: [\n    (\n      <span>\n        <IconButton aria-label=\"playAreYouLost\" size=\"small\" onClick={() => areYouLost.play()}>\n          <PlayCircleFilledTwoTone fontSize=\"inherit\" />\n        </IconButton>\n        said the guised protector, as it emerges from invisibility.\n      </span>\n    ),\n    (\n      <span>\n        <IconButton aria-label=\"playBeCareful\" size=\"small\" onClick={() => beCareful.play()}>\n          <PlayCircleFilledTwoTone fontSize=\"inherit\" />\n        </IconButton>\n        Indeed.\n      </span>\n    ),\n  ],\n};\n\nexport const NOTE_MOVIE_NOT_FOUND = {\n  icon: (className) => <ErrorTwoTone className={className} />,\n  id: 'note-movie-not-found',\n  header: 'Movie does not exist.',\n  content: [\n    'The movie is not found on the TMDb Database.',\n    'Or, maybe the community is still working on it.',\n    'Try again a bit later.',\n  ],\n};\n\nexport const NOTE_TV_SHOW_NOT_FOUND = {\n  icon: (className) => <ErrorTwoTone className={className} />,\n  id: 'note-tv-show-not-found',\n  header: 'TV Show does not exist.',\n  content: [\n    'The TV show is not found on the TMDb Database.',\n    'Try searching for it on the search tab.',\n  ],\n};\n","export const TV_SHOW_DRAWER_CATEGORY_CHIPS = [\r\n  {\r\n    label: 'Trending',\r\n    identifier: 'trending',\r\n    isActive: (e) => e === 'trending',\r\n    description: 'Trending TV shows on TMDb. Changes everyday.',\r\n  },\r\n  {\r\n    label: 'Popular',\r\n    identifier: 'popular',\r\n    isActive: (e) => e === 'popular',\r\n    description: 'Everyone\\'s watching these shows, so should you, you peer-pressured binge-watcher.',\r\n  },\r\n  {\r\n    label: 'On The Air',\r\n    identifier: 'onTheAir',\r\n    isActive: (e) => e === 'onTheAir',\r\n    description: 'TV shows that are currently on the air.',\r\n  },\r\n  {\r\n    label: 'Airing Today',\r\n    identifier: 'airingToday',\r\n    isActive: (e) => e === 'airingToday',\r\n    description: 'Broadcasting starts today.',\r\n  },\r\n  {\r\n    label: 'Top Rated',\r\n    identifier: 'topRated',\r\n    isActive: (e) => e === 'topRated',\r\n    description: 'Shows with high ratings on TMDb.',\r\n  },\r\n];\r\n\r\nexport const TV_SHOW_BREADCRUMBS_CONFIG = [\r\n  {\r\n    label: 'Seasons',\r\n    link: '#tvshow-seasons',\r\n    visibilityId: 'seasons',\r\n  },\r\n  {\r\n    label: 'Episodes',\r\n    link: '#tvshow-episodes',\r\n    visibilityId: 'episodes',\r\n  },\r\n  {\r\n    label: 'Cast',\r\n    link: '#tvshow-cast',\r\n    visibilityId: 'cast',\r\n  },\r\n  {\r\n    label: 'Production',\r\n    link: '#tvshow-production',\r\n    visibilityId: 'production',\r\n  },\r\n  {\r\n    label: 'Recommendations',\r\n    link: '#tvshow-recommendations',\r\n    visibilityId: 'recommendations',\r\n  },\r\n];\r\n","export const IMDB_LOGO = 'https://ia.media-imdb.com/images/M/MV5BMTU0MTE4Njg3Nl5BMl5BcG5nXkFtZTgwODY0NjQ2OTE@._V1_.png';\n\nexport const IMDB_LOGO_DARK = 'https://ia.media-imdb.com/images/M/MV5BMzg4MzM5MTQ0Nl5BMl5BcG5nXkFtZTgwNTc2MzQ2OTE@._V1_.png';\n\nexport const TMDB_LOGO = 'https://www.themoviedb.org/assets/2/v4/logos/208x226-stacked-blue-e6df1ff1a41c48555a15336ae8a6b3c6f77dfae41d2a50b78e4794c1ce048792.png';\n\nexport const TMDB_LOGO_DARK = 'https://www.themoviedb.org/assets/2/v4/logos/208x226-stacked-green-9484383bd9853615c113f020def5cbe27f6d08a84ff834f41371f223ebad4a3c.png';\n","export const FIGMA_LINK = 'https://www.figma.com/file/Yz9sG6acB7rJUrjuqUCEky';\r\n\r\nexport const GITHUB_REPO_LINK = 'https://github.com/jjdcabasolo/another-moviedb-rip-off';\r\n\r\nexport const TMDB_SIGN_UP = 'https://www.themoviedb.org/signup';\r\n","// ~Item~ refers to both Movie and TVShow components\n\n/*\n  Used in <TruncatedOverview /> to limit the maximum\n  number of words the overview will contain before\n  collapsing the overview into a 'read more' state.\n  - ~Item~Header\n  - TVShowSeasonDetails\n*/\nexport const OVERVIEW_MAX_WORDS = 32;\n\n/*\n  Used in <~Item~Cast /> to limit the number of casts\n  to show on <ItemHorizontalContainer /> in its\n  collapsed state.\n  - ~Item~Cast\n*/\nexport const MAX_CAST_HORIZONTAL_ITEMS = 8;\n\n/*\n  Used in <ItemCardHorizontalList /> to limit the\n  <TruncatedOverview />'s maximum number of words\n  the overview will contain before collapsing the\n  overview into a 'read more' state.\n  - MovieCollection\n  - ~Item~Recommendation\n*/\nexport const MAX_WORD_COUNT = 20;\n\n/*\n  Used in <ItemCardHorizontalList /> to limit the\n  <ItemSeeMore />'s maximum number of item cards\n  to show before collapsing the overview into a\n  - MovieCollection\n  - ~Item~Recommendation\n*/\nexport const MAX_ITEMS_BEFORE_COLLAPSING = 3;\n\n/*\n  Used in <ItemLazyLoad /> to limit the number of items\n  to load before truncating it. This will indicate the\n  number of items to show per 'page' on the lazy load\n  component.\n*/\nexport const MAX_ITEM_PER_LOAD = 10;\n\n/*\n  Used in utils/text.js for truncating words. Indicated\n  the number of remaining words/allowance before fully\n  truncating the text.\n*/\nexport const TRUNCATION_ALLOWANCE = 3;\n\n/*\n  Used on <MovieCrew /> to limit the number of crew to\n  display when it is truncated. Shows the rest in an\n  ellipsis together with the remaining count.\n*/\nexport const MAX_CREW_ON_SHOW_LESS = 2;\n\nexport const NO_DATE_TEXT = 'No release date.';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport clsx from 'clsx';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Avatar } from '@material-ui/core';\nimport {\n  BrokenImageTwoTone as BrokenImageIcon,\n  PersonTwoTone,\n} from '@material-ui/icons';\n\nconst useStyles = makeStyles((theme) => ({\n  brokenImage: {\n    color: theme.palette.action.disabled,\n  },\n  brokenImageContainer: {\n    backgroundColor: theme.palette.brokenImage.background,\n    border: `1px solid ${theme.palette.brokenImage.border}`,\n  },\n  brokenImageBG: {\n    backgroundColor: theme.palette.brokenImage.background,\n  },\n}));\n\nconst BrokenImage = ({\n  avatarSize = 'large',\n  extraClass,\n  type,\n}) => {\n  const classes = useStyles();\n\n  switch (type) {\n    case 'baseImage':\n      return (\n        <div className={clsx(extraClass, classes.brokenImageContainer)}>\n          <BrokenImageIcon fontSize={avatarSize} className={classes.brokenImage} />\n        </div>\n      );\n    case 'cardMedia':\n      return (\n        <div className={clsx(extraClass, classes.brokenImageBG)}>\n          <BrokenImageIcon fontSize={avatarSize} className={classes.brokenImage} />\n        </div>\n      );\n    case 'avatar':\n      return (\n        <Avatar className={clsx(extraClass, classes.brokenImageContainer)}>\n          <PersonTwoTone fontSize={avatarSize} className={classes.brokenImage} />\n        </Avatar>\n      );\n    default:\n      return <BrokenImageIcon fontSize={avatarSize} className={classes.brokenImage} />;\n  }\n};\n\nBrokenImage.defaultProps = {\n  avatarSize: 'large',\n  extraClass: '',\n};\n\nBrokenImage.propTypes = {\n  avatarSize: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  extraClass: PropTypes.string,\n};\n\nexport default BrokenImage;\n","import React, {\n  cloneElement,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport PropTypes from 'prop-types';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CircularProgress, Grid } from '@material-ui/core';\nimport { FormatListNumbered } from '@material-ui/icons';\n\nimport { MAX_ITEM_PER_LOAD } from '../../../constants';\n\nconst useStyles = makeStyles((theme) => ({\n  progressContainer: {\n    padding: theme.spacing(2, 0, 6, 0),\n  },\n}));\n\nconst ItemLazyLoad = ({\n  contents,\n  hideLoader = false,\n  maxItemPerLoad = MAX_ITEM_PER_LOAD,\n  node,\n  otherProps,\n  type,\n}) => {\n  const classes = useStyles();\n\n  const [page, setPage] = useState(1);\n\n  const loaderRef = useRef();\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(([entry]) => {\n      if (entry.isIntersecting) {\n        setPage((previousPage) => previousPage + 1);\n      }\n    }, {\n      root: null,\n      rootMargin: '0px',\n      threshold: 0.1,\n    });\n\n    if (loaderRef.current) observer.observe(loaderRef.current);\n\n    return () => observer.disconnect();\n  }, [loaderRef]);\n\n  const getProps = (content, index) => {\n    switch (type) {\n      case 'tvShowEpisode':\n        return {\n          ...otherProps,\n          key: `item-lazy-load-episode-${content.id}`,\n          episode: content,\n          isLastItem: index + 1 !== contents.length,\n        };\n      case 'itemCardHorizontalList':\n        return {\n          ...otherProps,\n          key: `item-lazy-load-item-card-horizontal-list-${content.id}`,\n          content,\n          rank: index + 1,\n        };\n      case 'itemCast':\n        return {\n          ...otherProps,\n          key: `item-lazy-load-item-cast-${content.id}`,\n          character: content.character,\n          image: content.profile_path,\n          name: content.name,\n        };\n      case 'itemCardSearchResults':\n        return {\n          ...otherProps,\n          key: `item-search-results-item-card-${index + 1}-${content.id}`,\n          content,\n          rank: index + 1,\n        };\n      default:\n        return {};\n    }\n  };\n\n  return (\n    <>\n      {contents\n        .slice(0, maxItemPerLoad * page)\n        .map((content, index) => cloneElement(node, getProps(content, index)))}\n      {!hideLoader && (contents.length >= maxItemPerLoad * page) && (\n        <Grid container justify=\"center\" className={classes.progressContainer}>\n          <CircularProgress ref={loaderRef} />\n        </Grid>\n      )}\n    </>\n  );\n};\n\nItemLazyLoad.defaultProps = {\n  hideLoader: false,\n  maxItemPerLoad: MAX_ITEM_PER_LOAD,\n  otherProps: {\n    isCollapsed: FormatListNumbered,\n  },\n};\n\nItemLazyLoad.propTypes = {\n  contents: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  hideLoader: PropTypes.bool,\n  maxItemPerLoad: PropTypes.number,\n  node: PropTypes.node.isRequired,\n  otherProps: PropTypes.shape({\n    isCollapsed: PropTypes.bool,\n  }),\n  type: PropTypes.string.isRequired,\n};\n\nexport default ItemLazyLoad;\n","export const getCrewMembers = (crew, department, job = ['']) => {\n  const crewMembers = new Array(job.length).fill([]);\n\n  const evaluateJob = (crew, element) => job[0].length > 0 ? crew.toLowerCase() === element.toLowerCase() : true;\n\n  job.forEach((element, index) => {\n    crewMembers[index] = crew.filter(crew => crew.department.toLowerCase() === department.toLowerCase() && evaluateJob(crew.job, element));\n\n    crewMembers[index] = crewMembers[index].reduce((accumulator, current) => {\n      const index = accumulator.map(a => a.id).findIndex(e => e === current.id);\n      const isExisting = index !== -1;\n      if (isExisting) {\n        accumulator[index].job = `${accumulator[index].job}, ${current.job}`;\n        return accumulator;\n      }\n      return accumulator.concat([current]);\n    }, []);\n  });\n\n  return crewMembers;\n};\n","/* eslint-disable prefer-destructuring */\r\n// number of words for allowance before truncating the text;\r\nimport { TRUNCATION_ALLOWANCE } from '../../constants';\r\n\r\nexport const truncateText = (text, length, type) => {\r\n  switch (type) {\r\n    case 'characters':\r\n      if (text.length > length) return `${text.substring(0, length)}...`;\r\n      return text;\r\n\r\n    case 'words': {\r\n      const fragmentedWords = text.split(' ');\r\n      if (fragmentedWords.length <= (length + TRUNCATION_ALLOWANCE)) {\r\n        return [text, false];\r\n      }\r\n      return [fragmentedWords.splice(0, length).join(' '), true];\r\n    }\r\n\r\n    default:\r\n      return text;\r\n  }\r\n};\r\n\r\n// money format for millions and billions\r\n// taken from https://stackoverflow.com/q/36734201\r\nexport const toMillionsOrBillions = (num) => {\r\n  const absoluteNumber = Math.abs(Number(num));\r\n  if (absoluteNumber >= 1.0e+9) {\r\n    return `${(absoluteNumber / 1.0e+9).toFixed(2)}B`;\r\n  }\r\n  if (absoluteNumber >= 1.0e+6) {\r\n    return `${Math.floor(absoluteNumber / 1.0e+6)}M`;\r\n  }\r\n  if (absoluteNumber >= 1.0e+3) {\r\n    return `${Math.floor(absoluteNumber / 1.0e+3)}K`;\r\n  }\r\n  return `${absoluteNumber}`;\r\n};\r\n\r\n// convert camel case to sentence case\r\n// taken from: https://stackoverflow.com/a/7225450\r\nexport const toCamelCase = (text) => {\r\n  const result = text.replace(/([A-Z])/g, ' $1');\r\n\r\n  return result.charAt(0).toUpperCase() + result.slice(1);\r\n};\r\n\r\nexport const enumerate = (array) => array.length === 2\r\n  ? array.join(' and ')\r\n  : array.join(', ').replace(/, ([^,]*)$/, ', and $1');\r\n","export const getCastCol = (isMobile, isSmallTablet) => {\n  if (isMobile) return 2;\n  if (isSmallTablet) return 3;\n  return 4;\n};\n\nexport const getCrewCol = (isMobile, isSmallTablet) => {\n  if (isMobile) return 1;\n  if (isSmallTablet) return 2;\n  return 3;\n};\n","export const scrollToID = (id, isSmooth = true) => {\r\n  const anchor = document.getElementById(id);\r\n\r\n  if (anchor) {\r\n    setTimeout(() => {\r\n      anchor.scrollIntoView({ behavior: isSmooth ? 'smooth' : 'auto' });\r\n    }, 50);\r\n  }\r\n};\r\n\r\nexport default scrollToID;\r\n","// code taken from: https://gist.github.com/nmsdvid/8807205\nexport const debounceEvent = (callback, time) => {\n  let interval;\n  return (...args) => {\n    clearTimeout(interval);\n    interval = setTimeout(() => {\n      interval = null;\n      callback(...args);\n    }, time);\n  };\n};\n\nexport default debounceEvent;\n","export const getTVShowStatus = (status) => {\r\n  switch (status) {\r\n    case 'Ended':\r\n      return 'Finished';\r\n    case 'Returning Series':\r\n      return 'Ongoing';\r\n    default:\r\n      return status;\r\n  }\r\n};\r\n\r\nexport const selectSeason = (seasons, seasonNumber) => {\r\n  const filteredSeason = seasons.filter((season) => season.season_number === seasonNumber);\r\n\r\n  if (filteredSeason.length > 0) return filteredSeason[0];\r\n\r\n  return {};\r\n};\r\n\r\nexport const selectEpisode = (episodes, episodeNumber) => {\r\n  const filteredEpisode = episodes.filter((episode) => episode.episode_number === episodeNumber);\r\n\r\n  if (filteredEpisode.length > 0) return filteredEpisode[0];\r\n\r\n  return {};\r\n};\r\n","import { useTheme } from '@material-ui/core/styles';\r\nimport { useMediaQuery } from '@material-ui/core';\r\n\r\nconst ResponsiveComponent = ({\r\n  desktopComponent = null,\r\n  mobileComponent = null,\r\n  tabletComponent = null,\r\n}) => {\r\n  // https://material-ui.com/customization/breakpoints/\r\n  // value         |0px     600px    960px    1280px   1920px\r\n  // key           |xs      sm       md       lg       xl\r\n  // screen width  |--------|--------|--------|--------|-------->\r\n  // range         |   xs   |   sm   |   md   |   lg   |   xl\r\n  // responsiveComp|-mobile-|-----tablet------|-----desktop-----\r\n\r\n  const theme = useTheme();\r\n  const isDesktop = useMediaQuery(theme.breakpoints.up('lg'));\r\n  const isTablet = useMediaQuery(theme.breakpoints.between('sm', 'md'));\r\n\r\n  if (/Android|webOS|iPhone|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\r\n    return mobileComponent;\r\n  }\r\n\r\n  // if all components are declared/specified\r\n  if (isDesktop) return desktopComponent;\r\n  if (isTablet) return tabletComponent;\r\n  return mobileComponent;\r\n};\r\n\r\nexport default ResponsiveComponent;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Button,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  FilledInput,\r\n  FormControl,\r\n  FormHelperText,\r\n  IconButton,\r\n  InputAdornment,\r\n  InputLabel,\r\n  Link,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport {\r\n  AccountCircleTwoTone,\r\n  ErrorOutlineTwoTone,\r\n  VisibilityOffTwoTone,\r\n  VisibilityTwoTone,\r\n} from '@material-ui/icons';\r\n\r\nimport { getPopularMovies } from '../../api';\r\n\r\nimport ResponsiveComponent from '../../utils/components/ResponsiveComponent';\r\n\r\nimport { sidebarActions, snackbarActions } from '../../reducers/ducks';\r\n\r\nimport {\r\n  API_KEY_DIALOG_HAS_KEY,\r\n  API_KEY_DIALOG_MISSING_API_KEY,\r\n  API_KEY_DIALOG_MISSING_USERNAME,\r\n  API_KEY_DIALOG_NOTE,\r\n  API_KEY_DIALOG_SUBTITLE,\r\n  API_KEY_DIALOG_TITLE,\r\n  API_KEY_DIALOG_TMDB_API_LINK,\r\n  API_KEY_DIALOG_TMDB_LINK,\r\n} from '../../constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  note: {\r\n    marginTop: theme.spacing(2),\r\n    fontSize: theme.typography.subtitle2.fontSize,\r\n  },\r\n  errorNote: {\r\n    color: theme.palette.error.main,\r\n  },\r\n  filledInput: {\r\n    margin: theme.spacing(1, 0),\r\n  },\r\n  progressWrapper: {\r\n    position: 'relative',\r\n  },\r\n  buttonProgress: {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    marginTop: -12,\r\n    marginLeft: -12,\r\n  },\r\n  paper: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      margin: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nconst initState = {\r\n  isApplyingKey: false,\r\n  apiKey: {\r\n    value: '',\r\n    error: false,\r\n    showAPIKey: false,\r\n  },\r\n  username: {\r\n    value: '',\r\n    error: false,\r\n  },\r\n};\r\n\r\nexport default function APIKeyDialog() {\r\n  const classes = useStyles();\r\n\r\n  const apiKey = useSelector((state) => state.sidebar.apiKey);\r\n  const username = useSelector((state) => state.sidebar.username);\r\n  const hasApiKey = apiKey.length > 0 && username.length > 0;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [open, setOpen] = useState(!hasApiKey);\r\n  const [isApplyingKey, setIsApplyingKey] = useState(initState.isApplyingKey);\r\n  const [apiKeyState, setApiKeyState] = useState(initState.apiKey);\r\n  const [usernameState, setUsernameState] = useState(initState.username);\r\n\r\n  useEffect(() => {\r\n    setApiKeyState({ ...apiKeyState, value: apiKey });\r\n    setUsernameState({ ...usernameState, value: username });\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const handleClickOpen = () => setOpen(true);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setIsApplyingKey(initState.isApplyingKey);\r\n    setUsernameState({ ...usernameState, error: false });\r\n    setApiKeyState({ ...apiKeyState, error: false });\r\n  };\r\n\r\n  const handleAPIKeyChange = (e) => setApiKeyState({\r\n    ...apiKeyState,\r\n    value: e.target.value,\r\n  });\r\n\r\n  const handleUsernameChange = (e) => setUsernameState({\r\n    ...usernameState,\r\n    value: e.target.value,\r\n  });\r\n\r\n  const handleClickShowAPIKey = () => setApiKeyState({\r\n    ...apiKeyState,\r\n    showAPIKey: !apiKeyState.showAPIKey,\r\n  });\r\n\r\n  const handleMouseDownAPIKey = (e) => e.preventDefault();\r\n\r\n  const handleSubmit = () => {\r\n    const hasUsernameValue = usernameState.value !== '';\r\n    const hasApiKeyValue = apiKeyState.value !== '';\r\n\r\n    if (!hasUsernameValue || !hasApiKeyValue) {\r\n      if (!hasUsernameValue) setUsernameState({ ...usernameState, error: true });\r\n      if (!hasApiKeyValue) setApiKeyState({ ...apiKeyState, error: true });\r\n    } else {\r\n      setUsernameState({ ...usernameState, error: false });\r\n      setApiKeyState({ ...apiKeyState, error: false });\r\n      setIsApplyingKey(true);\r\n\r\n      getPopularMovies(apiKeyState.value, () => {\r\n        dispatch(snackbarActions.showSnackbar('TMDb API key successfully added!', 'success'));\r\n        dispatch(sidebarActions.setAPIKey(apiKeyState.value, usernameState.value));\r\n        handleClose();\r\n      }, () => {\r\n        dispatch(snackbarActions.showSnackbar('Your API key is invalid!', 'error'));\r\n      }, () => {\r\n        setIsApplyingKey(false);\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleClearForms = () => {\r\n    if (hasApiKey) {\r\n      dispatch(snackbarActions.showSnackbar('Your API key has been cleared!', 'success'));\r\n      dispatch(sidebarActions.clearAPIKey());\r\n      setTimeout(() => dispatch({ type: 'CLEAR_REDUX_STATES' }), 1500);\r\n    } else {\r\n      setUsernameState({ ...usernameState, value: '' });\r\n      setApiKeyState({ ...apiKeyState, value: '' });\r\n    }\r\n  };\r\n\r\n  const renderListItem = () => (\r\n    <ListItem button onClick={handleClickOpen}>\r\n      <ListItemIcon>\r\n        { apiKey === '' ? (<ErrorOutlineTwoTone />) : (<AccountCircleTwoTone />) }\r\n      </ListItemIcon>\r\n      <ListItemText\r\n        primary={username === '' ? 'No API key entered yet' : username}\r\n        secondary={username === '' ? 'Click here to add one.' : ''}\r\n      />\r\n    </ListItem>\r\n  );\r\n\r\n  const renderIconButton = () => (\r\n    <IconButton onClick={handleClickOpen}>\r\n      { apiKey === '' ? (<ErrorOutlineTwoTone />) : (<AccountCircleTwoTone />) }\r\n    </IconButton>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <ResponsiveComponent\r\n        mobileComponent={renderIconButton()}\r\n        tabletComponent={renderListItem()}\r\n        desktopComponent={renderListItem()}\r\n      />\r\n\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        maxWidth=\"xs\"\r\n        aria-labelledby=\"form-dialog-title\"\r\n        disableBackdropClick={isApplyingKey}\r\n        disableEscapeKeyDown={isApplyingKey}\r\n        classes={{ paper: classes.paper }}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          {API_KEY_DIALOG_TITLE}\r\n        </DialogTitle>\r\n\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {API_KEY_DIALOG_SUBTITLE}\r\n            <Link href={API_KEY_DIALOG_TMDB_API_LINK}>\r\n              Learn more\r\n            </Link>\r\n            {'.'}\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            error={usernameState.error}\r\n            value={usernameState.value}\r\n            onChange={handleUsernameChange}\r\n            margin=\"dense\"\r\n            id=\"username\"\r\n            label=\"Username\"\r\n            disabled={isApplyingKey || hasApiKey}\r\n            fullWidth\r\n            variant=\"filled\"\r\n            helperText={usernameState.error ? API_KEY_DIALOG_MISSING_USERNAME : null}\r\n            FormHelperTextProps={{\r\n              error: usernameState.error,\r\n            }}\r\n          />\r\n\r\n          <FormControl fullWidth variant=\"filled\" className={classes.filledInput}>\r\n            <InputLabel htmlFor=\"api-key\" margin=\"dense\" error={apiKeyState.error}>TMDb API key</InputLabel>\r\n            <FilledInput\r\n              id=\"api-key\"\r\n              type={apiKeyState.showAPIKey ? 'text' : 'password'}\r\n              value={apiKeyState.value}\r\n              error={apiKeyState.error}\r\n              margin=\"dense\"\r\n              disabled={isApplyingKey || hasApiKey}\r\n              onChange={handleAPIKeyChange}\r\n              endAdornment={(\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={handleClickShowAPIKey}\r\n                    onMouseDown={handleMouseDownAPIKey}\r\n                    size=\"small\"\r\n                    disabled={isApplyingKey || hasApiKey}\r\n                  >\r\n                    {apiKeyState.showAPIKey ? <VisibilityTwoTone /> : <VisibilityOffTwoTone />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              )}\r\n            />\r\n            {apiKeyState.error && <FormHelperText error={apiKeyState.error} variant=\"filled\" margin=\"dense\">{API_KEY_DIALOG_MISSING_API_KEY}</FormHelperText>}\r\n          </FormControl>\r\n\r\n          <DialogContentText className={classes.note}>\r\n            {hasApiKey\r\n              ? (\r\n                <>\r\n                  {API_KEY_DIALOG_HAS_KEY}\r\n                  <Link href={API_KEY_DIALOG_TMDB_LINK}>\r\n                    The Movie Database\r\n                  </Link>\r\n                  {'.'}\r\n                </>\r\n              )\r\n              : API_KEY_DIALOG_NOTE}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\" disabled={isApplyingKey}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleClearForms} color=\"primary\" disabled={isApplyingKey}>\r\n            Clear\r\n          </Button>\r\n          { !hasApiKey && (\r\n            <div className={classes.progressWrapper}>\r\n              <Button\r\n                onClick={handleSubmit}\r\n                color=\"primary\"\r\n                disabled={isApplyingKey}\r\n              >\r\n                Submit\r\n              </Button>\r\n              { (isApplyingKey)\r\n                && <CircularProgress size={24} thickness={7} className={classes.buttonProgress} /> }\r\n            </div>\r\n          )}\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { MOVIE_DRAWER_TMDB_IMAGE_PREFIX } from '../../constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  image: {\r\n    maskImage: `linear-gradient(\r\n      rgba(0,0,0,1) 0%,\r\n      rgba(255,255,255,0.5) 70%,\r\n      rgba(255,255,255,0.4) 80%,\r\n      rgba(255,255,255,0.3) 85%,\r\n      rgba(255,255,255,0.2) 90%,\r\n      rgba(255,255,255,0.1) 95%,\r\n      rgba(255,255,255,0) 100%\r\n    )`,\r\n    objectFit: 'cover',\r\n    objectPosition: '50% 0%',\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginTop: theme.spacing(6),\r\n      height: '70vh',\r\n      width: '100%',\r\n    },\r\n    [theme.breakpoints.between('sm', 'md')]: {\r\n      marginTop: theme.spacing(6),\r\n      height: '35vh',\r\n      width: theme.browserSize.width - theme.spacing(7),\r\n    },\r\n    [`${theme.breakpoints.only('sm')} and (orientation: landscape)`]: {\r\n      width: theme.browserSize.width,\r\n    },\r\n    [`${theme.breakpoints.only('md')} and (orientation: landscape)`]: {\r\n      marginTop: theme.spacing(6),\r\n      height: '50vh',\r\n      width: '100%',\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      height: '50vh',\r\n      width: '100%',\r\n    },\r\n  },\r\n  noImagePadding: {\r\n    marginTop: theme.spacing(15),\r\n  },\r\n}));\r\n\r\nconst GradientBackground = ({\r\n  image,\r\n  isItemSelected,\r\n  isLoading,\r\n  isVisible,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const src = `${MOVIE_DRAWER_TMDB_IMAGE_PREFIX}/w1280${image}`;\r\n\r\n  if (isLoading) return null;\r\n  if (!image && isItemSelected) return <div className={classes.noImagePadding} />;\r\n  if (isVisible) return <img src={src} alt={src} className={classes.image} />;\r\n  return null;\r\n};\r\n\r\nGradientBackground.defaultProps = {\r\n  image: '',\r\n};\r\n\r\nGradientBackground.propTypes = {\r\n  image: PropTypes.string,\r\n  isItemSelected: PropTypes.bool.isRequired,\r\n  isLoading: PropTypes.bool.isRequired,\r\n  isVisible: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default GradientBackground;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useSelector } from 'react-redux';\nimport { Helmet as ReactHelmet } from 'react-helmet';\n\nconst Helmet = ({ isDefault }) => {\n  const activeTab = useSelector((state) => state.sidebar.activeTab);\n\n  if (activeTab === 'movies' && !isDefault) {\n    return (\n      <ReactHelmet>\n        <title>Movies</title>\n        <meta name=\"description\" content=\"Another The Movie Database Rip-off's (ATMDbRo) list of movies that offers 5 types of categories - Now Playing, Upcoming, Popular, Top Rated, and Highest Grossing.\" />\n        <meta name=\"keywords\" content=\"ATMDbRo,atmdbro,Another The Movie Database Rip-off,another the movie database rip-off,ATMDbRo Movies,atmdbro movies\" />\n        <link rel=\"canonical\" href=\"https://jjdcabasolo.github.io/another-moviedb-rip-off/#/movies\" />\n      </ReactHelmet>\n    );\n  } if (activeTab === 'tvshows' && !isDefault) {\n    return (\n      <ReactHelmet>\n        <title>TV Shows</title>\n        <meta name=\"description\" content=\"Another The Movie Database Rip-off's (ATMDbRo) list of tv shows that offers 4 types of categories - Airing Today, On The Air, Popular, and Top Rated.\" />\n        <meta name=\"keywords\" content=\"ATMDbRo,atmdbro,Another The Movie Database Rip-off,another the movie database rip-off,ATMDbRo TV Shows,atmdbro tv shows\" />\n        <link rel=\"canonical\" href=\"https://jjdcabasolo.github.io/another-moviedb-rip-off/#/tvshows\" />\n      </ReactHelmet>\n    );\n  }\n  return (\n    <ReactHelmet titleTemplate=\"%s - Another TMDb Rip-off (ATMDbRo)\" defaultTitle=\"Another TMDb Rip-off (ATMDbRo)\">\n      <meta name=\"description\" content=\"Another The Movie Database Rip-off (ATMDbRo) lists movies and TV shows of different categories - all coming from TMDb. It is TMDb, but it is a rip-off.\" />\n      <meta name=\"keywords\" content=\"ATMDbRo,atmdbro,Another The Movie Database Rip-off,another the movie database rip-off\" />\n      <link rel=\"canonical\" href=\"https://jjdcabasolo.github.io/another-moviedb-rip-off/\" />\n    </ReactHelmet>\n  );\n};\n\nHelmet.defaultProps = {\n  isDefault: false,\n};\n\nHelmet.propTypes = {\n  isDefault: PropTypes.bool,\n};\n\nexport default Helmet;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport clsx from 'clsx';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport {\n  Chip,\n  IconButton,\n  Popover,\n  Tooltip,\n  Typography,\n  useMediaQuery,\n} from '@material-ui/core';\nimport { ArrowDropDown, SearchTwoTone } from '@material-ui/icons';\n\nimport { scrollToID } from '../../../utils/functions';\n\nimport { moviesActions, tvShowsActions } from '../../../reducers/ducks';\n\nimport {\n  MOVIE_DRAWER_CATEGORY_CHIPS,\n  TV_SHOW_DRAWER_CATEGORY_CHIPS,\n} from '../../../constants';\n\nconst useStyles = makeStyles((theme) => ({\n  chip: {\n    margin: theme.spacing(0.5),\n    '&:first-child': {\n      marginLeft: theme.spacing(1),\n    },\n    '&:last-child': {\n      marginRight: theme.spacing(1),\n    },\n  },\n  popover: {\n    padding: theme.spacing(2),\n    maxWidth: theme.spacing(25),\n  },\n  topCategories: {\n    display: 'flex',\n    margin: theme.spacing(1, 0),\n    overflowX: 'auto',\n    'scrollbar-width': 'none',\n    '&::-webkit-scrollbar': {\n      display: 'none',\n    },\n  },\n  category: {\n    fontWeight: theme.typography.h6.fontWeight,\n  },\n  lastEntry: {\n    padding: theme.spacing(0.25),\n  },\n  chipDropdown: {\n    margin: theme.spacing(1),\n  },\n  chipLabel: {\n    paddingLeft: 0,\n    paddingRight: 9,\n  },\n}));\n\nconst ItemCategory = ({\n  iconSize = 'default',\n  type,\n}) => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.only('xs'));\n  const classes = useStyles();\n\n  const activeTab = useSelector((state) => state.sidebar.activeTab);\n  const movieCategory = useSelector((state) => state.movies.category);\n  const tvShowCategory = useSelector((state) => state.tvShows.category);\n  const dispatch = useDispatch();\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  \n  const history = useHistory();\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n  const isMovie = activeTab === 'movies';\n  const isTVShow = activeTab === 'tvshows';\n  const categoryChips = isMovie\n    ? MOVIE_DRAWER_CATEGORY_CHIPS\n    : TV_SHOW_DRAWER_CATEGORY_CHIPS;\n  const category = isMovie ? movieCategory : tvShowCategory;\n\n  const handleDropdownClick = (event) => {\n    setAnchorEl(event.currentTarget || event.current);\n  };\n\n  const handleSearchClick = () => {\n    history.push(`/${activeTab}/search`);\n  };\n\n  const handleClose = () => setAnchorEl(null);\n\n  const handleChipClick = (itemCategory) => {\n    if (isMobile) scrollToID('scroll-to-top-anchor', false);\n    if (isMovie) dispatch(moviesActions.setCategory(itemCategory));\n    if (isTVShow) dispatch(tvShowsActions.setCategory(itemCategory));\n  };\n\n  const renderCategoryChips = () => (\n    categoryChips.map((e) => (\n      <Chip\n        className={classes.chip}\n        color={e.isActive(category) ? 'primary' : 'default'}\n        key={`item-category-chip-${e.label}`}\n        label={e.label}\n        onClick={() => handleChipClick(e.identifier)}\n        variant={e.isActive(category) ? 'default' : 'outlined'}\n      />\n    ))\n  );\n\n  const renderPopover = () => (\n    <Popover\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'center', horizontal: 'left' }}\n      classes={{ paper: classes.popover }}\n      id={id}\n      onClose={handleClose}\n      open={open}\n      transformOrigin={{ vertical: 'center', horizontal: 'left' }}\n    >\n      <Typography\n        className={classes.category}\n        gutterBottom\n        variant=\"body1\"\n      >\n        Set category:\n      </Typography>\n      {renderCategoryChips()}\n    </Popover>\n  );\n\n  switch (type) {\n    case 'iconButton':\n      return (\n        <>\n          <Tooltip title=\"Set category\">\n            <IconButton aria-label=\"setCategory\" onClick={handleDropdownClick}>\n              <ArrowDropDown fontSize={iconSize} />\n            </IconButton>\n          </Tooltip>\n          {renderPopover()}\n        </>\n      );\n    case 'appbarHorizontalList':\n      return (\n        <div className={clsx(classes.topCategories)}>\n          <Chip\n            className={classes.chip}\n            classes={{ label: classes.chipLabel }}\n            color=\"default\"\n            icon={<SearchTwoTone />}\n            key=\"item-category-chip-search\"\n            onClick={handleSearchClick}\n            variant=\"outlined\"\n          />\n          {renderCategoryChips()}\n          <div className={classes.lastEntry} />\n        </div>\n      );\n    default:\n      return renderCategoryChips();\n  }\n};\n\nItemCategory.defaultProps = {\n  iconSize: 'default',\n};\n\nItemCategory.propTypes = {\n  iconSize: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default ItemCategory;\n","import React from 'react';\n\nimport moment from 'moment';\nimport { useSelector } from 'react-redux';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport {\n  Typography,\n  useMediaQuery,\n} from '@material-ui/core';\n\nimport ItemCategory from './ItemCategory';\n\nimport { toCamelCase } from '../../../utils/functions';\n\nimport {\n  MOVIE_DRAWER_CATEGORY_CHIPS,\n  TV_SHOW_DRAWER_CATEGORY_CHIPS,\n} from '../../../constants';\n\nconst useStyles = makeStyles((theme) => ({\n  titleLite: {\n    fontWeight: 100,\n    textAlign: 'center',\n  },\n  title: {\n    fontWeight: 500,\n    textAlign: 'center',\n  },\n  description: {\n    textAlign: 'center',\n    maxWidth: '75vw',\n  },\n  subtitle: {\n    color: theme.palette.action.disabled,\n  },\n  categoryContainer: {\n    marginLeft: theme.spacing(2),\n    position: 'absolute',\n  },\n}));\n\nconst ItemHeader = () => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.only('xs'));\n  const classes = useStyles();\n\n  const activeTab = useSelector((state) => state.sidebar.activeTab);\n  const movieCategory = useSelector((state) => state.movies.category);\n  const tvShowCategory = useSelector((state) => state.tvShows.category);\n\n  const isMovie = activeTab === 'movies';\n  const activeCategory = isMovie ? movieCategory : tvShowCategory;\n  const categoryChips = isMovie\n    ? MOVIE_DRAWER_CATEGORY_CHIPS\n    : TV_SHOW_DRAWER_CATEGORY_CHIPS;\n  const [{ description }] = categoryChips.filter(e => e.identifier === activeCategory);\n\n  return (\n    <>\n      <Typography variant={isMobile ? 'h3' : 'h2'} className={classes.titleLite}>\n        {'Top 10 '}\n      </Typography>\n      <Typography variant={isMobile ? 'h2' : 'h1'} className={classes.title}>\n        {toCamelCase(activeCategory)}\n        {!isMobile && (\n          <span className={classes.categoryContainer}>\n            <ItemCategory type=\"iconButton\" iconSize=\"large\" />\n          </span>\n        )}\n      </Typography>\n      <Typography variant={isMobile ? 'h3' : 'h2'} gutterBottom className={classes.titleLite}>\n        {activeTab === 'movies' ? ' Movies' : ' TV Shows'}\n      </Typography>\n      <Typography variant=\"caption\" gutterBottom className={classes.description} color=\"textSecondary\">\n        {description}\n      </Typography>\n      <Typography variant=\"caption\" className={classes.subtitle}>\n        {`as of today, ${moment().format('MMMM D, YYYY (dddd)')}`}\n      </Typography>\n    </>\n  );\n};\n\nexport default ItemHeader;\n","import React from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport ComponentLoader from '../ComponentLoader';\r\nimport ItemCard from './ItemCard';\r\nimport ItemHeader from './ItemHeader';\r\nimport Note from '../Note';\r\n\r\nimport {\r\n  MOVIE_DRAWER_CATEGORY_CHIPS,\r\n  NOTE_NO_API_KEY,\r\n  NOTE_OFFLINE,\r\n  TV_SHOW_DRAWER_CATEGORY_CHIPS,\r\n} from '../../../constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  itemListContainer: {\r\n    padding: theme.spacing(0, 2),\r\n  },\r\n  note: {\r\n    padding: theme.spacing(8, 2),\r\n  },\r\n  titleContainer: {\r\n    padding: theme.spacing(15, 0),\r\n  },\r\n}));\r\n\r\nconst ItemList = () => {\r\n  const classes = useStyles();\r\n\r\n  const activeTab = useSelector((state) => state.sidebar.activeTab);\r\n  const movieCategory = useSelector((state) => state.movies.category);\r\n  const movieList = useSelector((state) => state.movies.list);\r\n  const movieLoadedContent = useSelector((state) => state.movies.loadedContent);\r\n  const tvShowCategory = useSelector((state) => state.tvShows.category);\r\n  const tvShowList = useSelector((state) => state.tvShows.list);\r\n  const tvShowLoadedContent = useSelector((state) => state.tvShows.loadedContent);\r\n\r\n  const isMovie = activeTab === 'movies';\r\n  const contentList = isMovie ? movieList : tvShowList;\r\n  const categoryChips = isMovie ? MOVIE_DRAWER_CATEGORY_CHIPS : TV_SHOW_DRAWER_CATEGORY_CHIPS;\r\n  const loadedContent = isMovie ? movieLoadedContent : tvShowLoadedContent;\r\n  const activeCategory = isMovie ? movieCategory : tvShowCategory;\r\n\r\n  if (!window.navigator.onLine) {\r\n    return (\r\n      <div className={classes.note}>\r\n        <Note details={NOTE_OFFLINE} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (localStorage.getItem('apiKey') === null) {\r\n    return (\r\n      <div className={classes.note}>\r\n        <Note details={NOTE_NO_API_KEY} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (loadedContent !== categoryChips.length) {\r\n    return (\r\n      <ComponentLoader />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Grid container justify=\"center\" className={classes.itemListContainer}>\r\n      <Grid\r\n        alignItems=\"center\"\r\n        className={classes.titleContainer}\r\n        container\r\n        direction=\"column\"\r\n        item\r\n        justify=\"center\"\r\n        xs={12}\r\n      >\r\n        <ItemHeader />\r\n      </Grid>\r\n      <Grid container item xs={12}>\r\n        {contentList[activeCategory].slice(0, 10).map((content, rank) => (\r\n          <Grid\r\n            className={classes.itemListCard}\r\n            item\r\n            key={`item-list-grid-item-card-${content.id}`}\r\n            xs={12}\r\n          >\r\n            <ItemCard\r\n              col={12}\r\n              content={content}\r\n              drawerOpen\r\n              mobile\r\n              rank={rank + 1}\r\n              type={activeTab}\r\n            />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ItemList;\r\n","import React, {\n  useCallback,\n  useEffect,\n  useState,\n  useRef,\n} from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { usePath } from '../../../hooks';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport {\n  IconButton,\n  InputBase,\n  Tooltip,\n  useMediaQuery,\n} from '@material-ui/core';\nimport {\n  CloseTwoTone,\n  SearchTwoTone,\n} from '@material-ui/icons';\n\nimport {\n  moviesActions,\n  sidebarActions,\n  snackbarActions,\n  tvShowsActions,\n} from '../../../reducers/ducks';\n\nimport { debounceEvent, decryptKey } from '../../../utils/functions';\n\nimport { searchMovie, searchTVShow } from '../../../api';\n\nconst useStyles = makeStyles((theme) => ({\n  searchIcon: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nconst ItemSearch = ({\n  isPermanentlyOpen = false,\n}) => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.only('xs'));\n  const classes = useStyles();\n\n  const isSearchOpen = useSelector((state) => state.sidebar.isSearchOpen);\n  const itemDrawerOpen = useSelector((state) => state.sidebar.itemDrawerOpen);\n  const searchQuery = useSelector((state) => state.sidebar.searchQuery);\n  const dispatch = useDispatch();\n\n  const inputBaseRef = useRef(null);\n\n  const history = useHistory();\n\n  const [query, setQuery] = useState('');\n  const [activeTab, categoryPath, searchQueryOnPath] = usePath();\n\n  const isMovie = activeTab === 'movies';\n\n  const fetchSearchResults = useCallback((q) => {\n    if (isMovie) {\n      searchMovie(decryptKey(), q, (response) => {\n        dispatch(moviesActions.setSearchResults(response));\n      }, (error) => {\n        dispatch(snackbarActions.showSnackbar(`Error on searching the movie: ${error}`, 'error'));\n      });\n    }\n    else {\n      searchTVShow(decryptKey(), q, (response) => {\n        dispatch(tvShowsActions.setSearchResults(response));\n      }, (error) => {\n        dispatch(snackbarActions.showSnackbar(`Error on searching the TV show: ${error}`, 'error'));\n      });\n    }\n  }, [isMovie, dispatch]);\n\n  // automatic search on path change\n  useEffect(() => {\n    if (categoryPath === 'search') {\n      if (searchQueryOnPath && searchQueryOnPath.length > 0) {\n        dispatch(sidebarActions.setSearchQuery(searchQueryOnPath));\n        setQuery(searchQueryOnPath);\n        fetchSearchResults(searchQueryOnPath);\n      } else {\n        dispatch(sidebarActions.setSearchQuery(''));\n        setQuery('');\n      }\n    }\n  }, [searchQueryOnPath, dispatch, categoryPath, fetchSearchResults]);\n\n  // toggles search when on right path\n  useEffect(() => {\n    dispatch(sidebarActions.setSearch(categoryPath === 'search'));\n  }, [categoryPath, dispatch]);\n\n  // automatically opens the drawer opn prop set\n  useEffect(() => {\n    if (isPermanentlyOpen) {\n      dispatch(sidebarActions.setSearch(isPermanentlyOpen));\n    }\n  }, [isPermanentlyOpen, dispatch]);\n\n  const debouncedQuery = useCallback(\n    debounceEvent((q) => {\n      handleSetSearchQuery(q);\n\n      if (q.length <= 0) return;\n\n      history.push(`/${activeTab}/search/${q}`);\n      fetchSearchResults(q);\n    }, 500), [isMovie, activeTab]);\n\n  const handleSetSearch = (isOpen) => {\n    if (isMobile) {\n      if (!isOpen) {\n        setQuery('');\n        dispatch(sidebarActions.setSearchQuery(''));\n\n        if (inputBaseRef.current) {\n          inputBaseRef.current.focus();\n        }\n        return;\n      }\n    }\n\n    if (isOpen) {\n      history.push(`/${activeTab}/search`);\n      setQuery('');\n      dispatch(sidebarActions.setSearchQuery(''));\n    }\n    else {\n      if (categoryPath && categoryPath !== 0 && categoryPath === 'search') {\n        history.goBack();\n      }\n      if (isMovie) {\n        dispatch(moviesActions.setSearchResults([]));\n      }\n      else {\n        dispatch(tvShowsActions.setSearchResults([]));\n      }\n    }\n\n    if (isSearchOpen !== isOpen) {\n      dispatch(sidebarActions.setSearch(isOpen));\n    }\n  };\n\n  const handleSetSearchQuery = (newQuery) => {\n    if (searchQuery !== newQuery) {\n      dispatch(sidebarActions.setSearchQuery(newQuery));\n    }\n  };\n\n  const handleInputChange = ({ target }) => {\n    const { value } = target;\n\n    setQuery(value);\n    debouncedQuery(value);\n  };\n\n  return isSearchOpen || isPermanentlyOpen\n    ? (\n      <InputBase\n        autoFocus\n        className={classes.input}\n        endAdornment={(\n          <Tooltip title=\"Close search\">\n            <IconButton\n              onClick={() => handleSetSearch(false)}\n              edge={isMobile || !itemDrawerOpen ? 'end' : false}\n            >\n              <CloseTwoTone />\n            </IconButton>\n          </Tooltip>\n        )}\n        fullWidth\n        inputRef={inputBaseRef}\n        onChange={handleInputChange}\n        placeholder={`Search ${isMovie ? 'Movies' : 'TV Shows'}`}\n        value={query}\n      />\n    )\n    : (\n      <Tooltip title=\"Search\">\n        <IconButton onClick={() => handleSetSearch(true)}>\n          <SearchTwoTone />\n        </IconButton>\n      </Tooltip>\n    );\n};\n\nItemSearch.defaultProps = {\n  isPermanentlyOpen: false,\n};\n\nItemSearch.propTypes = {\n  isPermanentlyOpen: PropTypes.bool,\n};\n\nexport default ItemSearch;\n","import React, { useState, useEffect } from 'react';\n\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { usePath } from '../../../hooks';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport {\n  Container,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  IconButton,\n  Typography,\n  useMediaQuery,\n} from '@material-ui/core';\nimport { ArrowBackTwoTone } from '@material-ui/icons';\n\nimport ItemSearch from './ItemSearch';\nimport ItemCard from './ItemCard';\nimport ItemLazyLoad from '../../common/item/ItemLazyLoad';\n\nimport { sidebarActions } from '../../../reducers/ducks';\n\nconst useStyles = makeStyles((theme) => ({\n  drawerOpenContainer: {\n    padding: theme.spacing(4),\n  },\n  drawerClosedContainer: {\n    padding: theme.spacing(1),\n    overflowY: 'auto',\n  },\n  noResults: {\n    padding: theme.spacing(1),\n  },\n  paper: {\n    backgroundColor: theme.palette.background.default,\n  },\n  dialogTitle: {\n    padding: theme.spacing(0.5, 2),\n  },\n  dialogContent: {\n    padding: theme.spacing(2),\n  },\n  itemSearchContainer: {\n    flexGrow: 1,\n  },\n}));\n\nconst ItemSearchResults = () => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.only('xs'));\n  const isBigTablet = useMediaQuery(theme.breakpoints.only('md'));\n  const isSmallTablet = useMediaQuery(theme.breakpoints.only('sm'));\n  const isDesktop = useMediaQuery(theme.breakpoints.up('lg'));\n  const classes = useStyles();\n\n  const activeTab = useSelector((state) => state.sidebar.activeTab);\n  const itemDrawerOpen = useSelector((state) => state.sidebar.itemDrawerOpen);\n  const movieSearchResults = useSelector((state) => state.movies.searchResults);\n  const searchQuery = useSelector((state) => state.sidebar.searchQuery);\n  const tvShowSearchResults = useSelector((state) => state.tvShows.searchResults);\n  const dispatch = useDispatch();\n\n  const history = useHistory();\n  const [, idPath] = usePath();\n\n  const [content, setContent] = useState([]);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n\n  useEffect(() => {\n    setIsDialogOpen(idPath === 'search');\n  }, [idPath]);\n\n  useEffect(() => {\n    const searchResults = activeTab === 'movies'\n      ? movieSearchResults.filter(e => e.release_date)\n      : tvShowSearchResults.filter(e => e.first_air_date);\n\n    setContent(searchResults);\n  }, [activeTab, movieSearchResults, tvShowSearchResults]);\n\n  const handleClose = () => history.goBack();\n\n  const handleDrawerToggle = () => {\n    dispatch(sidebarActions.setItemDrawer(false));\n  };\n\n  let itemCardCol = 12; // 1 card per row\n\n  if (isBigTablet) itemCardCol = 4; // 3 cards per row\n  if (isSmallTablet) itemCardCol = 6; // 2 cards per row\n  if (isDesktop) itemCardCol = 2; // 5 cards per row\n  if (!itemDrawerOpen) itemCardCol = 12; // 1 card per row\n\n  let results = null;\n\n  if (searchQuery.length > 0) {\n    if (content.length > 0) {\n      results = (\n        <Grid\n          container\n          item\n          justify=\"center\"\n        >\n          <ItemLazyLoad\n            contents={content}\n            node={<ItemCard />}\n            otherProps={{\n              col: itemCardCol,\n              drawerOpen: itemDrawerOpen,\n              handleDrawerToggle,\n              type: activeTab,\n            }}\n            type=\"itemCardSearchResults\"\n          />\n        </Grid>\n      )\n    } else {\n      results = (\n        <Typography className={classes.noResults}>\n          No resuls found.\n        </Typography>\n      );\n    }\n  }\n\n  if (isMobile) {\n    return (\n      <Dialog\n        classes={{ paper: classes.paper }}\n        fullScreen\n        onClose={handleClose}\n        open={isDialogOpen}\n      >\n        <DialogTitle id=\"item-search-results\" onClose={handleClose} className={classes.dialogTitle}>\n          <Grid container>\n            <Grid item>\n              <IconButton edge=\"start\" onClick={handleClose} aria-label=\"close\">\n                <ArrowBackTwoTone />\n              </IconButton>\n            </Grid>\n            <Grid item className={classes.itemSearchContainer}>\n              <ItemSearch isPermanentlyOpen />\n            </Grid>\n          </Grid>\n        </DialogTitle>\n        <DialogContent className={classes.dialogContent} dividers>\n          {results}\n        </DialogContent>\n      </Dialog>\n    );\n  }\n\n  return itemDrawerOpen\n    ? (\n      <Container className={classes.drawerOpenContainer}>\n        {results}\n      </Container>\n    )\n    : (\n      <div className={classes.drawerClosedContainer}>\n        {results}\n      </div>\n    );\n};\n\nexport default ItemSearchResults;\n","import React, { lazy } from 'react';\n\nimport {\n  MovieTwoTone,\n  LiveTvTwoTone,\n} from '@material-ui/icons';\n\nconst Movies = lazy(() => import('../containers/Movies'));\nconst TVShows = lazy(() => import('../containers/TVShows'));\n\nexport const routes = [\n  {\n    component: <Movies />,\n    path: \"/\",\n  },\n  {\n    component: <Movies />,\n    icon: (<MovieTwoTone />),\n    title: \"Movies\",\n    path: \"/movies\",\n    key: \"movies\",\n    child: {\n      component: <Movies />,\n      path: \"/movies/:movieId\",\n    },\n  },\n  {\n    component: <TVShows />,\n    icon: (<LiveTvTwoTone />),\n    title: \"TV Shows\",\n    path: \"/tvshows\",\n    key: \"tvShows\",\n    child: {\n      component: <TVShows />,\n      path: \"/tvshows/:tvshowId\",\n    },\n  },\n];\n","import React, { useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport clsx from 'clsx';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { usePath } from '../../../hooks';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  BottomNavigation,\r\n  BottomNavigationAction,\r\n  CssBaseline,\r\n  IconButton,\r\n  Toolbar,\r\n  Tooltip,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { ArrowBackTwoTone, SearchTwoTone } from '@material-ui/icons';\r\n\r\nimport APIKeyDialog from '../../apiKey/APIKeyDialog';\r\nimport AppBar from '../../overrides/AppBar';\r\nimport AppbarMenu from './AppbarMenu';\r\nimport GradientBackground from '../../common/GradientBackground';\r\nimport Helmet from '../Helmet';\r\nimport ItemCategory from '../../common/item/ItemCategory';\r\nimport ItemList from '../../common/item/ItemList';\r\nimport ItemSearchResults from '../../common/item/ItemSearchResults';\r\n\r\nimport { sidebarActions } from '../../../reducers/ducks';\r\n\r\nimport { scrollToID } from '../../../utils/functions';\r\n\r\nimport { routes } from '../../../routes/config';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  bottomNavigation: {\r\n    width: theme.browserSize.width,\r\n    position: 'fixed',\r\n    bottom: 0,\r\n  },\r\n  titlebar: {\r\n    flexGrow: 1,\r\n    margin: theme.spacing(0, 1),\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(15),\r\n  },\r\n  containerItemSelected: {\r\n    marginTop: -theme.spacing(12),\r\n  },\r\n  category: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    bottom: theme.spacing(7),\r\n    position: 'fixed',\r\n    width: '100%',\r\n  },\r\n  detailContainer: {\r\n    overflowY: 'auto',\r\n    overflowX: 'hidden',\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst Appbar = ({ children }) => {\r\n  const classes = useStyles();\r\n\r\n  const appbarContainerRef = useRef(null);\r\n  const itemListContainerRef = useRef(null);\r\n\r\n  const history = useHistory();\r\n  const [activeTab, idPath] = usePath();\r\n  const isMovie = activeTab === 'movies';\r\n\r\n  const isMovieLoading = useSelector((state) => state.movies.isMovieLoading);\r\n  const isTVShowLoading = useSelector((state) => state.tvShows.isTVShowLoading);\r\n  const movie = useSelector((state) => state.movies.movie);\r\n  const tvShow = useSelector((state) => state.tvShows.tvShow);\r\n  const dispatch = useDispatch();\r\n\r\n  const [activeBottomTab, setActiveBottomTab] = useState(isMovie ? 1 : 2);\r\n\r\n  const {\r\n    title,\r\n    original_title: originalTitle,\r\n    poster_path: movieBG,\r\n  } = movie;\r\n  const {\r\n    name,\r\n    original_name: originalName,\r\n    poster_path: tvShowBG,\r\n  } = tvShow;\r\n\r\n  const isMovieEmpty = Object.keys(movie).length === 0 && movie.constructor === Object;\r\n  const isTVShowEmpty = Object.keys(tvShow).length === 0 && tvShow.constructor === Object;\r\n\r\n  const isItemSelected = typeof idPath !== 'undefined' && idPath.length > 0;\r\n  const isTabActive = typeof activeTab !== 'undefined' && activeTab;\r\n  const isItemEmpty = isMovie ? isMovieEmpty : isTVShowEmpty;\r\n  const isItemLoading = isMovie ? isMovieLoading : isTVShowLoading;\r\n\r\n  const goBack = () => history.goBack();\r\n\r\n  const handleBottomNavigationClick = (index) => {\r\n    const tab = index === 1 ? 'movies' : 'tvshows';\r\n    scrollToID('scroll-to-top-anchor', tab === activeTab);\r\n    setActiveBottomTab(index);\r\n    dispatch(sidebarActions.setActiveTab(tab));\r\n    history.push(tab);\r\n  };\r\n\r\n  const handleSearchClick = () => {\r\n    history.push(`/${activeTab}/search`);\r\n  };\r\n\r\n  const renderToolbarContents = () => {\r\n    const displayTitle = isMovie\r\n      ? (title || originalTitle)\r\n      : (name || originalName);\r\n    const titleComponent = isItemLoading\r\n      ? <div className={classes.titlebar} />\r\n      : (\r\n        <Typography component=\"h1\" variant=\"h6\" noWrap className={classes.titlebar}>\r\n          {displayTitle}\r\n        </Typography>\r\n      );\r\n    const searchComponent = (\r\n      <Tooltip title=\"Search\">\r\n        <IconButton onClick={handleSearchClick}>\r\n          <SearchTwoTone />\r\n        </IconButton>\r\n      </Tooltip>\r\n    );\r\n\r\n    if (isItemSelected) {\r\n      return (\r\n        <>\r\n          <IconButton\r\n            aria-label=\"back\"\r\n            edge=\"start\"\r\n            onClick={goBack}\r\n          >\r\n            <ArrowBackTwoTone />\r\n          </IconButton>\r\n          {titleComponent}\r\n          {searchComponent}\r\n          <AppbarMenu />\r\n        </>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Typography component=\"h1\" variant=\"h6\" className={classes.titlebar}>\r\n          ATMDbRo\r\n        </Typography>\r\n        {searchComponent}\r\n        <APIKeyDialog />\r\n        <AppbarMenu />\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderList = () => {\r\n    if (isTabActive) {\r\n      if (isItemSelected) return children;\r\n      return <ItemList />;\r\n    }\r\n\r\n    return children;\r\n  };\r\n\r\n  const renderTopContents = () => {\r\n    if (isTabActive) {\r\n      return (\r\n        <GradientBackground\r\n          image={isMovie ? movieBG : tvShowBG}\r\n          isItemSelected={isItemSelected}\r\n          isLoading={isItemEmpty}\r\n          isVisible={isItemSelected && !isItemLoading}\r\n        />\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet />\r\n      <CssBaseline />\r\n\r\n      <AppBar color=\"inherit\">\r\n        <Toolbar>\r\n          {renderToolbarContents()}\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <div\r\n        className={clsx({\r\n          [classes.detailContainer]: (isItemSelected && isTabActive),\r\n        })}\r\n        ref={appbarContainerRef}\r\n      >\r\n        <div id=\"scroll-to-top-anchor\" />\r\n        {renderTopContents()}\r\n        <div\r\n          className={clsx(\r\n            classes.container,\r\n            { [classes.containerItemSelected]: isItemSelected },\r\n          )}\r\n          ref={itemListContainerRef}\r\n        >\r\n          {renderList()}\r\n        </div>\r\n      </div>\r\n\r\n      {!isItemSelected && (\r\n        <>\r\n          <div className={classes.category}>\r\n            <ItemCategory type=\"appbarHorizontalList\" />\r\n          </div>\r\n          <BottomNavigation\r\n            className={classes.bottomNavigation}\r\n            onChange={(_, index) => handleBottomNavigationClick(index)}\r\n            showLabels={false}\r\n            value={activeBottomTab}\r\n          >\r\n            {routes.map((element, index) => (index !== 0) && (\r\n              <BottomNavigationAction\r\n                component={Link}\r\n                icon={element.icon}\r\n                key={`appbar-bottom-nav-${element.title}`}\r\n                label={element.title}\r\n                to={element.path}\r\n              />\r\n            ))}\r\n          </BottomNavigation>\r\n        </>\r\n      )}\r\n\r\n      <ItemSearchResults />\r\n    </>\r\n  );\r\n};\r\n\r\nAppbar.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Appbar;\r\n","import { useEffect } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n  getTrendingMovies,\n  getNowPlayingMovies,\n  getPopularMovies,\n  getTopRatedMovies,\n  getUpcomingMovies,\n  getHighestGrossingMovies,\n\n  getTrendingShows,\n  getAiringTodayShows,\n  getOnTheAirShows,\n  getPopularShows,\n  getTopRatedShows,\n\n  // getCountries,\n} from '../api';\n\nimport {\n  moviesActions,\n  snackbarActions,\n  // tmdbConfigActions,\n  tvShowsActions,\n} from '../reducers/ducks';\n\nimport { decryptKey } from '../utils/functions';\n\nconst InitAPICalls = () => {\n  const apiKey = useSelector((state) => state.sidebar.apiKey);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    let hasError = false;\n    let errorMessage = '';\n\n    // movies\n    getTrendingMovies(decryptKey(), (response) => {\n      dispatch(moviesActions.setMovieList('trending', response.data.results));\n    }, (error) => {\n      errorMessage = error;\n      hasError = true;\n    });\n\n    getNowPlayingMovies(decryptKey(), (response) => {\n      dispatch(moviesActions.setMovieList('nowPlaying', response.data.results));\n    }, (error) => {\n      errorMessage = error;\n      hasError = true;\n    });\n\n    getPopularMovies(decryptKey(), (response) => {\n      dispatch(moviesActions.setMovieList('popular', response.data.results));\n    }, (error) => {\n      errorMessage = error;\n      hasError = true;\n    });\n\n    getTopRatedMovies(decryptKey(), (response) => {\n      dispatch(moviesActions.setMovieList('topRated', response.data.results));\n    }, (error) => {\n      errorMessage = error;\n      hasError = true;\n    });\n\n    getUpcomingMovies(decryptKey(), (response) => {\n      dispatch(moviesActions.setMovieList('upcoming', response.data.results));\n    }, (error) => {\n      errorMessage = error;\n      hasError = true;\n    });\n\n    getHighestGrossingMovies(decryptKey(), (response) => {\n      dispatch(moviesActions.setMovieList('highestGrossing', response.data.results));\n    }, (error) => {\n      errorMessage = error;\n      hasError = true;\n    });\n\n    // tv shows\n    getTrendingShows(decryptKey(), (response) => {\n      dispatch(tvShowsActions.setTVShowsList('trending', response.data.results));\n    }, (error) => {\n      errorMessage = error;\n      hasError = true;\n    });\n\n    getAiringTodayShows(decryptKey(), (response) => {\n      dispatch(tvShowsActions.setTVShowsList('airingToday', response.data.results));\n    }, (error) => {\n      errorMessage = error;\n      hasError = true;\n    });\n\n    getOnTheAirShows(decryptKey(), (response) => {\n      dispatch(tvShowsActions.setTVShowsList('onTheAir', response.data.results));\n    }, (error) => {\n      errorMessage = error;\n      hasError = true;\n    });\n\n    getPopularShows(decryptKey(), (response) => {\n      dispatch(tvShowsActions.setTVShowsList('popular', response.data.results));\n    }, (error) => {\n      errorMessage = error;\n      hasError = true;\n    });\n\n    getTopRatedShows(decryptKey(), (response) => {\n      dispatch(tvShowsActions.setTVShowsList('topRated', response.data.results));\n    }, (error) => {\n      errorMessage = error;\n      hasError = true;\n    });\n\n    // // country config\n    // getCountries(decryptKey(), (response) => {\n    //   dispatch(tmdbConfigActions.setCountryConfig(response.data));\n    // }, (error) => {\n    //   errorMessage = error;\n    //   hasError = true;\n    // });\n\n    if (hasError) {\n      dispatch(snackbarActions.showSnackbar(`Error on fetching now playing movies: ${errorMessage}`, 'error'));\n    }\n  }, [apiKey, dispatch]);\n\n  return null;\n};\n\nexport default InitAPICalls;\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport clsx from 'clsx';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { usePath } from '../../../hooks';\r\n\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport {\r\n  Container,\r\n  Drawer,\r\n  Grid,\r\n  IconButton,\r\n  Toolbar,\r\n  Tooltip,\r\n  Typography,\r\n  useMediaQuery,\r\n} from '@material-ui/core';\r\nimport {\r\n  ChevronLeft,\r\n  ChevronRight,\r\n} from '@material-ui/icons';\r\n\r\nimport AppBar from '../../overrides/AppBar';\r\nimport ComponentLoader from '../ComponentLoader';\r\nimport ItemCard from './ItemCard';\r\nimport ItemCategory from './ItemCategory';\r\nimport ItemHeader from './ItemHeader';\r\nimport ItemSearch from './ItemSearch';\r\nimport ItemSearchResults from './ItemSearchResults';\r\nimport Note from '../Note';\r\n\r\nimport { toCamelCase } from '../../../utils/functions';\r\n\r\nimport { sidebarActions } from '../../../reducers/ducks';\r\n\r\nimport {\r\n  MOVIE_DRAWER_CATEGORY_CHIPS,\r\n  TV_SHOW_DRAWER_CATEGORY_CHIPS,\r\n  NOTE_NO_API_KEY,\r\n  NOTE_OFFLINE,\r\n  ITEM_DRAWER_WIDTH,\r\n} from '../../../constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  drawer: {\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    backgroundColor: theme.palette.background.default,\r\n    position: 'inherit',\r\n    [theme.breakpoints.up('lg')]: {\r\n      height: theme.browserSize.height,\r\n    },\r\n  },\r\n  drawerOpenPaperPadding: {\r\n    padding: theme.spacing(5),\r\n    height: '100%',\r\n  },\r\n  drawerClose: {\r\n    width: ITEM_DRAWER_WIDTH,\r\n    overflow: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    [theme.breakpoints.between('sm', 'md')]: {\r\n      width: 0,\r\n      overflow: 'hidden',\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n  },\r\n  drawerOpen: {\r\n    width: theme.browserSize.width - theme.spacing(7),\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  toolbar: {\r\n    [theme.breakpoints.up('lg')]: {\r\n      padding: theme.spacing(1, 2),\r\n    },\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  itemCardContainer: {\r\n    overflowY: 'auto',\r\n  },\r\n  desktopDrawerOpenItemCardContainer: {\r\n    marginBottom: theme.spacing(10),\r\n  },\r\n  desktopDrawerClosedItemCardContainer: {\r\n    padding: theme.spacing(1),\r\n  },\r\n  itemHeader: {\r\n    padding: theme.spacing(16, 0),\r\n  },\r\n  itemSearch: {\r\n    width: theme.spacing(40),\r\n  },\r\n  options: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: `1px solid ${theme.palette.brokenImage.border}`,\r\n    borderRadius: theme.shape.borderRadius,\r\n    maxWidth: '50%',\r\n    position: 'fixed',\r\n    right: theme.spacing(8),\r\n    top: theme.spacing(8),\r\n    width: 'auto',\r\n    zIndex: 2,\r\n  },\r\n}));\r\n\r\nconst ItemDrawer = ({\r\n  isItemSelected,\r\n}) => {\r\n  const theme = useTheme();\r\n  const isTablet = useMediaQuery(theme.breakpoints.between('sm', 'md'));\r\n  const isBigTablet = useMediaQuery(theme.breakpoints.only('md'));\r\n  const isSmallTablet = useMediaQuery(theme.breakpoints.only('sm'));\r\n  const isDesktop = useMediaQuery(theme.breakpoints.up('lg'));\r\n  const classes = useStyles();\r\n\r\n  const activeTab = useSelector((state) => state.sidebar.activeTab);\r\n  const isSearchOpen = useSelector((state) => state.sidebar.isSearchOpen);\r\n  const itemDrawerOpenStore = useSelector((state) => state.sidebar.itemDrawerOpen);\r\n  const movieCategory = useSelector((state) => state.movies.category);\r\n  const movieList = useSelector((state) => state.movies.list);\r\n  const movieLoadedContent = useSelector((state) => state.movies.loadedContent);\r\n  const tvShowCategory = useSelector((state) => state.tvShows.category);\r\n  const tvShowList = useSelector((state) => state.tvShows.list);\r\n  const tvShowLoadedContent = useSelector((state) => state.tvShows.loadedContent);\r\n  const dispatch = useDispatch();\r\n\r\n  const [itemDrawerOpen, setItemDrawerOpen] = useState(true);\r\n\r\n  const [, searchPath] = usePath();\r\n\r\n  const isMovie = activeTab === 'movies';\r\n  const categoryChips = isMovie ? MOVIE_DRAWER_CATEGORY_CHIPS : TV_SHOW_DRAWER_CATEGORY_CHIPS;\r\n  const contentToDisplay = isMovie ? movieList[movieCategory] : tvShowList[tvShowCategory];\r\n  const loadedContent = isMovie ? movieLoadedContent : tvShowLoadedContent;\r\n\r\n  useEffect(() => {\r\n    let itemDrawerFinalState = false;\r\n\r\n    if (isDesktop && !isItemSelected) itemDrawerFinalState = true;\r\n    if (isTablet) itemDrawerFinalState = true;\r\n\r\n    setItemDrawerOpen(itemDrawerFinalState);\r\n    dispatch(sidebarActions.setItemDrawer(itemDrawerFinalState));\r\n  }, [isDesktop, isTablet, searchPath, isItemSelected, itemDrawerOpenStore, dispatch]);\r\n\r\n  const handleDrawerToggle = () => {\r\n    const isDrawerOpen = !itemDrawerOpen;\r\n    setItemDrawerOpen(isDrawerOpen);\r\n    dispatch(sidebarActions.setItemDrawer(isDrawerOpen));\r\n  };\r\n\r\n  const renderToggleItemDrawer = (isEdgeEnd) => (\r\n    <Tooltip title={itemDrawerOpen ? 'See less' : 'See all'}>\r\n      <IconButton onClick={handleDrawerToggle} edge={isEdgeEnd ? 'end' : false}>\r\n        {itemDrawerOpen ? <ChevronLeft /> : <ChevronRight />}\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n\r\n  const renderItemCards = () => {\r\n    if (!window.navigator.onLine) {\r\n      return <Note details={NOTE_OFFLINE} />;\r\n    }\r\n\r\n    if (localStorage.getItem('apiKey') === null) {\r\n      return <Note details={NOTE_NO_API_KEY} />;\r\n    }\r\n\r\n    if (loadedContent !== categoryChips.length) {\r\n      return <ComponentLoader location=\"itemdrawer\" isItemDrawerOpen={itemDrawerOpen} />;\r\n    }\r\n\r\n    let itemCardCol = 12; // 1 card per row\r\n    if (isBigTablet) itemCardCol = 4; // 3 cards per row\r\n    if (isSmallTablet) itemCardCol = 6; // 2 cards per row\r\n    if (isDesktop) itemCardCol = 2; // 5 cards per row\r\n    if (!itemDrawerOpen) itemCardCol = 12; // 1 card per row\r\n\r\n    return (\r\n      <Grid\r\n        className={classes.cardGridContainer}\r\n        container\r\n        item\r\n        justify=\"center\"\r\n      >\r\n        {contentToDisplay.slice(0, 10).map((item, rank) => (\r\n          <ItemCard\r\n            col={itemCardCol}\r\n            content={item}\r\n            drawerOpen={itemDrawerOpen}\r\n            handleDrawerToggle={handleDrawerToggle}\r\n            rank={rank + 1}\r\n            type={activeTab}\r\n            key={`item-drawer-item-card-${rank + 1}-${item.id}`}\r\n          />\r\n        ))}\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      className={clsx(\r\n        classes.drawer,\r\n        {\r\n          [classes.drawerOpen]: itemDrawerOpen,\r\n          [classes.drawerClose]: !itemDrawerOpen,\r\n        },\r\n      )}\r\n      variant=\"permanent\"\r\n      open={itemDrawerOpen}\r\n      classes={{\r\n        paper: clsx(\r\n          classes.drawerPaper,\r\n          {\r\n            [classes.drawerOpenPaperPadding]: itemDrawerOpen,\r\n            [classes.drawerOpen]: itemDrawerOpen,\r\n            [classes.drawerClose]: !itemDrawerOpen,\r\n          },\r\n        ),\r\n      }}\r\n    >\r\n      {itemDrawerOpen\r\n        ? (\r\n          <Container>\r\n            <Grid\r\n              alignItems=\"center\"\r\n              container\r\n              direction=\"row\"\r\n            >\r\n              <Grid\r\n                alignItems=\"center\"\r\n                container\r\n                item\r\n                justify=\"flex-end\"\r\n              >\r\n                <Grid item className={clsx({ [classes.itemSearch]: isSearchOpen })}>\r\n                  <ItemSearch />\r\n                </Grid>\r\n                {!isSearchOpen && (\r\n                  <Grid item>\r\n                    {isDesktop && renderToggleItemDrawer()}\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n              {!isSearchOpen && (\r\n                <Grid\r\n                  alignItems=\"center\"\r\n                  className={classes.itemHeader}\r\n                  container\r\n                  direction=\"column\"\r\n                  item\r\n                  justify=\"center\"\r\n                >\r\n                  <ItemHeader />\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n          </Container>\r\n        )\r\n        : (\r\n          <AppBar position=\"static\" color=\"inherit\">\r\n            <Toolbar className={classes.toolbar}>\r\n              {!isSearchOpen && (\r\n                <>\r\n                  <Typography variant=\"h6\">\r\n                    {`Top 10 ${toCamelCase(isMovie ? movieCategory : tvShowCategory).replace('Highest', 'H. ')}`}\r\n                  </Typography>\r\n                  {contentToDisplay.length > 0 && (\r\n                    <ItemCategory type=\"iconButton\" />\r\n                  )}\r\n                </>\r\n              )}\r\n              <div className={classes.grow} />\r\n              <ItemSearch />\r\n              {!isSearchOpen && isDesktop && renderToggleItemDrawer(true)}\r\n            </Toolbar>\r\n          </AppBar>\r\n        )}\r\n      {isSearchOpen\r\n        ? <ItemSearchResults />\r\n        : (\r\n          <Container\r\n            className={clsx(\r\n              classes.itemCardContainer,\r\n              {\r\n                [classes.desktopDrawerOpenItemCardContainer]: itemDrawerOpen,\r\n                [classes.desktopDrawerClosedItemCardContainer]: !itemDrawerOpen,\r\n              },\r\n            )}\r\n          >\r\n            {renderItemCards()}\r\n          </Container>\r\n        )}\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nItemDrawer.defaultProps = {\r\n  isItemSelected: false,\r\n};\r\n\r\nItemDrawer.propTypes = {\r\n  isItemSelected: PropTypes.bool,\r\n};\r\n\r\nexport default ItemDrawer;\r\n","import React from 'react';\n\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Divider,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListSubheader,\n  Typography,\n} from '@material-ui/core';\nimport { CodeTwoTone, MenuTwoTone, WebTwoTone } from '@material-ui/icons';\n\nimport DarkModeToggle from '../../common/DarkModeToggle';\n\nimport APIKeyDialog from '../../apiKey/APIKeyDialog';\n\nimport { moviesActions, sidebarActions, tvShowsActions } from '../../../reducers/ducks';\n\nimport {\n  API_KEY_DIALOG_TMDB_LINK,\n  FIGMA_LINK,\n  GITHUB_REPO_LINK,\n  TMDB_LOGO,\n  TMDB_LOGO_DARK,\n} from '../../../constants';\n\nimport { routes } from '../../../routes/config';\n\nconst useStyles = makeStyles((theme) => ({\n  appTitle: {\n    marginRight: '20px',\n  },\n  bottomTabs: {\n    alignContent: 'flex-end',\n    display: 'flex',\n    flex: 1,\n    flexWrap: 'wrap',\n  },\n  toolbar: {\n    alignItems: 'center',\n    display: 'flex',\n    marginBottom: '10px',\n    padding: '0 4px',\n    ...theme.mixins.toolbar,\n  },\n  tmdbLogo: {\n    width: '1.6em',\n  },\n  link: {\n    textDecoration: 'none',\n    color: 'unset',\n  },\n  divider: {\n    margin: theme.spacing(2, 0),\n    width: '100%',\n  },\n}));\n\nconst SidebarContent = () => {\n  const classes = useStyles();\n\n  const activeTab = useSelector((state) => state.sidebar.activeTab);\n  const darkMode = useSelector((state) => state.sidebar.darkMode);\n  const drawerOpen = useSelector((state) => state.sidebar.drawerOpen);\n  const dispatch = useDispatch();\n\n  const handleListItemClick = (tab) => {\n    if (activeTab === 'movies') dispatch(moviesActions.setActiveMovie({}));\n    else dispatch(tvShowsActions.setActiveTVShow({}));\n    dispatch(sidebarActions.setActiveTab(tab.toLowerCase()));\n  };\n\n  const handleDrawerState = () => dispatch(sidebarActions.toggleDrawer());\n\n  const renderListItemLink = (link, icon, primary, secondary) => (\n    <ListItem button onClick={() => window.open(link, '_blank')}>\n      <ListItemIcon>\n        {icon}\n      </ListItemIcon>\n      <ListItemText primary={primary} secondary={secondary} />\n    </ListItem>\n  );\n\n  return (\n    <>\n      <div className={classes.toolbar}>\n        <IconButton className={classes.appTitle} onClick={handleDrawerState}>\n          <MenuTwoTone />\n        </IconButton>\n        <Typography component=\"h1\" variant=\"h6\"> ATMDbRo </Typography>\n      </div>\n\n      <List>\n        {routes.map((element, index) => (index !== 0) && (\n          <Link\n            className={classes.link}\n            key={`sidebar-content-link-${element.path}`}\n            to={element.path}\n          >\n            <ListItem\n              button\n              classes={{ selected: classes.activeTab }}\n              onClick={() => handleListItemClick(element.title.replace(/ /g, '').toLowerCase())}\n              selected={activeTab === element.title.replace(/ /g, '').toLowerCase()}\n            >\n              <ListItemIcon>{element.icon}</ListItemIcon>\n              <ListItemText primary={element.title} />\n            </ListItem>\n          </Link>\n        ))}\n      </List>\n\n      <List className={classes.bottomTabs}>\n        {drawerOpen && (\n          <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n            External Links\n          </ListSubheader>\n        )}\n        {renderListItemLink(GITHUB_REPO_LINK, <CodeTwoTone />, 'GitHub Repository', undefined)}\n        {renderListItemLink(FIGMA_LINK, <WebTwoTone />, 'Figma (Wireframes)', undefined)}\n        <Divider className={classes.divider} />\n        <DarkModeToggle type=\"listItem\" />\n        <APIKeyDialog />\n        {renderListItemLink(API_KEY_DIALOG_TMDB_LINK, (\n          <img\n            alt=\"TMDb Logo\"\n            className={classes.tmdbLogo}\n            src={darkMode ? TMDB_LOGO_DARK : TMDB_LOGO}\n          />\n        ), 'Made with y540 and TMDb', 'by jjdcabasolo')}\n      </List>\n    </>\n  );\n};\n\nexport default SidebarContent;\n","import React, { useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport moment from 'moment';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  IconButton,\r\n  Toolbar,\r\n  Tooltip,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { ArrowBackTwoTone, SearchTwoTone } from '@material-ui/icons';\r\n\r\nimport AppBar from '../../overrides/AppBar';\r\n\r\nimport {\r\n  moviesActions,\r\n  sidebarActions,\r\n  tvShowsActions,\r\n} from '../../../reducers/ducks';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  toolbarDrawer: {\r\n    marginLeft: theme.spacing(7) - theme.spacing(1),\r\n    transition: theme.transitions.create('margin-left', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst SidebarTitlebar = ({ item }) => {\r\n  const classes = useStyles();\r\n\r\n  const activeTab = useSelector((state) => state.sidebar.activeTab);\r\n  const isSearchOpen = useSelector((state) => state.sidebar.isSearchOpen);\r\n  const dispatch = useDispatch();\r\n\r\n  const history = useHistory();\r\n\r\n  const {\r\n    date,\r\n    name,\r\n    original_name: originalName,\r\n    original_title: originalTitle,\r\n    title,\r\n  } = item;\r\n\r\n  const isItemSelected = 'id' in item;\r\n\r\n  const goBack = useCallback(() => {\r\n    if (activeTab === 'movies') dispatch(moviesActions.setActiveMovie({}));\r\n    else dispatch(tvShowsActions.setActiveTVShow({}));\r\n\r\n    if (isSearchOpen) dispatch(sidebarActions.setSearch(false));\r\n\r\n    history.goBack();\r\n  }, [dispatch, history, isSearchOpen, activeTab]);\r\n\r\n  const handleSearch = () => {\r\n    dispatch(sidebarActions.setItemDrawer(true));\r\n    history.push(`/${activeTab}/search`);\r\n  };\r\n\r\n  const evaluateTitle = () => {\r\n    if (activeTab === 'movies') return title || originalTitle;\r\n    return name || originalName;\r\n  };\r\n\r\n  return (\r\n    <AppBar color=\"default\" className={classes.appbar}>\r\n      <Toolbar\r\n        className={classes.toolbarDrawer}\r\n        variant=\"dense\"\r\n      >\r\n        <IconButton\r\n          aria-label=\"back\"\r\n          onClick={goBack}\r\n        >\r\n          <ArrowBackTwoTone />\r\n        </IconButton>\r\n        <Typography component=\"h1\" variant=\"h6\">\r\n          {isItemSelected && `${evaluateTitle()} ${date ? `(${moment(date).format('YYYY')})` : ''}`}\r\n        </Typography>\r\n        <div className={classes.grow} />\r\n        <Tooltip title=\"Search\">\r\n          <IconButton onClick={handleSearch}>\r\n            <SearchTwoTone />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nSidebarTitlebar.defaultProps = {\r\n  item: {\r\n    date: '',\r\n    name: '',\r\n    original_name: '',\r\n    original_title: '',\r\n    title: '',\r\n  },\r\n};\r\n\r\nSidebarTitlebar.propTypes = {\r\n  item: PropTypes.shape({\r\n    date: PropTypes.string,\r\n    name: PropTypes.string,\r\n    original_name: PropTypes.string,\r\n    original_title: PropTypes.string,\r\n    title: PropTypes.string,\r\n  }),\r\n};\r\n\r\nexport default SidebarTitlebar;\r\n","import React, { useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport clsx from 'clsx';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { usePath } from '../../../hooks';\r\n\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport {\r\n  ClickAwayListener,\r\n  Container,\r\n  CssBaseline,\r\n  Drawer,\r\n  useMediaQuery,\r\n} from '@material-ui/core';\r\n\r\nimport GradientBackground from '../../common/GradientBackground';\r\nimport Helmet from '../Helmet';\r\nimport ItemDrawer from '../../common/item/ItemDrawer';\r\nimport SidebarContent from './SidebarContent';\r\nimport SidebarTitlebar from './SidebarTitlebar';\r\n\r\nimport { sidebarActions } from '../../../reducers/ducks';\r\n\r\nimport { SIDEBAR_WIDTH } from '../../../constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(5),\r\n  },\r\n  contentItemSelected: {\r\n    marginTop: theme.spacing(-10),\r\n  },\r\n  drawer: {\r\n    display: 'flex',\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n    width: SIDEBAR_WIDTH,\r\n  },\r\n  drawerClose: {\r\n    overflow: 'hidden',\r\n    width: theme.spacing(7),\r\n  },\r\n  drawerOpen: {\r\n    overflow: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    width: SIDEBAR_WIDTH,\r\n  },\r\n  drawerPaper: {\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  itemContainer: {\r\n    overflowY: 'scroll',\r\n    width: '100%',\r\n    height: theme.browserSize.height,\r\n  },\r\n  marginDrawerOpen: {\r\n    marginLeft: theme.spacing(7),\r\n  },\r\n}));\r\n\r\nconst Sidebar = ({ children }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const isDesktop = useMediaQuery(theme.breakpoints.up('lg'));\r\n\r\n  const target = useRef(null);\r\n\r\n  const drawerOpen = useSelector((state) => state.sidebar.drawerOpen);\r\n  const isMovieLoading = useSelector((state) => state.movies.isMovieLoading);\r\n  const isTVShowLoading = useSelector((state) => state.tvShows.isTVShowLoading);\r\n  const tvShow = useSelector((state) => state.tvShows.tvShow);\r\n  const movie = useSelector((state) => state.movies.movie);\r\n  const dispatch = useDispatch();\r\n\r\n  const [activeTab, idPath] = usePath();\r\n  const isMovie = activeTab === 'movies';\r\n  const { backdrop_path: movieBG } = movie;\r\n  const { backdrop_path: tvShowBG } = tvShow;\r\n\r\n  const isMovieEmpty = Object.keys(movie).length === 0 && movie.constructor === Object;\r\n  const isTVShowEmpty = Object.keys(tvShow).length === 0 && tvShow.constructor === Object;\r\n\r\n  const isItemSelected = typeof idPath !== 'undefined' && idPath.length > 0;\r\n  const isTabActive = typeof activeTab !== 'undefined' && activeTab;\r\n  const isItemEmpty = isMovie ? isMovieEmpty : isTVShowEmpty;\r\n  const isItemLoading = isMovie ? isMovieLoading : isTVShowLoading;\r\n\r\n  const handleDrawerState = (open) => {\r\n    if (drawerOpen !== open) {\r\n      dispatch(sidebarActions.setDrawer(open));\r\n    }\r\n  };\r\n\r\n  const evaluateDrawerVisibility = () => {\r\n    if (isTabActive) {\r\n      if (!isDesktop && isItemSelected && idPath !== 'search') {\r\n        return <SidebarTitlebar item={isMovie ? movie : tvShow} />;\r\n      }\r\n      return <ItemDrawer isItemSelected={isItemSelected} />;\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  const renderTopContents = () => {\r\n    if (isItemSelected && isTabActive) {\r\n      return (\r\n        <GradientBackground\r\n          image={isMovie ? movieBG : tvShowBG}\r\n          isItemSelected={isItemSelected}\r\n          isLoading={isItemEmpty}\r\n          isVisible={isItemSelected && isTabActive && !isItemLoading}\r\n        />\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Helmet />\r\n\r\n      <CssBaseline />\r\n\r\n      <ClickAwayListener onClickAway={() => handleDrawerState(false)}>\r\n        <Drawer\r\n          className={clsx(\r\n            classes.drawer,\r\n            {\r\n              [classes.drawerOpen]: drawerOpen,\r\n              [classes.drawerClose]: !drawerOpen,\r\n            },\r\n          )}\r\n          classes={{\r\n            paper: clsx(\r\n              classes.drawerPaper,\r\n              {\r\n                [classes.drawerOpen]: drawerOpen,\r\n                [classes.drawerClose]: !drawerOpen,\r\n              },\r\n            ),\r\n          }}\r\n          open={drawerOpen}\r\n          onMouseEnter={() => handleDrawerState(true)}\r\n          onMouseLeave={() => handleDrawerState(false)}\r\n          style={drawerOpen ? { position: 'absolute' } : {}}\r\n          variant=\"permanent\"\r\n        >\r\n          <SidebarContent />\r\n        </Drawer>\r\n      </ClickAwayListener>\r\n\r\n      {drawerOpen && (\r\n        <div className={classes.marginDrawerOpen} />\r\n      )}\r\n\r\n      {evaluateDrawerVisibility()}\r\n\r\n      <div className={classes.itemContainer} ref={target}>\r\n        <div id=\"scroll-to-top-anchor\" />\r\n        {renderTopContents()}\r\n        <main\r\n          className={clsx(\r\n            classes.content,\r\n            { [classes.contentItemSelected]: isItemSelected && isTabActive },\r\n          )}\r\n        >\r\n          <Container maxWidth=\"md\">\r\n            {children}\r\n          </Container>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSidebar.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useSelector } from 'react-redux';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport {\n  IconButton,\n  Slide,\n  Snackbar,\n  SnackbarContent,\n  useMediaQuery,\n} from '@material-ui/core';\nimport {\n  CheckCircleOutlineOutlined,\n  Close,\n  ErrorOutlineOutlined,\n} from '@material-ui/icons';\nimport { green, red } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles((theme) => ({\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  icon: {\n    fontSize: 20,\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst CustomSnackbar = ({\n  handleOnClose,\n  isOpen,\n  message,\n  variant,\n}) => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.only('xs'));\n  const classes = useStyles();\n\n  const darkMode = useSelector((state) => state.sidebar.darkMode);\n\n  const closeIcon = (\n    <IconButton\n      key=\"close\"\n      onClick={handleOnClose}\n      color=\"inherit\"\n    >\n      <Close />\n    </IconButton>\n  );\n\n  const snackbarSettings = {\n    success: {\n      action: [closeIcon],\n      autoHideDuration: 6000,\n      color: (darkMode ? green[200] : green[600]),\n      icon: (<CheckCircleOutlineOutlined className={classes.icon} />),\n    },\n    error: {\n      action: [closeIcon],\n      autoHideDuration: 6000,\n      color: (darkMode ? red[200] : red[500]),\n      icon: (<ErrorOutlineOutlined className={classes.icon} />),\n    },\n  };\n\n  const snackbarMessage = (\n    <span className={classes.message}>\n      {snackbarSettings[variant].icon}\n      {message}\n    </span>\n  );\n\n  return (\n    <Snackbar\n      anchorOrigin={isMobile\n        ? { vertical: 'bottom', horizontal: 'left' }\n        : { vertical: 'top', horizontal: 'center' }}\n      autoHideDuration={snackbarSettings[variant].autoHideDuration}\n      onClose={handleOnClose}\n      open={isOpen}\n      TransitionComponent={Slide}\n    >\n      <SnackbarContent\n        style={{ backgroundColor: snackbarSettings[variant].color, maxWidth: 'unset' }}\n        message={snackbarMessage}\n        action={snackbarSettings[variant].action}\n      />\n    </Snackbar>\n  );\n};\n\nCustomSnackbar.propTypes = {\n  handleOnClose: PropTypes.func.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n  message: PropTypes.string.isRequired,\n  variant: PropTypes.string.isRequired,\n};\n\nexport default CustomSnackbar;\n","import React from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport CustomSnackbar from '../components/common/CustomSnackbar';\n\nimport { snackbarActions } from '../reducers/ducks';\n\nconst Snackbars = () => {\n  const isShown = useSelector((state) => state.snackbar.isShown);\n  const variant = useSelector((state) => state.snackbar.variant);\n  const snackbarMessage = useSelector((state) => state.snackbar.snackbarMessage);\n\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <CustomSnackbar\n        handleOnClose={() => dispatch(snackbarActions.hideSnackbar(isShown))}\n        isOpen={isShown}\n        message={snackbarMessage}\n        variant={variant}\n      />\n    </>\n  );\n};\n\nexport default Snackbars;\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\n\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { Button, useMediaQuery } from '@material-ui/core';\r\n\r\nimport Note from '../common/Note';\r\nimport ResponsiveComponent from '../../utils/components/ResponsiveComponent';\r\n\r\nimport { sidebarActions } from '../../reducers/ducks';\r\n\r\nimport { NOTE_PAGE_NOT_FOUND } from '../../constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  note: {\r\n    padding: theme.spacing(8, 2),\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst NotFound = () => {\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.only('xs'));\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const history = useHistory();\r\n\r\n  const useTP = () => {\r\n    dispatch(sidebarActions.setActiveTab('movies'));\r\n    history.push('/');\r\n  };\r\n\r\n  const renderNote = () => (\r\n    <>\r\n      <Note details={NOTE_PAGE_NOT_FOUND} />\r\n      <Button\r\n        className={classes.button}\r\n        onClick={useTP}\r\n        size={isMobile ? 'small' : 'medium'}\r\n        variant=\"outlined\"\r\n      >\r\n        Use TP\r\n      </Button>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <ResponsiveComponent\r\n      mobileComponent={(\r\n        <div className={classes.note}>\r\n          {renderNote()}\r\n        </div>\r\n      )}\r\n      tabletComponent={renderNote()}\r\n      desktopComponent={renderNote()}\r\n    />\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { Suspense, lazy } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nimport NotFound from '../components/notFound/NotFound';\nimport ComponentLoader from '../components/common/ComponentLoader';\n\nconst Movies = lazy(() => import('../containers/Movies'));\nconst TVShows = lazy(() => import('../containers/TVShows'));\n\nconst renderComponent = (component) => (\n  <Suspense fallback={<ComponentLoader />}>\n    {component === 'movies' && <Movies />}\n    {component === 'tvshows' && <TVShows />}\n  </Suspense>\n);\n\nconst Routes = () => (\n  <Switch>\n    {/* { routes.map(e => (\n      <>\n        <Route exact path={e.path}>\n          <Suspense fallback={<ComponentLoader />}>\n            {e.component}\n          </Suspense>\n        </Route>\n        { e.child && (\n          <Route exact path={e.child.path}>\n            {e.child.component}\n          </Route>\n        )}\n      </>\n    )) }\n    <Route component={NotFound} /> */}\n    <Redirect exact from=\"/\" to=\"/movies\" />\n    <Route exact path=\"/movies\">\n      {renderComponent('movies')}\n    </Route>\n    <Route exact path=\"/movies/search\">\n      {renderComponent('movies')}\n    </Route>\n    <Route exact path=\"/movies/:movieId\">\n      {renderComponent('movies')}\n    </Route>\n    <Route exact path=\"/movies/:movieId/:section\">\n      {renderComponent('movies')}\n    </Route>\n\n    <Route exact path=\"/tvshows\">\n      {renderComponent('tvshows')}\n    </Route>\n    <Route exact path=\"/tvshows/:tvShowId\">\n      {renderComponent('tvshows')}\n    </Route>\n    <Route exact path=\"/tvshows/:tvShowId/:section\">\n      {renderComponent('tvshows')}\n    </Route>\n\n    <Route>\n      <NotFound />\n    </Route>\n  </Switch>\n);\n\nexport default Routes;\n","import React, { useLayoutEffect } from 'react';\n\nimport { HashRouter as Router } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport MomentUtils from '@date-io/moment';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport amber from '@material-ui/core/colors/amber';\nimport grey from '@material-ui/core/colors/grey';\n\nimport Appbar from '../components/navigation/appbar/Appbar';\nimport Helmet from '../components/navigation/Helmet';\nimport InitAPICalls from './InitAPICalls';\nimport ResponsiveComponent from '../utils/components/ResponsiveComponent';\nimport Sidebar from '../components/navigation/sidebar/Sidebar';\nimport Snackbars from './Snackbars';\n\nimport { browserActions } from '../reducers/ducks';\n\nimport Routes from '../routes';\n\nconst App = () => {\n  const darkMode = useSelector((state) => state.sidebar.darkMode);\n  const height = useSelector((state) => state.browser.height);\n  const width = useSelector((state) => state.browser.width);\n\n  const dispatch = useDispatch();\n\n  useLayoutEffect(() => {\n    const updateSize = () => {\n      dispatch(browserActions.changeBrowserSize(window.innerHeight, window.innerWidth));\n    };\n    window.addEventListener('resize', updateSize);\n    updateSize();\n    return () => window.removeEventListener('resize', updateSize);\n  }, [dispatch]);\n\n  const theme = createMuiTheme({\n    palette: {\n      primary: { main: darkMode ? amber[200] : amber[500] },\n      type: darkMode ? 'dark' : 'light',\n      brokenImage: {\n        border: darkMode ? grey[700] : grey[300],\n        background: darkMode ? grey[800] : grey[200],\n      },\n      divider: darkMode ? grey[700] : grey[300],\n    },\n    browserSize: { width, height },\n    shape: {\n      borderRadius: 8,\n    },\n  });\n\n  return (\n    <>\n      <Helmet isDefault />\n      <MuiThemeProvider theme={theme}>\n        <MuiPickersUtilsProvider utils={MomentUtils}>\n          <Router basename=\"/\">\n            <ResponsiveComponent\n              mobileComponent={<Appbar><Routes /></Appbar>}\n              tabletComponent={<Sidebar><Routes /></Sidebar>}\n              desktopComponent={<Sidebar><Routes /></Sidebar>}\n            />\n          </Router>\n          <Snackbars />\n          <InitAPICalls />\n        </MuiPickersUtilsProvider>\n      </MuiThemeProvider>\n    </>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { routerReducer } from 'react-router-redux';\n\nimport {\n  browserReducer,\n  moviesReducer,\n  sidebarReducer,\n  snackbarReducer,\n  tmdbConfigReducer,\n  tvShowsReducer,\n} from './ducks';\n\nconst appReducer = combineReducers({\n  router: routerReducer,\n  browser: browserReducer,\n  movies: moviesReducer,\n  sidebar: sidebarReducer,\n  snackbar: snackbarReducer,\n  tmdbConfig: tmdbConfigReducer,\n  tvShows: tvShowsReducer,\n});\n\nconst rootReducer = (state, action) => appReducer(action.type === 'CLEAR_REDUX_STATES' ? undefined : state, action);\n\nexport default rootReducer;\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport { routerMiddleware } from 'react-router-redux';\nimport { createBrowserHistory } from 'history'\n\nimport rootReducer from '../reducers/config';\n\nexport const history = createBrowserHistory();\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(reduxThunk, routerMiddleware(history)),\n    window.devToolsExtension ? window.devToolsExtension() : f => f,\n  ),\n);\n\nif (module.hot) {\n  //Enable webpack hot module replacement for reducers\n  module.hot.accept('../reducers/ducks', () => {\n    const nextRootReducer = require('../reducers/ducks').default;\n    store.replaceReducer(nextRootReducer);\n  });\n}\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './assets/styles/index.css';\nimport App from './containers/App';\nimport store from './store/configureStore';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport default axios;\n","/* eslint-disable camelcase */\r\nimport moment from 'moment';\r\n\r\nimport axios from './config';\r\n\r\nexport const getPopularMovies = (\r\n  api_key,\r\n  success,\r\n  fail,\r\n  after = () => { },\r\n) => axios.get('/movie/popular', { params: { api_key } })\r\n  .then((response) => success(response))\r\n  .catch((error) => fail(error))\r\n  .finally(() => after());\r\n\r\nexport const getNowPlayingMovies = (\r\n  api_key,\r\n  success,\r\n  fail,\r\n  after = () => { },\r\n) => axios.get('/movie/now_playing', { params: { api_key } })\r\n  .then((response) => success(response))\r\n  .catch((error) => fail(error))\r\n  .finally(() => after());\r\n\r\nexport const getTopRatedMovies = (\r\n  api_key,\r\n  success,\r\n  fail,\r\n  after = () => { },\r\n) => axios.get('/movie/top_rated', { params: { api_key } })\r\n  .then((response) => success(response))\r\n  .catch((error) => fail(error))\r\n  .finally(() => after());\r\n\r\nexport const getUpcomingMovies = (\r\n  api_key,\r\n  success,\r\n  fail,\r\n  after = () => { },\r\n) => axios.get('/movie/upcoming', { params: { api_key } })\r\n  .then((response) => success(response))\r\n  .catch((error) => fail(error))\r\n  .finally(() => after());\r\n\r\nexport const getHighestGrossingMovies = (\r\n  api_key,\r\n  success,\r\n  fail,\r\n  after = () => { },\r\n) => axios.get('/discover/movie', { params: { api_key, sort_by: 'revenue.desc' } })\r\n  .then((response) => success(response))\r\n  .catch((error) => fail(error))\r\n  .finally(() => after());\r\n\r\nexport const getTrendingMovies = (\r\n  api_key,\r\n  success,\r\n  fail,\r\n  after = () => { },\r\n) => axios.get('/trending/movie/day', { params: { api_key } })\r\n  .then((response) => success(response))\r\n  .catch((error) => fail(error))\r\n  .finally(() => after());\r\n\r\nexport const getMovieCollection = (\r\n  api_key,\r\n  collectionId,\r\n  success,\r\n  fail,\r\n  after,\r\n) => axios.get(`/collection/${collectionId}`, { params: { api_key } })\r\n  .then((response) => success(response))\r\n  .catch((error) => fail(error))\r\n  .finally(() => after());\r\n\r\nexport const getMovieDetails = (\r\n  api_key,\r\n  movie_id,\r\n  success,\r\n  fail,\r\n  after = () => { },\r\n) => axios.get(`/movie/${movie_id}`, {\r\n  params: {\r\n    api_key,\r\n    append_to_response: 'videos,credits,external_ids,recommendations',\r\n  },\r\n})\r\n  .then((response) => {\r\n    const { data } = response;\r\n    const details = { ...data };\r\n\r\n    const {\r\n      belongs_to_collection: collection,\r\n      credits,\r\n      external_ids,\r\n      id: tmdb_id,\r\n      recommendations,\r\n      videos,\r\n    } = details;\r\n\r\n    const {\r\n      facebook_id,\r\n      instagram_id,\r\n      twitter_id,\r\n      imdb_id,\r\n    } = external_ids;\r\n\r\n    // extract cast and crew from credits\r\n    details.cast = credits.cast;\r\n    details.crew = credits.crew;\r\n    delete details.credits;\r\n\r\n    // simplify recommendations response\r\n    details.recommendations = recommendations.results;\r\n\r\n    // check if a trailer exists on video response\r\n    const trailer = videos.results.filter((e) => e.type === 'Trailer');\r\n    details.youtube = trailer.length > 0 && trailer[0].key\r\n      ? `https://www.youtube.com/watch?v=${trailer[0].key}`\r\n      : null;\r\n    delete details.videos;\r\n\r\n    // extract external link id's\r\n    details.facebook = facebook_id !== null ? `https://www.facebook.com/${facebook_id}` : null;\r\n    details.instagram = instagram_id !== null ? `https://www.instagram.com/${instagram_id}` : null;\r\n    details.twitter = twitter_id !== null ? `https://www.twitter.com/${twitter_id}` : null;\r\n    details.imdb = imdb_id !== null ? `https://www.imdb.com/title/${imdb_id}` : null;\r\n    details.tmdb = tmdb_id !== null ? `https://www.themoviedb.org/movie/${tmdb_id}` : null;\r\n    delete details.external_ids;\r\n\r\n    // check for collection, fetch if it exists, append to movieDetails if successful\r\n    if (collection) {\r\n      getMovieCollection(api_key, collection.id, (collectionResponse) => {\r\n        const { data: collectionData } = collectionResponse;\r\n        const { parts } = collectionData;\r\n\r\n        // arrange movies in collection by date\r\n        collectionData.parts = parts.sort((a, b) => moment.utc(a.release_date).diff(moment.utc(b.release_date)));\r\n        details.collection_content = collectionData;\r\n\r\n        success(details);\r\n      }, () => { }, () => { });\r\n    } else {\r\n      success(details);\r\n    }\r\n  })\r\n  .catch((error) => fail(error))\r\n  .finally(() => after());\r\n\r\nexport const searchMovie = (\r\n  api_key,\r\n  query,\r\n  success,\r\n  fail,\r\n  after = () => { },\r\n) => axios.get(`/search/movie`, { params: { api_key, query } })\r\n  .then((response) => success(response.data.results))\r\n  .catch((error) => fail(error))\r\n  .finally(() => after());\r\n","/* eslint-disable camelcase */\r\nimport axios from './config';\r\n\r\nexport const getAiringTodayShows = (\r\n  api_key,\r\n  success,\r\n  fail,\r\n  after = () => { },\r\n) => axios.get('/tv/airing_today', { params: { api_key } })\r\n  .then((response) => success(response))\r\n  .catch((error) => fail(error))\r\n  .finally(() => after());\r\n\r\nexport const getOnTheAirShows = (\r\n  api_key,\r\n  success,\r\n  fail,\r\n  after = () => { },\r\n) => axios.get('/tv/on_the_air', { params: { api_key } })\r\n  .then((response) => success(response))\r\n  .catch((error) => fail(error))\r\n  .finally(() => after());\r\n\r\nexport const getPopularShows = (\r\n  api_key,\r\n  success,\r\n  fail,\r\n  after = () => { },\r\n) => axios.get('/tv/popular', { params: { api_key } })\r\n  .then((response) => success(response))\r\n  .catch((error) => fail(error))\r\n  .finally(() => after());\r\n\r\nexport const getTopRatedShows = (\r\n  api_key,\r\n  success,\r\n  fail,\r\n  after = () => { },\r\n) => axios.get('/tv/top_rated', { params: { api_key } })\r\n  .then((response) => success(response))\r\n  .catch((error) => fail(error))\r\n  .finally(() => after());\r\n\r\nexport const getTrendingShows = (\r\n  api_key,\r\n  success,\r\n  fail,\r\n  after = () => { },\r\n) => axios.get('/trending/tv/day', { params: { api_key } })\r\n  .then((response) => success(response))\r\n  .catch((error) => fail(error))\r\n  .finally(() => after());\r\n\r\nexport const getTVShowDetails = (\r\n  api_key,\r\n  tv_id,\r\n  success,\r\n  fail,\r\n  after = () => { },\r\n) => axios.get(`/tv/${tv_id}`, {\r\n  params: {\r\n    api_key,\r\n    append_to_response: 'credits,external_ids,recommendations',\r\n  },\r\n})\r\n  .then((response) => {\r\n    const { data } = response;\r\n    const details = { ...data };\r\n\r\n    const {\r\n      credits,\r\n      external_ids,\r\n      id: tmdb_id,\r\n      recommendations,\r\n    } = details;\r\n\r\n    const {\r\n      facebook_id,\r\n      instagram_id,\r\n      twitter_id,\r\n      imdb_id,\r\n    } = external_ids;\r\n\r\n    // extract cast from credits\r\n    details.cast = credits.cast;\r\n    delete details.credits;\r\n\r\n    // simplify recommendations response\r\n    details.recommendations = recommendations.results;\r\n\r\n    // extract external link id's\r\n    details.facebook = facebook_id !== null ? `https://www.facebook.com/${facebook_id}` : null;\r\n    details.instagram = instagram_id !== null ? `https://www.instagram.com/${instagram_id}` : null;\r\n    details.twitter = twitter_id !== null ? `https://www.twitter.com/${twitter_id}` : null;\r\n    details.imdb = imdb_id !== null ? `https://www.imdb.com/title/${imdb_id}` : null;\r\n    details.tmdb = tmdb_id !== null ? `https://www.themoviedb.org/tv/${tmdb_id}` : null;\r\n    delete details.external_ids;\r\n\r\n    success(details);\r\n  })\r\n  .catch((error) => fail(error))\r\n  .finally(() => after());\r\n\r\nexport const getTVShowSeasonDetails = (\r\n  api_key,\r\n  tv_id,\r\n  season_number,\r\n  success,\r\n  fail,\r\n  after = () => { },\r\n) => axios.get(`/tv/${tv_id}/season/${season_number}`, { params: { api_key } })\r\n  .then((response) => success(response.data.episodes))\r\n  .catch((error) => fail(error))\r\n  .finally(() => after());\r\n\r\nexport const searchTVShow = (\r\n  api_key,\r\n  query,\r\n  success,\r\n  fail,\r\n  after = () => { },\r\n) => axios.get(`/search/tv`, { params: { api_key, query } })\r\n  .then((response) => success(response.data.results))\r\n  .catch((error) => fail(error))\r\n  .finally(() => after());\r\n","import { useLocation } from 'react-router-dom';\n\nexport const usePath = () => {\n  const location = useLocation();\n\n  return location.pathname.replace('/', '').split('/');\n};\n","import CryptoJS from 'crypto-js';\n\nexport const encrypt = (message, passphrase) => {\n  const encryptedMessage = CryptoJS.AES.encrypt(message, passphrase);\n  return encryptedMessage.toString();\n};\n\nexport const decrypt = (message, passphrase) => {\n  const decryptedMessage = CryptoJS.AES.decrypt(message, passphrase);\n  return decryptedMessage.toString(CryptoJS.enc.Utf8);\n};\n\nexport const decryptKey = () => {\n  const apiKey = localStorage.getItem('apiKey');\n  const username = localStorage.getItem('username');\n  if (apiKey == null || username == null) return '';\n\n  const decrpytedUsername = decrypt(username, apiKey);\n  return decrypt(apiKey, decrpytedUsername);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    fontSize: theme.typography.h3.fontSize,\n    margin: theme.spacing(2, 0),\n  },\n}));\n\nconst Note = ({ details }) => {\n  const classes = useStyles();\n\n  const {\n    content,\n    header,\n    icon,\n    id,\n  } = details;\n\n  return (\n    <>\n      {icon(classes.icon)}\n      <Typography variant=\"h6\" gutterBottom>{header}</Typography>\n      {content.map((e, i) => (\n        <Typography\n          // eslint-disable-next-line react/no-array-index-key\n          key={`${id}-${i}`}\n          variant=\"body2\"\n        >\n          {e}\n        </Typography>\n      ))}\n    </>\n  );\n};\n\nNote.propTypes = {\n  details: PropTypes.shape({\n    content: PropTypes.arrayOf(PropTypes.string).isRequired,\n    header: PropTypes.string.isRequired,\n    icon: PropTypes.func.isRequired,\n    id: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default Note;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Button,\n  CircularProgress,\n  Grid,\n  Typography,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  loaderContainerDesktop: {\n    height: '100vh',\n    [theme.breakpoints.only('xs')]: {\n      height: `calc(100vh - ${theme.spacing(9)}px)`,\n    },\n  },\n  loaderContainerDrawerOpen: {\n    height: `calc(100vh - ${theme.spacing(7)}px)`,\n  },\n  loaderContainerDrawerClosed: {\n    height: `calc(100vh - ${theme.spacing(10)}px)`,\n  },\n}));\n\nconst ComponentLoader = ({\n  isItemDrawerOpen,\n  location,\n  label = 'Hang tight! Contents are loading.',\n}) => {\n  const classes = useStyles();\n\n  const [showReload, setShowReload] = useState(false);\n\n  useEffect(() => {\n    const timer = setTimeout(() => setShowReload(true), 3000);\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  const handleReload = () => {\n    window.location.reload();\n  };\n\n  return (\n    <Grid\n      alignItems=\"center\"\n      className={clsx(\n        {\n          [classes.loaderContainerDesktop]: location === 'itemcontainer',\n          [classes.loaderContainerDrawerOpen]: location === 'itemdrawer' && isItemDrawerOpen,\n          [classes.loaderContainerDrawerClosed]: location === 'itemdrawer' && !isItemDrawerOpen,\n        },\n      )}\n      container\n      direction=\"column\"\n      justify=\"center\"\n      spacing={2}\n    >\n      <Grid item>\n        <CircularProgress size={80} thickness={4} />\n      </Grid>\n      <Grid item>\n        <Typography variant=\"body2\">\n          {label}\n        </Typography>\n      </Grid>\n      {showReload && (\n        <>\n          <Grid item>\n            <Typography variant=\"body2\">\n              Contents taking too long to load? Try reloading.\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Button onClick={handleReload}>Reload page</Button>\n          </Grid>\n        </>\n      )}\n    </Grid>\n  );\n};\n\nComponentLoader.defaultProps = {\n  isItemDrawerOpen: false,\n  label: 'Hang tight! Contents are loading.',\n  location: '',\n};\n\nComponentLoader.propTypes = {\n  isItemDrawerOpen: PropTypes.bool,\n  label: PropTypes.string,\n  location: PropTypes.string,\n};\n\nexport default ComponentLoader;\n","import { styled } from '@material-ui/core/styles';\nimport { AppBar as MuiAppBar } from '@material-ui/core';\n\nconst AppBar = styled(MuiAppBar)(({\n  theme,\n}) => ({\n  backgroundColor: theme.palette.background.default,\n  borderBottom: `1px solid ${theme.palette.divider}`,\n  boxShadow: 'none',\n}));\n\nexport default AppBar;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport {\r\n  Card,\r\n  CardActionArea,\r\n  CardMedia,\r\n  Grid,\r\n  Typography,\r\n  useMediaQuery,\r\n} from '@material-ui/core';\r\n\r\nimport BrokenImage from '../BrokenImage';\r\n\r\nimport { scrollToID, truncateText } from '../../../utils/functions';\r\n\r\nimport { moviesActions, tvShowsActions } from '../../../reducers/ducks';\r\n\r\nimport { MOVIE_DRAWER_TMDB_IMAGE_PREFIX, NO_DATE_TEXT } from '../../../constants';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  media: {\r\n    borderRadius: theme.shape.borderRadius,\r\n    paddingTop: theme.spacing(22),\r\n  },\r\n  mediaDrawerOpen: {\r\n    height: 0,\r\n    [theme.breakpoints.up('sm')]: {\r\n      paddingTop: theme.spacing(45),\r\n    },\r\n    width: '100%',\r\n  },\r\n  mediaDrawerClosed: {\r\n    height: 0,\r\n    width: '100%',\r\n  },\r\n  typoOverlayMediaDrawerOpen: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginTop: theme.spacing(-25),\r\n    },\r\n    [theme.breakpoints.between('sm', 'lg')]: {\r\n      marginTop: theme.spacing(-25),\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      marginTop: -((theme.browserSize.height - theme.spacing(22)) / 2),\r\n    },\r\n  },\r\n  typoOverlayMediaDrawerClosed: {\r\n    marginTop: theme.spacing(-21),\r\n  },\r\n  typoOverlay: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-end',\r\n    position: 'absolute',\r\n    padding: theme.spacing(2),\r\n    color: theme.palette.grey[100],\r\n    pointerEvents: 'none',\r\n    overflow: 'hidden',\r\n    width: '100%',\r\n    bottom: 0,\r\n    height: '100%',\r\n  },\r\n  typoOverlayBackgroundGradient: {\r\n    backgroundImage: `linear-gradient(to top,\r\n      rgba(0,0,0,0.4) 0%,\r\n      rgba(0,0,0,0.3) 30%,\r\n      rgba(0,0,0,0.25) 35%,\r\n      rgba(0,0,0,0.2) 40%,\r\n      rgba(0,0,0,0.15) 45%,\r\n      rgba(0,0,0,0.1) 50%,\r\n      rgba(0,0,0,0.1) 90%,\r\n      rgba(0,0,0,0.1) 100%\r\n    )`,\r\n  },\r\n  cardContainer: {\r\n    transition: theme.transitions.create('padding', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    [theme.breakpoints.only('xs')]: {\r\n      padding: theme.spacing(1, 0),\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n      padding: theme.spacing(1),\r\n    },\r\n  },\r\n  itemExtension: {\r\n    maxWidth: '20%',\r\n    flexBasis: '20%',\r\n  },\r\n  rank: {\r\n    fontWeight: '400',\r\n    fontSize: theme.typography.body2.fontSize,\r\n    color: theme.palette.grey[300],\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rankText: {\r\n    fontWeight: 600,\r\n    color: theme.palette.grey[50],\r\n  },\r\n  cardTitle: {\r\n    letterSpacing: '0.02em',\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n  },\r\n  horizontalScrollItemWidth: {\r\n    padding: 0,\r\n    width: theme.spacing(45),\r\n    [theme.breakpoints.only('xs')]: {\r\n      width: `calc(100vw - ${theme.spacing(6)}px)`,\r\n    },\r\n  },\r\n  horizontalScrollItemSpacing: {\r\n    padding: 0,\r\n    paddingBottom: theme.spacing(2),\r\n    [theme.breakpoints.up('md')]: {\r\n      '&:last-child': {\r\n        paddingBottom: 0,\r\n      },\r\n    },\r\n    [theme.breakpoints.only('xs')]: {\r\n      '&:first-child': {\r\n        paddingTop: theme.spacing(1),\r\n      },\r\n    },\r\n  },\r\n  brokenImageContainer: {\r\n    alignItems: 'center',\r\n    display: 'flex',\r\n    height: '100%',\r\n    justifyContent: 'center',\r\n    padding: theme.spacing(1),\r\n    position: 'absolute',\r\n    width: '100%',\r\n  },\r\n  card: {\r\n    backgroundColor: theme.palette.brokenImage.background,\r\n    border: `1px solid ${theme.palette.brokenImage.border}`,\r\n  },\r\n  textImageInvalid: {\r\n    color: theme.palette.text.primary,\r\n  },\r\n}));\r\n\r\nconst ItemCard = ({\r\n  col,\r\n  content,\r\n  drawerOpen,\r\n  handleDrawerToggle,\r\n  hasSpacingHorizontalScroll,\r\n  isHorizontalScroll = false,\r\n  rank,\r\n  type,\r\n}) => {\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.only('xs'));\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const isMovie = type === 'movies';\r\n  const date = isMovie ? content.release_date : content.first_air_date;\r\n  const dateDisplay = date ? ` • ${moment(date).format('MMM D, YYYY')}` : ` • ${NO_DATE_TEXT}`;\r\n\r\n  if (!content) return null;\r\n\r\n  const handleCardClick = () => {\r\n    scrollToID('scroll-to-top-anchor', false);\r\n\r\n    if (handleDrawerToggle && drawerOpen) handleDrawerToggle();\r\n\r\n    if (isMovie) dispatch(moviesActions.setDetailsLoading(true));\r\n    else {\r\n      dispatch(tvShowsActions.setDetailsLoading(true));\r\n    }\r\n  };\r\n\r\n  let isImageValid = true;\r\n  let imagePath = MOVIE_DRAWER_TMDB_IMAGE_PREFIX;\r\n  if (!isMobile && content && content.poster_path) {\r\n    imagePath += `/w780${content.poster_path}`;\r\n  } else if (isMobile && content && content.backdrop_path) {\r\n    imagePath += `/w780${content.backdrop_path}`;\r\n  } else isImageValid = false;\r\n\r\n  return (\r\n    <Grid\r\n      className={clsx(\r\n        classes.cardContainer,\r\n        {\r\n          [classes.itemExtension]: col === 2 && !isHorizontalScroll,\r\n          [classes.horizontalScrollItemWidth]: isHorizontalScroll,\r\n          [classes.horizontalScrollItemSpacing]: hasSpacingHorizontalScroll,\r\n        },\r\n      )}\r\n      item\r\n      xs={col}\r\n    >\r\n      <Link to={`/${type}/${content.id}`}>\r\n        <Card onClick={handleCardClick} variant=\"outlined\" className={classes.card}>\r\n          <CardActionArea>\r\n            {!isImageValid && (\r\n              <BrokenImage\r\n                type=\"cardMedia\"\r\n                extraClass={classes.brokenImageContainer}\r\n              />\r\n            )}\r\n            <CardMedia\r\n              className={clsx(\r\n                classes.media,\r\n                {\r\n                  [classes.mediaDrawerOpen]: drawerOpen,\r\n                  [classes.mediaDrawerClosed]: !drawerOpen,\r\n                },\r\n              )}\r\n              image={imagePath}\r\n            />\r\n            <div\r\n              className={clsx(\r\n                classes.typoOverlay,\r\n                {\r\n                  [classes.typoOverlayBackgroundGradient]: isImageValid,\r\n                  [classes.typoOverlayMediaDrawerOpen]: drawerOpen,\r\n                  [classes.typoOverlayMediaDrawerClosed]: !drawerOpen,\r\n                },\r\n              )}\r\n            >\r\n              <Typography\r\n                variant=\"h6\"\r\n                className={clsx(\r\n                  classes.cardTitle,\r\n                  { [classes.textImageInvalid]: !isImageValid },\r\n                )}\r\n                noWrap\r\n              >\r\n                {truncateText(\r\n                  isMovie\r\n                    ? (content.title || content.original_title)\r\n                    : (content.name || content.original_name),\r\n                  drawerOpen ? 25 : 100,\r\n                  'characters',\r\n                )}\r\n              </Typography>\r\n              <Typography\r\n                className={clsx(\r\n                  classes.rank,\r\n                  { [classes.textImageInvalid]: !isImageValid },\r\n                )}\r\n                color=\"textSecondary\"\r\n              >\r\n                <span\r\n                  className={clsx(\r\n                    classes.rankText,\r\n                    { [classes.textImageInvalid]: !isImageValid },\r\n                  )}\r\n                >\r\n                  {rank}\r\n                </span>\r\n                {dateDisplay}\r\n              </Typography>\r\n            </div>\r\n          </CardActionArea>\r\n        </Card>\r\n      </Link>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nItemCard.defaultProps = {\r\n  col: 12,\r\n  content: PropTypes.shape({\r\n    backdrop_path: '',\r\n    first_air_date: '',\r\n    name: '',\r\n    original_name: '',\r\n    original_title: '',\r\n    poster_path: '',\r\n    release_date: '',\r\n    title: '',\r\n  }),\r\n  drawerOpen: false,\r\n  handleDrawerToggle: () => { },\r\n  hasSpacingHorizontalScroll: false,\r\n  isHorizontalScroll: false,\r\n  rank: 0,\r\n  type: '',\r\n};\r\n\r\nItemCard.propTypes = {\r\n  col: PropTypes.number,\r\n  content: PropTypes.oneOfType([\r\n    PropTypes.shape({\r\n      backdrop_path: PropTypes.string,\r\n      first_air_date: PropTypes.string,\r\n      id: PropTypes.number.isRequired,\r\n      name: PropTypes.string,\r\n      original_name: PropTypes.string,\r\n      original_title: PropTypes.string,\r\n      poster_path: PropTypes.string,\r\n      release_date: PropTypes.string,\r\n      title: PropTypes.string,\r\n    }),\r\n    PropTypes.func,\r\n  ]),\r\n  drawerOpen: PropTypes.bool,\r\n  handleDrawerToggle: PropTypes.func,\r\n  hasSpacingHorizontalScroll: PropTypes.bool,\r\n  isHorizontalScroll: PropTypes.bool,\r\n  rank: PropTypes.number,\r\n  type: PropTypes.string,\r\n};\r\n\r\nexport default ItemCard;\r\n","// ACTION TYPE\nconst browserActionType = {\n  CHANGE_BROWSER_SIZE: '@browser/CHANGE_BROWSER_SIZE',\n};\n\n// ACTIONS\nexport const browserActions = {\n  changeBrowserSize: (height, width) => ({\n    type: browserActionType.CHANGE_BROWSER_SIZE,\n    payload: { height, width },\n  }),\n};\n\n// REDUCER\nconst initialState = {\n  height: window.innerHeight,\n  width: window.innerWidth,\n  scrollY: window.pageYOffset,\n};\n\nconst changeBrowserSize = (state, action) => ({\n  ...state,\n  height: action.payload.height,\n  width: action.payload.width,\n});\n\nexport const browserReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case browserActionType.CHANGE_BROWSER_SIZE: return changeBrowserSize(state, action);\n    default: return state;\n  }\n};\n","// ACTION TYPE\r\nconst moviesActionType = {\r\n  SET_ACTIVE_MOVIE: '@movies/SET_ACTIVE_MOVIE',\r\n  SET_CATEGORY: '@movies/SET_CATEGORY',\r\n  SET_DETAILS_LOADING: '@movies/SET_DETAILS_LOADING',\r\n  SET_MOVIE_LIST: '@movies/SET_MOVIE_LIST',\r\n  SET_SEARCH_RESULTS: '@movies/SET_SEARCH_RESULTS',\r\n};\r\n\r\n// ACTIONS\r\nexport const moviesActions = {\r\n  setCategory: (category) => ({\r\n    type: moviesActionType.SET_CATEGORY,\r\n    payload: { category },\r\n  }),\r\n  setMovieList: (category, list) => ({\r\n    type: moviesActionType.SET_MOVIE_LIST,\r\n    payload: { category, list },\r\n  }),\r\n  setActiveMovie: (movie) => ({\r\n    type: moviesActionType.SET_ACTIVE_MOVIE,\r\n    payload: { movie },\r\n  }),\r\n  setDetailsLoading: (isMovieLoading) => ({\r\n    type: moviesActionType.SET_DETAILS_LOADING,\r\n    payload: { isMovieLoading },\r\n  }),\r\n  setSearchResults: (searchResults) => ({\r\n    type: moviesActionType.SET_SEARCH_RESULTS,\r\n    payload: { searchResults },\r\n  }),\r\n};\r\n\r\n// REDUCER\r\nconst initialState = {\r\n  category: 'trending',\r\n  isMovieLoading: false,\r\n  list: {\r\n    highestGrossing: [],\r\n    nowPlaying: [],\r\n    popular: [],\r\n    topRated: [],\r\n    trending: [],\r\n    upcoming: [],\r\n  },\r\n  loadedContent: 0,\r\n  searchResults: [],\r\n  movie: {},\r\n};\r\n\r\nconst setCategory = (state, action) => ({\r\n  ...state,\r\n  category: action.payload.category,\r\n});\r\n\r\nconst setMovieList = (state, action) => ({\r\n  ...state,\r\n  list: {\r\n    ...state.list,\r\n    [action.payload.category]: action.payload.list,\r\n  },\r\n  loadedContent: state.loadedContent + 1,\r\n});\r\n\r\nconst setActiveMovie = (state, action) => ({\r\n  ...state,\r\n  movie: action.payload.movie,\r\n  castShowMore: false,\r\n  crewShowMore: false,\r\n});\r\n\r\nconst setDetailsLoading = (state, action) => ({\r\n  ...state,\r\n  isMovieLoading: action.payload.isMovieLoading,\r\n});\r\n\r\nconst setSearchResults = (state, action) => ({\r\n  ...state,\r\n  searchResults: action.payload.searchResults,\r\n});\r\n\r\nexport const moviesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case moviesActionType.SET_ACTIVE_MOVIE: return setActiveMovie(state, action);\r\n    case moviesActionType.SET_CATEGORY: return setCategory(state, action);\r\n    case moviesActionType.SET_DETAILS_LOADING: return setDetailsLoading(state, action);\r\n    case moviesActionType.SET_MOVIE_LIST: return setMovieList(state, action);\r\n    case moviesActionType.SET_SEARCH_RESULTS: return setSearchResults(state, action);\r\n    default: return state;\r\n  }\r\n};\r\n","import { encrypt, decrypt } from '../../utils/functions/encrypt';\r\n\r\n// ACTION TYPE\r\nconst sidebarActionType = {\r\n  CLEAR_API_KEY: '@sidebar/CLEAR_API_KEY',\r\n  INCREMENT_SEE_MORE: '@sidebar/INCREMENT_SEE_MORE',\r\n  SET_ACTIVE_TAB: '@sidebar/SET_ACTIVE_TAB',\r\n  SET_API_KEY: '@sidebar/SET_API_KEY',\r\n  SET_DRAWER: '@sidebar/SET_DRAWER',\r\n  SET_ITEM_DRAWER: '@sidebar/SET_ITEM_DRAWER',\r\n  SET_SEARCH: '@sidebar/SET_SEARCH',\r\n  SET_SEARCH_QUERY: '@sidebar/SET_SEARCH_QUERY',\r\n  TOGGLE_DRAWER: '@sidebar/TOGGLE_DRAWER',\r\n  TOGGLE_LIGHTS: '@sidebar/TOGGLE_LIGHTS',\r\n};\r\n\r\n// ACTIONS\r\nexport const sidebarActions = {\r\n  clearAPIKey: () => ({\r\n    type: sidebarActionType.CLEAR_API_KEY,\r\n  }),\r\n  toggleDrawer: () => ({\r\n    type: sidebarActionType.TOGGLE_DRAWER,\r\n  }),\r\n  toggleLights: () => ({\r\n    type: sidebarActionType.TOGGLE_LIGHTS,\r\n  }),\r\n  setActiveTab: (tab) => ({\r\n    type: sidebarActionType.SET_ACTIVE_TAB,\r\n    payload: { tab },\r\n  }),\r\n  setAPIKey: (apiKey, username) => ({\r\n    type: sidebarActionType.SET_API_KEY,\r\n    payload: { apiKey, username },\r\n  }),\r\n  setDrawer: (drawerOpen) => ({\r\n    type: sidebarActionType.SET_DRAWER,\r\n    payload: { drawerOpen },\r\n  }),\r\n  setItemDrawer: (itemDrawerOpen) => ({\r\n    type: sidebarActionType.SET_ITEM_DRAWER,\r\n    payload: { itemDrawerOpen },\r\n  }),\r\n  setSearchQuery: (searchQuery) => ({\r\n    type: sidebarActionType.SET_SEARCH_QUERY,\r\n    payload: { searchQuery },\r\n  }),\r\n  setSearch: (isSearchOpen) => ({\r\n    type: sidebarActionType.SET_SEARCH,\r\n    payload: { isSearchOpen },\r\n  }),\r\n};\r\n\r\n// REDUCER\r\nconst evaluateInitialTab = () => {\r\n  const initialTab = window.location.hash.replace('#/', '');\r\n\r\n  if (initialTab === '') return 'movies';\r\n  if (initialTab.toLowerCase().includes('movies')) return 'movies';\r\n  return 'tvshows';\r\n};\r\n\r\nconst initialApiKey = localStorage.getItem('apiKey') || '';\r\nconst initialUsername = localStorage.getItem('username') || '';\r\n\r\nconst initialState = {\r\n  activeTab: evaluateInitialTab(),\r\n  apiKey: initialApiKey,\r\n  darkMode: localStorage.getItem('darkMode') === 'true',\r\n  drawerOpen: false,\r\n  isSearchOpen: false,\r\n  itemDrawerOpen: true,\r\n  searchQuery: '',\r\n  username: decrypt(initialUsername, initialApiKey),\r\n};\r\n\r\nconst setActiveTab = (state, action) => ({\r\n  ...state,\r\n  activeTab: action.payload.tab,\r\n  isSearchOpen: false,\r\n});\r\n\r\nconst setAPIKey = (state, action) => {\r\n  const apiKey = encrypt(action.payload.apiKey, action.payload.username);\r\n  const username = encrypt(action.payload.username, apiKey);\r\n\r\n  localStorage.setItem('apiKey', apiKey);\r\n  localStorage.setItem('username', username);\r\n\r\n  return ({\r\n    ...state,\r\n    apiKey,\r\n    username: action.payload.username,\r\n  });\r\n};\r\n\r\nconst toggleDrawer = (state) => ({\r\n  ...state,\r\n  drawerOpen: !state.drawerOpen,\r\n});\r\n\r\nconst toggleLights = (state) => {\r\n  if (state.darkMode) localStorage.setItem('darkMode', 'false');\r\n  else localStorage.setItem('darkMode', 'true');\r\n\r\n  return ({\r\n    ...state,\r\n    darkMode: !state.darkMode,\r\n  });\r\n};\r\n\r\nconst clearAPIKey = (state) => {\r\n  localStorage.removeItem('apiKey');\r\n  localStorage.removeItem('username');\r\n\r\n  return ({\r\n    ...state,\r\n    apiKey: '',\r\n    username: '',\r\n  });\r\n};\r\n\r\nconst setDrawer = (state, action) => ({\r\n  ...state,\r\n  drawerOpen: action.payload.drawerOpen,\r\n});\r\n\r\nconst setItemDrawer = (state, action) => ({\r\n  ...state,\r\n  itemDrawerOpen: action.payload.itemDrawerOpen,\r\n});\r\n\r\nconst setSearchQuery = (state, action) => ({\r\n  ...state,\r\n  searchQuery: action.payload.searchQuery,\r\n});\r\n\r\nconst setSearch = (state, action) => ({\r\n  ...state,\r\n  isSearchOpen: action.payload.isSearchOpen,\r\n});\r\n\r\nexport const sidebarReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case sidebarActionType.CLEAR_API_KEY: return clearAPIKey(state, action);\r\n    case sidebarActionType.SET_ACTIVE_TAB: return setActiveTab(state, action);\r\n    case sidebarActionType.SET_API_KEY: return setAPIKey(state, action);\r\n    case sidebarActionType.SET_DRAWER: return setDrawer(state, action);\r\n    case sidebarActionType.SET_ITEM_DRAWER: return setItemDrawer(state, action);\r\n    case sidebarActionType.SET_SEARCH: return setSearch(state, action);\r\n    case sidebarActionType.SET_SEARCH_QUERY: return setSearchQuery(state, action);\r\n    case sidebarActionType.TOGGLE_DRAWER: return toggleDrawer(state);\r\n    case sidebarActionType.TOGGLE_LIGHTS: return toggleLights(state);\r\n    default: return state;\r\n  }\r\n};\r\n","// ACTION TYPE\nconst snackbarActionType = {\n  HIDE_SNACKBAR: '@snackbar/HIDE_SNACKBAR',\n  SHOW_SNACKBAR: '@snackbar/SHOW_SNACKBAR',\n};\n\n// ACTIONS\nexport const snackbarActions = {\n  showSnackbar: (snackbarMessage, variant) => ({\n    type: snackbarActionType.SHOW_SNACKBAR,\n    payload: { snackbarMessage, variant },\n  }),\n  hideSnackbar: () => ({\n    type: snackbarActionType.HIDE_SNACKBAR,\n  }),\n};\n\n// REDUCER\nconst initialState = {\n  snackbarMessage: '',\n  variant: 'success',\n  isShown: false,\n};\n\nconst showSnackbar = (state, action) => ({\n  ...state,\n  isShown: true,\n  variant: action.payload.variant,\n  snackbarMessage: action.payload.snackbarMessage,\n});\n\nconst hideSnackbar = (state) => ({\n  ...state,\n  isShown: false,\n});\n\nexport const snackbarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case snackbarActionType.HIDE_SNACKBAR: return hideSnackbar(state);\n    case snackbarActionType.SHOW_SNACKBAR: return showSnackbar(state, action);\n    default: return state;\n  }\n};\n","// ACTION TYPE\r\nconst tmdbConfigActionType = {\r\n  SET_COUNTRY_CONFIG: '@tmdbConfig/SET_COUNTRY_CONFIG',\r\n};\r\n\r\n// ACTIONS\r\nexport const tmdbConfigActions = {\r\n  setCountryConfig: (countryConfig) => ({\r\n    type: tmdbConfigActionType.SET_COUNTRY_CONFIG,\r\n    payload: { countryConfig },\r\n  }),\r\n};\r\n\r\n// REDUCER\r\nconst initialState = {\r\n  countryConfig: [],\r\n};\r\n\r\nconst setCountryConfig = (state, action) => ({\r\n  ...state,\r\n  countryConfig: action.payload.countryConfig,\r\n});\r\n\r\nexport const tmdbConfigReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case tmdbConfigActionType.SET_COUNTRY_CONFIG: return setCountryConfig(state, action);\r\n    default: return state;\r\n  }\r\n};\r\n","// ACTION TYPE\r\nconst tvShowsActionType = {\r\n  SET_ACTIVE_TV_SHOW: '@tvShows/SET_ACTIVE_TV_SHOW',\r\n  SET_CATEGORY: '@tvShows/SET_CATEGORY',\r\n  SET_DETAILS_LOADING: '@tvShows/SET_DETAILS_LOADING',\r\n  SET_EPISODE: '@tvShows/SET_EPISODE',\r\n  SET_SEARCH_RESULTS: '@tvShows/SET_SEARCH_RESULTS',\r\n  SET_SELECTED_SEASON: '@tvShows/SET_SELECTED_SEASON',\r\n  SET_TV_SHOWS_LIST: '@tvShows/SET_TV_SHOWS_LIST',\r\n};\r\n\r\n// ACTIONS\r\nexport const tvShowsActions = {\r\n  setCategory: (category) => ({\r\n    type: tvShowsActionType.SET_CATEGORY,\r\n    payload: { category },\r\n  }),\r\n  setTVShowsList: (category, list) => ({\r\n    type: tvShowsActionType.SET_TV_SHOWS_LIST,\r\n    payload: { category, list },\r\n  }),\r\n  setActiveTVShow: (tvShow, episodes, selectedSeason) => ({\r\n    type: tvShowsActionType.SET_ACTIVE_TV_SHOW,\r\n    payload: { tvShow, episodes, selectedSeason },\r\n  }),\r\n  setDetailsLoading: (isTVShowLoading) => ({\r\n    type: tvShowsActionType.SET_DETAILS_LOADING,\r\n    payload: { isTVShowLoading },\r\n  }),\r\n  setEpisode: (episodes) => ({\r\n    type: tvShowsActionType.SET_EPISODE,\r\n    payload: { episodes },\r\n  }),\r\n  setSelectedSeason: (selectedSeason) => ({\r\n    type: tvShowsActionType.SET_SELECTED_SEASON,\r\n    payload: { selectedSeason },\r\n  }),\r\n  setSearchResults: (searchResults) => ({\r\n    type: tvShowsActionType.SET_SEARCH_RESULTS,\r\n    payload: { searchResults },\r\n  }),\r\n};\r\n\r\n// REDUCER\r\nconst initialState = {\r\n  category: 'trending',\r\n  episodes: [],\r\n  isSeasonLoading: false,\r\n  isTVShowLoading: false,\r\n  list: {\r\n    airingToday: [],\r\n    onTheAir: [],\r\n    popular: [],\r\n    topRated: [],\r\n    trending: [],\r\n  },\r\n  loadedContent: 0,\r\n  searchResults: [],\r\n  selectedSeason: 0,\r\n  tvShow: {},\r\n};\r\n\r\nconst setCategory = (state, action) => ({\r\n  ...state,\r\n  category: action.payload.category,\r\n});\r\n\r\nconst setTVShowsList = (state, action) => ({\r\n  ...state,\r\n  list: {\r\n    ...state.list,\r\n    [action.payload.category]: action.payload.list,\r\n  },\r\n  loadedContent: state.loadedContent + 1,\r\n});\r\n\r\nconst setActiveTVShow = (state, action) => {\r\n  const descendingEpisodes = action.payload.episodes && action.payload.episodes.length > 0\r\n    ? action.payload.episodes.sort((a, b) => b.episode_number - a.episode_number)\r\n    : [];\r\n\r\n  return {\r\n    ...state,\r\n    episodes: descendingEpisodes,\r\n    selectedSeason: action.payload.selectedSeason,\r\n    tvShow: action.payload.tvShow,\r\n  };\r\n};\r\n\r\nconst setDetailsLoading = (state, action) => ({\r\n  ...state,\r\n  isTVShowLoading: action.payload.isTVShowLoading,\r\n});\r\n\r\nconst setEpisode = (state, action) => ({\r\n  ...state,\r\n  episodes: action.payload.episodes.sort((a, b) => b.episode_number - a.episode_number),\r\n  isSeasonLoading: false,\r\n});\r\n\r\nconst setSelectedSeason = (state, action) => ({\r\n  ...state,\r\n  isSeasonLoading: true,\r\n  selectedSeason: action.payload.selectedSeason,\r\n});\r\n\r\nconst setSearchResults = (state, action) => ({\r\n  ...state,\r\n  searchResults: action.payload.searchResults,\r\n});\r\n\r\nexport const tvShowsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case tvShowsActionType.SET_ACTIVE_TV_SHOW: return setActiveTVShow(state, action);\r\n    case tvShowsActionType.SET_CATEGORY: return setCategory(state, action);\r\n    case tvShowsActionType.SET_DETAILS_LOADING: return setDetailsLoading(state, action);\r\n    case tvShowsActionType.SET_EPISODE: return setEpisode(state, action);\r\n    case tvShowsActionType.SET_SEARCH_RESULTS: return setSearchResults(state, action);\r\n    case tvShowsActionType.SET_SELECTED_SEASON: return setSelectedSeason(state, action);\r\n    case tvShowsActionType.SET_TV_SHOWS_LIST: return setTVShowsList(state, action);\r\n    default: return state;\r\n  }\r\n};\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n  IconButton,\n  ListItemText,\n  ListItem,\n  ListItemIcon,\n  MenuItem,\n} from '@material-ui/core';\nimport {\n  Brightness2TwoTone,\n  BrightnessLowTwoTone,\n} from '@material-ui/icons';\n\nimport { sidebarActions } from '../../reducers/ducks';\n\nconst DarkModeToggle = ({ type, edge }) => {\n  const darkMode = useSelector((state) => state.sidebar.darkMode);\n  const dispatch = useDispatch();\n\n  const handleToggleLights = () => {\n    dispatch(sidebarActions.toggleLights());\n  };\n\n  switch (type) {\n    case 'iconButton':\n      return (\n        <IconButton aria-label=\"menu\" onClick={handleToggleLights} edge={edge}>\n          {darkMode ? <Brightness2TwoTone /> : <BrightnessLowTwoTone />}\n        </IconButton>\n      );\n    case 'listItem':\n      return (\n        <ListItem button onClick={handleToggleLights}>\n          <ListItemIcon>\n            {darkMode ? <Brightness2TwoTone /> : <BrightnessLowTwoTone />}\n          </ListItemIcon>\n          <ListItemText primary=\"Toggle lights\" />\n        </ListItem>\n      );\n    case 'menuItem':\n      return (\n        <MenuItem onClick={handleToggleLights}>\n          Toggle lights\n        </MenuItem>\n      );\n    default:\n      return <div>Type not supported.</div>;\n  }\n};\n\nDarkModeToggle.defaultProps = {\n  edge: '',\n};\n\nDarkModeToggle.propTypes = {\n  edge: PropTypes.string,\n  type: PropTypes.string.isRequired,\n};\n\nexport default DarkModeToggle;\n"],"sourceRoot":""}